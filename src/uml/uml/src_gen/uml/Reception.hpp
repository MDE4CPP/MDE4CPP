//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef UML_RECEPTION_HPP
#define UML_RECEPTION_HPP


#include <memory>
#include <string>
// forward declarations


//*********************************
// generated Includes

//Forward Declaration for used types 
namespace uml 
{
	class Behavior;
	class Classifier;
	class Comment;
	class Constraint;
	class Dependency;
	class ElementImport;
	class PackageImport;
	class PackageableElement;
	class Parameter;
	class ParameterSet;
	class Signal;
	class StringExpression;
	class Type;
}

// namespace macro header include
#include "uml/uml.hpp"

// base class includes
#include "uml/BehavioralFeature.hpp"

// enum includes
#include "uml/CallConcurrencyKind.hpp"
#include "uml/VisibilityKind.hpp"



//*********************************
namespace uml 
{
	/*!
	A Reception is a declaration stating that a Classifier is prepared to react to the receipt of a Signal.
	<p>From package UML::SimpleClassifiers.</p>
	*/
	
	class UML_API Reception : virtual public BehavioralFeature
	{
		public:
 			Reception(const Reception &) {}

		protected:
			Reception(){}

		public:
			virtual std::shared_ptr<ecore::EObject> copy() const = 0;

			//destructor
			virtual ~Reception() {}

			//*********************************
			// Operations
			//*********************************

			//*********************************
			// Attribute Getters & Setters
			//*********************************

			//*********************************
			// Reference Getters & Setters
			//*********************************
			/*!
			The Signal that this Reception handles.
			<p>From package UML::SimpleClassifiers.</p>
			*/
			
			virtual std::shared_ptr<uml::Signal> getSignal() const = 0;
			/*!
			The Signal that this Reception handles.
			<p>From package UML::SimpleClassifiers.</p>
			*/
			
			virtual void setSignal(std::shared_ptr<uml::Signal>) = 0;

			//*********************************
			// Union Reference Getters
			//*********************************

			//*********************************
			// Container Getter
			//*********************************
			virtual std::shared_ptr<ecore::EObject> eContainer() const = 0; 

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			
			//*********************************
			// Reference Members
			//*********************************
			/*!
			The Signal that this Reception handles.
			<p>From package UML::SimpleClassifiers.</p>
			*/
			
			std::shared_ptr<uml::Signal> m_signal;
	};
}
#endif /* end of include guard: UML_RECEPTION_HPP */

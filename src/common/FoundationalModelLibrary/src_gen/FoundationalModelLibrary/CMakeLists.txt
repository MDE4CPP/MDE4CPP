#############################################################################
#																			#
#		 			CMakeList created by UML4CPP Generator					# 
#																			#
#############################################################################

# C++ project of model FoundationalModelLibrary.uml, generated by UML4CPP

CMAKE_MINIMUM_REQUIRED(VERSION 3.9)

PROJECT(FoundationalModelLibrary)

IF(NOT CMAKE_BUILD_TYPE) 
    SET(CMAKE_BUILD_TYPE Debug)
ENDIF(NOT CMAKE_BUILD_TYPE)
SET(CMAKE_DEBUG_POSTFIX d)

SET(CMAKE_CXX_STANDARD 17)

SET(CMAKE_CXX_FLAGS "-Wall -Wno-overloaded-virtual -Wdeprecated-declarations -fmax-errors=5")
IF(APPLE)
  string(APPEND CMAKE_CXX_FLAGS " -Qunused-arguments")
ENDIF(APPLE)

SET(CMAKE_CXX_FLAGS_DEBUG " -Og -ggdb")
SET(CMAKE_CXX_FLAGS_RELEASE " -O3 -DNDEBUG")

string(REPLACE "\\" "/" MDE4CPP_HOME $ENV{MDE4CPP_HOME})

SET(SOURCE_FILES
	# Model plugin
	impl/FoundationalModelLibraryPluginImpl.cpp
	# Package of FoundationalModelLibrary
	impl/FoundationalModelLibraryPackageImpl.cpp
	# Factory of FoundationalModelLibrary
	impl/FoundationalModelLibraryFactoryImpl.cpp
	# Contents of FoundationalModelLibrary
	
	# Package of FoundationalModelLibrary::PrimitiveBehaviors
	PrimitiveBehaviors/impl/PrimitiveBehaviorsPackageImpl.cpp
	# Factory of FoundationalModelLibrary::PrimitiveBehaviors
	PrimitiveBehaviors/impl/PrimitiveBehaviorsFactoryImpl.cpp
	# Contents of FoundationalModelLibrary::PrimitiveBehaviors
	
	# Package of FoundationalModelLibrary::PrimitiveBehaviors::IntegerFunctions
	PrimitiveBehaviors/IntegerFunctions/impl/IntegerFunctionsPackageImpl.cpp
	# Factory of FoundationalModelLibrary::PrimitiveBehaviors::IntegerFunctions
	PrimitiveBehaviors/IntegerFunctions/impl/IntegerFunctionsFactoryImpl.cpp
	# Global functions of FoundationalModelLibrary::PrimitiveBehaviors::IntegerFunctions
	PrimitiveBehaviors/IntegerFunctions/_GlobalFunctions.cpp
	# Contents of FoundationalModelLibrary::PrimitiveBehaviors::IntegerFunctions
	
	
	# Package of FoundationalModelLibrary::PrimitiveBehaviors::UnlimitedNaturalFunctions
	PrimitiveBehaviors/UnlimitedNaturalFunctions/impl/UnlimitedNaturalFunctionsPackageImpl.cpp
	# Factory of FoundationalModelLibrary::PrimitiveBehaviors::UnlimitedNaturalFunctions
	PrimitiveBehaviors/UnlimitedNaturalFunctions/impl/UnlimitedNaturalFunctionsFactoryImpl.cpp
	# Global functions of FoundationalModelLibrary::PrimitiveBehaviors::UnlimitedNaturalFunctions
	PrimitiveBehaviors/UnlimitedNaturalFunctions/_GlobalFunctions.cpp
	# Contents of FoundationalModelLibrary::PrimitiveBehaviors::UnlimitedNaturalFunctions
	
	
	# Package of FoundationalModelLibrary::PrimitiveBehaviors::RealFunctions
	PrimitiveBehaviors/RealFunctions/impl/RealFunctionsPackageImpl.cpp
	# Factory of FoundationalModelLibrary::PrimitiveBehaviors::RealFunctions
	PrimitiveBehaviors/RealFunctions/impl/RealFunctionsFactoryImpl.cpp
	# Global functions of FoundationalModelLibrary::PrimitiveBehaviors::RealFunctions
	PrimitiveBehaviors/RealFunctions/_GlobalFunctions.cpp
	# Contents of FoundationalModelLibrary::PrimitiveBehaviors::RealFunctions
	
	
	# Package of FoundationalModelLibrary::PrimitiveBehaviors::BooleanFunctions
	PrimitiveBehaviors/BooleanFunctions/impl/BooleanFunctionsPackageImpl.cpp
	# Factory of FoundationalModelLibrary::PrimitiveBehaviors::BooleanFunctions
	PrimitiveBehaviors/BooleanFunctions/impl/BooleanFunctionsFactoryImpl.cpp
	# Global functions of FoundationalModelLibrary::PrimitiveBehaviors::BooleanFunctions
	PrimitiveBehaviors/BooleanFunctions/_GlobalFunctions.cpp
	# Contents of FoundationalModelLibrary::PrimitiveBehaviors::BooleanFunctions
	
	
	# Package of FoundationalModelLibrary::PrimitiveBehaviors::StringFunctions
	PrimitiveBehaviors/StringFunctions/impl/StringFunctionsPackageImpl.cpp
	# Factory of FoundationalModelLibrary::PrimitiveBehaviors::StringFunctions
	PrimitiveBehaviors/StringFunctions/impl/StringFunctionsFactoryImpl.cpp
	# Global functions of FoundationalModelLibrary::PrimitiveBehaviors::StringFunctions
	PrimitiveBehaviors/StringFunctions/_GlobalFunctions.cpp
	# Contents of FoundationalModelLibrary::PrimitiveBehaviors::StringFunctions
	
	
	
	# Package of FoundationalModelLibrary::Common
	Common/impl/CommonPackageImpl.cpp
	# Factory of FoundationalModelLibrary::Common
	Common/impl/CommonFactoryImpl.cpp
	# Contents of FoundationalModelLibrary::Common
	Common/impl/ListenerImpl.cpp
	Common/impl/StatusImpl.cpp
	
	
	# Package of FoundationalModelLibrary::BasicInputOutput
	BasicInputOutput/impl/BasicInputOutputPackageImpl.cpp
	# Factory of FoundationalModelLibrary::BasicInputOutput
	BasicInputOutput/impl/BasicInputOutputFactoryImpl.cpp
	# Contents of FoundationalModelLibrary::BasicInputOutput
	BasicInputOutput/impl/ActiveChannelImpl.cpp
	BasicInputOutput/impl/ChannelImpl.cpp
	BasicInputOutput/impl/InputChannelImpl.cpp
	BasicInputOutput/impl/OutputChannelImpl.cpp
	BasicInputOutput/impl/StandardInputChannelImpl.cpp
	BasicInputOutput/impl/StandardOutputChannelImpl.cpp
	BasicInputOutput/impl/TextInputChannelImpl.cpp
	BasicInputOutput/impl/TextOutputChannelImpl.cpp
	
	
	
	${MDE4CPP_HOME}/application/include/util/util.cpp
)

INCLUDE_DIRECTORIES(
	../
	${MDE4CPP_HOME}/application/include
)

# Apple specific stuff
IF(APPLE)
  SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -undefined dynamic_lookup")
  SET(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} -undefined dynamic_lookup")
ENDIF(APPLE)

IF(UNIX AND NOT APPLE)
    # for Linux, BSD, Solaris, Minix
	IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
		FIND_LIBRARY(ECORE_DEBUG ecored.so ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(UML_DEBUG umld.so ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(ECOREREFLECTION_DEBUG ecoreReflectiond.so ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(PRIMITIVETYPESREFLECTION_DEBUG primitivetypesReflectiond.so ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(UMLREFLECTION_DEBUG umlReflectiond.so ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(FUML_DEBUG fUMLd.so ${MDE4CPP_HOME}/application/bin)
		
	ELSE()
		FIND_LIBRARY(ECORE_RELEASE ecore.so ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(UML_RELEASE uml.so ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(ECOREREFLECTION_RELEASE ecoreReflection.so ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(PRIMITIVETYPESREFLECTION_RELEASE primitivetypesReflection.so ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(UMLREFLECTION_RELEASE umlReflection.so ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(FUML_RELEASE fUML.so ${MDE4CPP_HOME}/application/bin)
		
	ENDIF()
ELSEIF(APPLE)
	IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
		FIND_LIBRARY(ECORE_DEBUG ecored.dylib ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(UML_DEBUG umld.dylib ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(ECOREREFLECTION_DEBUG ecoreReflectiond.dylib ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(PRIMITIVETYPESREFLECTION_DEBUG primitivetypesReflectiond.dylib ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(UMLREFLECTION_DEBUG umlReflectiond.dylib ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(FUML_DEBUG fUMLd.dylib ${MDE4CPP_HOME}/application/bin)
		
	ELSE()
		FIND_LIBRARY(ECORE_RELEASE ecore.dylib ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(UML_RELEASE uml.dylib ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(ECOREREFLECTION_RELEASE ecoreReflection.dylib ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(PRIMITIVETYPESREFLECTION_RELEASE primitivetypesReflection.dylib ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(UMLREFLECTION_RELEASE umlReflection.dylib ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(FUML_RELEASE fUML.dylib ${MDE4CPP_HOME}/application/bin)
		
	ENDIF()
ELSE()
	IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
		FIND_LIBRARY(ECORE_DEBUG ecored ${MDE4CPP_HOME}/application/lib)
		FIND_LIBRARY(UML_DEBUG umld ${MDE4CPP_HOME}/application/lib)
		FIND_LIBRARY(ECOREREFLECTION_DEBUG ecoreReflectiond ${MDE4CPP_HOME}/application/lib)
		FIND_LIBRARY(PRIMITIVETYPESREFLECTION_DEBUG primitivetypesReflectiond ${MDE4CPP_HOME}/application/lib)
		FIND_LIBRARY(UMLREFLECTION_DEBUG umlReflectiond ${MDE4CPP_HOME}/application/lib)
		FIND_LIBRARY(FUML_DEBUG fUMLd ${MDE4CPP_HOME}/application/lib)
		
	ELSE()
		FIND_LIBRARY(ECORE_RELEASE ecore ${MDE4CPP_HOME}/application/lib)
		FIND_LIBRARY(UML_RELEASE uml ${MDE4CPP_HOME}/application/lib)
		FIND_LIBRARY(ECOREREFLECTION_RELEASE ecoreReflection ${MDE4CPP_HOME}/application/lib)
		FIND_LIBRARY(PRIMITIVETYPESREFLECTION_RELEASE primitivetypesReflection ${MDE4CPP_HOME}/application/lib)
		FIND_LIBRARY(UMLREFLECTION_RELEASE umlReflection ${MDE4CPP_HOME}/application/lib)
		FIND_LIBRARY(FUML_RELEASE fUML ${MDE4CPP_HOME}/application/lib)
		
	ENDIF()
ENDIF()

ADD_LIBRARY(${PROJECT_NAME} SHARED ${SOURCE_FILES})
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES PREFIX "")

IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
	TARGET_LINK_LIBRARIES(${PROJECT_NAME}
		debug ${ECORE_DEBUG}
		debug ${UML_DEBUG}
		debug ${ECOREREFLECTION_DEBUG}
		debug ${PRIMITIVETYPESREFLECTION_DEBUG}
		debug ${UMLREFLECTION_DEBUG}
		debug ${FUML_DEBUG}
	)
ELSE()
	TARGET_LINK_LIBRARIES(${PROJECT_NAME}
		optimized ${ECORE_RELEASE}
		optimized ${UML_RELEASE}
		optimized ${ECOREREFLECTION_RELEASE}
		optimized ${PRIMITIVETYPESREFLECTION_RELEASE}
		optimized ${UMLREFLECTION_RELEASE}
		optimized ${FUML_RELEASE}
	)
ENDIF()

#-----------------------------------------------------
# DELIVERING binaries and header to ${MDE4CPP_HOME}
#-----------------------------------------------------

INSTALL(TARGETS ${PROJECT_NAME}
	RUNTIME DESTINATION ${MDE4CPP_HOME}/application/bin
    LIBRARY DESTINATION ${MDE4CPP_HOME}/application/bin
    ARCHIVE DESTINATION ${MDE4CPP_HOME}/application/lib
)

INSTALL(DIRECTORY . DESTINATION ${MDE4CPP_HOME}/application/include/${PROJECT_NAME}
	FILES_MATCHING PATTERN "*.hpp"
	PATTERN ".cmake" EXCLUDE
)

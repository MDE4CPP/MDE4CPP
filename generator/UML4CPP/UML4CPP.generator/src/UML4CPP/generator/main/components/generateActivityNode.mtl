[comment encoding = UTF-8 /]
[**
 * Copyright (c) 2017 TU Ilmenau, Systems and Software Engineering Group
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), 
 * to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 * and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 ****************************************************************************************************************************************************************
 * 
 * module for generation of UML Element ActivityNode artefacts and Pin Artefacts
 * 
 */]
[module generateActivityNode('http://www.eclipse.org/uml2/5.0.0/UML')]

[import UML4CPP::generator::main::components::generateActivityEdge /]
[import UML4CPP::generator::main::components::generateType /]
[import UML4CPP::generator::main::helpers::generalHelper /]
[import UML4CPP::generator::main::helpers::nameHelper /]
[import UML4CPP::generator::main::validation::validateModel /]

[query private getOwnerPropertyName(anActivityNode : ActivityNode) : String = if (anActivityNode.owner.oclIsKindOf(Activity)) then 'Activity' else 'InStructuredNode' endif /]

[**
 * generate creation of meta model instance for an ActivtiyNode or derived element
 * 
 * this includes:
 * - creation of ActivityNode or derived element
 * - creation of derived element specific artefacts by calling template generateActivityNodeSpecial
*/]
[template public generateActivityNodeCreation(anActivityNode : ActivityNode)]
//ActivityNode [anActivityNode.name /] ([anActivityNode.eClass().name/])
[anActivityNode.memberName()/] = factory->create[anActivityNode.eClass().name/]_in_[anActivityNode.getOwnerPropertyName()/]([anActivityNode.owner.oclAsType(NamedElement).memberName()/]);
[anActivityNode.generateActivityNodeSpecial()/]

[/template]

[**
 * generate elements for AddStructuralFeatureValueAction
*/]
[template private generateActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(AddStructuralFeatureValueAction))]
[let action : AddStructuralFeatureValueAction = self.oclAsType(AddStructuralFeatureValueAction)]
[if (action.object.oclIsUndefined())]
['UML4CPP_Generation Error: AddStructuralFeatureValueAction: '.concat(action.name).concat('object pin is undefined.').registerError()/]
[else]
	[action.object.memberName()/] = factory->create[action.object.eClass().name/]_in_StructuralFeatureAction([action.object.owner.oclAsType(NamedElement).memberName()/]);
	[action.memberName()/]->getInput()->push_back([action.object.memberName()/]); // subset/union in not implemented for upper=1
[/if]
[if (action.value.oclIsUndefined())]
['UML4CPP_Generation Error: AddStructuralFeatureValueAction: '.concat(action.name).concat('value pin is undefined.').registerError()/]
[else]
	[action.value.memberName()/] = factory->create[action.value.eClass().name/]_in_WriteStructuralFeatureAction([action.value.owner.oclAsType(NamedElement).memberName()/]);
	[action.memberName()/]->getInput()->push_back([action.value.memberName()/]); // subset/union in not implemented for upper=1
[/if]
[if (action.result.oclIsUndefined())]
['UML4CPP_Generation Error: AddStructuralFeatureValueAction: '.concat(action.name).concat('result pin is undefined.').registerError()/]
[else]
	[action.result.memberName()/] = factory->create[action.result.eClass().name/]_in_WriteStructuralFeatureAction([action.result.owner.oclAsType(NamedElement).memberName()/]);
	[action.memberName()/]->getOutput()->push_back([action.result.memberName()/]); // subset/union in not implemented for upper=1
[/if]
[if (not action.insertAt.oclIsUndefined())]
	[action.insertAt.memberName()/] = factory->create[action.insertAt.eClass().name/]_in_AddStructuralFeatureValueAction([action.insertAt.owner.oclAsType(NamedElement).memberName()/]);
	[action.memberName()/]->getInput()->push_back([action.insertAt.memberName()/]); // subset/union in not implemented for upper=1
[/if]
[/let]
[/template]

[**
 * generate elements for CallBehaviorAction
*/]
[template private generateActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(CallAction))]
[let action : CallAction = self.oclAsType(CallAction)]
[for (resultPin : OutputPin | action.result)]
[if (resultPin.oclIsUndefined())]
['UML4CPP_Generation Error: '.concat(action.eClass().name).concat(': ').concat(action.name).concat('result pin is undefined.').registerError()/]
[else]
	[resultPin.memberName()/] = factory->create[resultPin.eClass().name/]_in_CallAction([resultPin.owner.oclAsType(NamedElement).memberName()/]);
[/if]
[/for]
[for (argumentPin : InputPin | action.argument)]
[if (argumentPin.oclIsUndefined())]
['UML4CPP_Generation Error: CallBehaviorAction: '.concat(action.name).concat('argument pin is undefined.').registerError()/]
[else]
	[argumentPin.memberName()/] = factory->create[argumentPin.eClass().name/]_in_InvocationAction([argumentPin.owner.oclAsType(NamedElement).memberName()/]);
[/if]
[/for]
[if (anActivityNode.oclIsKindOf(CallOperationAction))]
[let coaction : CallOperationAction = self.oclAsType(CallOperationAction)]
[if (coaction.target.oclIsUndefined())]
['UML4CPP_Generation Error: CallOperationAction: '.concat(action.name).concat('target pin is undefined.').registerError()/]
[else]
	[coaction.target.memberName()/] = factory->create[coaction.target.eClass().name/]_in_CallOperationAction([coaction.target.owner.oclAsType(NamedElement).memberName()/]);
	[action.memberName()/]->getInput()->push_back([coaction.target.memberName()/]); // subset/union in not implemented for upper=1
[/if]
[/let]
[/if]
[/let]
[/template]

[**
 * generate elements for ClearStructuralFeatureAction
*/]
[template private generateActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(ClearStructuralFeatureAction))]
[let action : ClearStructuralFeatureAction = self.oclAsType(ClearStructuralFeatureAction)]
[if (action.object.oclIsUndefined())]
['UML4CPP_Generation Error: ClearStructuralFeatureAction: '.concat(action.name).concat('object pin is undefined.').registerError()/]
[else]
	[action.object.memberName()/] = factory->create[action.object.eClass().name/]_in_StructuralFeatureAction([action.object.owner.oclAsType(NamedElement).memberName()/]);
	[action.memberName()/]->getInput()->push_back([action.object.memberName()/]); // subset/union in not implemented for upper=1
[/if]
[if (action.result.oclIsUndefined())]
['UML4CPP_Generation Error: ClearStructuralFeatureAction: '.concat(action.name).concat('result pin is undefined.').registerError()/]
[else]
	[action.result.memberName()/] = factory->create[action.result.eClass().name/]_in_ClearStructuralFeatureAction([action.result.owner.oclAsType(NamedElement).memberName()/]);
	[action.memberName()/]->getOutput()->push_back([action.result.memberName()/]); // subset/union in not implemented for upper=1
[/if]
[/let]
[/template]

[**
 * generate elements for CreateObjectAction
*/]
[template private generateActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(CreateObjectAction))]
[let action : CreateObjectAction = self.oclAsType(CreateObjectAction)]
[if (action.result.oclIsUndefined())]
['UML4CPP_Generation Error: CreateObjectAction: '.concat(action.name).concat('result pin is undefined.').registerError()/]
[else]
	[action.result.memberName()/] = factory->create[action.result.eClass().name/]_in_CreateObjectAction([action.result.owner.oclAsType(NamedElement).memberName()/]);
	[action.memberName()/]->getOutput()->push_back([action.result.memberName()/]); // subset/union in not implemented for upper=1
[/if]
[/let]
[/template]

[**
 * generate elements for DestroyObjectAction
*/]
[template private generateActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(DestroyObjectAction))]
[let action : DestroyObjectAction = self.oclAsType(DestroyObjectAction)]
[if (action.target.oclIsUndefined())]
['UML4CPP_Generation Error: DestroyObjectAction: '.concat(action.name).concat('target pin is undefined.').registerError()/]
[else]
	[action.target.memberName()/] = factory->create[action.target.eClass().name/]_in_DestroyObjectAction([action.target.owner.oclAsType(NamedElement).memberName()/]);
	[action.memberName()/]->getInput()->push_back([action.target.memberName()/]); // subset/union in not implemented for upper=1
[/if]
[/let]
[/template]

[**
 * generate elements for ExpansionRegion
*/]
[template private generateActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(ExpansionRegion))]
[let region : ExpansionRegion = self.oclAsType(ExpansionRegion)]
	[region.node.generateActivityNodeCreation()/]
	[region.edge.generateActivityEdgeCreation()/]
[/let]
[/template]

[**
 * generate elements for ReadSelfAction
*/]
[template private generateActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(ReadSelfAction))]
[let action : ReadSelfAction = self.oclAsType(ReadSelfAction)]
[if (action.result.oclIsUndefined())]
['UML4CPP_Generation Error: ReadSelfAction: '.concat(action.name).concat('result pin is undefined.').registerError()/]
[else]
	[action.result.memberName()/] = factory->create[action.result.eClass().name/]_in_ReadSelfAction([action.result.owner.oclAsType(NamedElement).memberName()/]);
	[action.memberName()/]->getOutput()->push_back([action.result.memberName()/]); // subset/union in not implemented for upper=1
[/if]
[/let]
[/template]

[**
 * generate elements for ReadStructuralFeatureAction
*/]
[template private generateActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(ReadStructuralFeatureAction))]
[let action : ReadStructuralFeatureAction = self.oclAsType(ReadStructuralFeatureAction)]
[if (action.object.oclIsUndefined())]
['UML4CPP_Generation Error: ReadStructuralFeatureAction: '.concat(action.name).concat('object pin is undefined.').registerError()/]
[else]
	[action.object.memberName()/] = factory->create[action.object.eClass().name/]_in_StructuralFeatureAction([action.object.owner.oclAsType(NamedElement).memberName()/]);
	[action.memberName()/]->getInput()->push_back([action.object.memberName()/]); // subset/union in not implemented for upper=1
[/if]
[if (action.result.oclIsUndefined())]
['UML4CPP_Generation Error: ReadStructuralFeatureAction: '.concat(action.name).concat('result pin is undefined.').registerError()/]
[else]
	[action.result.memberName()/] = factory->create[action.result.eClass().name/]_in_ReadStructuralFeatureAction([action.result.owner.oclAsType(NamedElement).memberName()/]);
	[action.memberName()/]->getOutput()->push_back([action.result.memberName()/]); // subset/union in not implemented for upper=1
[/if]
[/let]
[/template]

[**
 * generate elements for RemoveStructuralFeatureValueAction
*/]
[template private generateActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(RemoveStructuralFeatureValueAction))]
[let action : RemoveStructuralFeatureValueAction = self.oclAsType(RemoveStructuralFeatureValueAction)]
[if (action.object.oclIsUndefined())]
['UML4CPP_Generation Error: RemoveStructuralFeatureValueAction: '.concat(action.name).concat('object pin is undefined.').registerError()/]
[else]
	[action.object.memberName()/] = factory->create[action.object.eClass().name/]_in_StructuralFeatureAction([action.object.owner.oclAsType(NamedElement).memberName()/]);
	[action.memberName()/]->getInput()->push_back([action.object.memberName()/]); // subset/union in not implemented for upper=1
[/if]
[if (action.value.oclIsUndefined())]
['UML4CPP_Generation Error: RemoveStructuralFeatureValueAction: '.concat(action.name).concat('value pin is undefined.').registerError()/]
[else]
	[action.value.memberName()/] = factory->create[action.value.eClass().name/]_in_WriteStructuralFeatureAction([action.value.owner.oclAsType(NamedElement).memberName()/]);
	[action.memberName()/]->getInput()->push_back([action.value.memberName()/]); // subset/union in not implemented for upper=1
[/if]
[if (action.result.oclIsUndefined())]
['UML4CPP_Generation Error: RemoveStructuralFeatureValueAction: '.concat(action.name).concat('result pin is undefined.').registerError()/]
[else]
	[action.result.memberName()/] = factory->create[action.result.eClass().name/]_in_WriteStructuralFeatureAction([action.result.owner.oclAsType(NamedElement).memberName()/]);
	[action.memberName()/]->getOutput()->push_back([action.result.memberName()/]); // subset/union in not implemented for upper=1
[/if]
[if (not action.removeAt.oclIsUndefined())]
	[action.removeAt.memberName()/] = factory->create[action.removeAt.eClass().name/]_in_AddStructuralFeatureValueAction([action.removeAt.owner.oclAsType(NamedElement).memberName()/]);
	[action.memberName()/]->getInput()->push_back([action.removeAt.memberName()/]); // subset/union in not implemented for upper=1
[/if]
[/let]
[/template]

[**
 * generate elements for ValueSpecificationAction
*/]
[template private generateActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(ValueSpecificationAction))]
[let action : ValueSpecificationAction = self.oclAsType(ValueSpecificationAction)]
[if (action.result.oclIsUndefined())]
['UML4CPP_Generation Error: ValueSpecificationAction: '.concat(action.name).concat('result pin is undefined.').registerError()/]
[else]
	[action.result.memberName()/] = factory->create[action.result.eClass().name/]_in_ValueSpecificationAction([action.result.owner.oclAsType(NamedElement).memberName()/]);
	[action.memberName()/]->getOutput()->push_back([action.result.memberName()/]); // subset/union in not implemented for upper=1
[/if]
[/let]
[/template]

[**
 * generate creation of meta model instances used by Action
 * 
 * this includes:
 * - creation of Input pins
 * - creation of Output pins
*/]
[template private generateActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(Action))]
// no specific generation for this action, generate only input and output pins
[let action : Action = self.oclAsType(Action)]
[for (pin : Pin | action.input)]
	[pin.memberName()/] = factory->create[pin.eClass().name/]_in_Action([pin.owner.oclAsType(NamedElement).memberName()/]);
[/for]
[for (pin : Pin | action.output)]
	[pin.memberName()/] = factory->create[pin.eClass().name/]_in_Action([pin.owner.oclAsType(NamedElement).memberName()/]);
[/for]
[/let]
[/template]

[**
 * generate initialization of meta model instance for an ActivtiyNode or derived element
 * 
 * this includes:
 * - set ActivtiyNode name
 * - initialization of derived element specific properties
*/]
[template public initializeActivityNode(anActivityNode : ActivityNode)]
//ActivityNode [anActivityNode.name /] ([anActivityNode.eClass().name/])
[anActivityNode.memberName()/]->setName("[anActivityNode.name/]");
[anActivityNode.initializeActivityNodeSpecial(anActivityNode)/]
[/template]

[**
 * generate initialization of meta model instance for an ActivityParameterNode element
 * 
 * this includes:
 * - set parameter
*/]
[template private initializeActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(ActivityParameterNode))]
[anActivityNode.memberName()/]->setParameter([anActivityNode.oclAsType(ActivityParameterNode).parameter.memberName()/]);

[/template]

[**
 * generate initialization of meta model instance for an AddStructuralFeatureValueAction element
 * 
 * this includes:
 * - initialize pins
 * - set structuralFeature
 * - set isReplaceAll
*/]
[template private initializeActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(AddStructuralFeatureValueAction))]
[let action : AddStructuralFeatureValueAction = self.oclAsType(AddStructuralFeatureValueAction)]
	[action.input.initializePin()/]
	[action.output.initializePin()/]
	[action.memberName()/]->setStructuralFeature([action.structuralFeature.generatePackageGetterCall()/]);
	[action.memberName()/]->setIsReplaceAll([action.isReplaceAll/]);
[/let]
[/template]

[**
 * generate initialization of meta model instance for an CallBehaviorAction element
 * 
 * this includes:
 * - set behavior
 * - set isSynchronous to 'true'
 * - initalize input and output pins
*/]
[template private initializeActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(CallBehaviorAction))]
[anActivityNode.memberName()/]->setBehavior([anActivityNode.oclAsType(CallBehaviorAction).behavior.generatePackageGetterCall()/]);
[anActivityNode.memberName()/]->setIsSynchronous(true); //imposed by the fUML specification
[anActivityNode.oclAsType(CallBehaviorAction).input.initializePin()/]
[anActivityNode.oclAsType(CallBehaviorAction).output.initializePin()/]
[/template]

[**
 * generate initialization of meta model instance for an CallOperationAction element
 * 
 * this includes:
 * - set operation
 * - initalize input and output pins
*/]
[template private initializeActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(CallOperationAction))]
[let action : CallOperationAction = self.oclAsType(CallOperationAction)]
[action.memberName()/]->setOperation([action.operation.generatePackageGetterCall()/]);
[for (inputPin : InputPin | action.input)]
[inputPin.initializePin(inputPin = action.target)/]
[/for]
[action.output.initializePin()/]
[/let]
[/template]

[**
 * generate initialization of meta model instance for an ClearStructuralFeatureAction element
 * 
 * this includes:
 * - initialize pins
 * - set structuralFeature
*/]
[template private initializeActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(ClearStructuralFeatureAction))]
[let action : ClearStructuralFeatureAction = self.oclAsType(ClearStructuralFeatureAction)]
	[action.input.initializePin()/]
	[action.output.initializePin()/]
	[action.memberName()/]->setStructuralFeature([action.structuralFeature.generatePackageGetterCall()/]);
[/let]
[/template]
[**
 * generate initialization of meta model instance for an CreateObjectAction element
 * 
 * this includes:
 * - initialize pins
*/]
[template private initializeActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(CreateObjectAction))]
[let action : CreateObjectAction = self.oclAsType(CreateObjectAction)]
[action.output.initializePin()/]
[action.memberName()/]->setClassifier([action.classifier.generatePackageGetterCall()/]);
[/let]
[/template]

[**
 * generate initialization of meta model instance for an DecisionNode element
 * 
 * this includes:
 * - set decisionInput if defined
*/]
[template private initializeActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(DecisionNode))]
[let decisionNode : DecisionNode = self.oclAsType(DecisionNode)]
[if (not decisionNode.decisionInput.oclIsUndefined())]
[anActivityNode.memberName()/]->setDecisionInput([memberName(decisionNode.decisionInput)/]);
[/if]
[if (not decisionNode.decisionInputFlow.oclIsUndefined())]
[anActivityNode.memberName()/]->setDecisionInputFlow([memberName(decisionNode.decisionInputFlow)/]);
[/if]
[/let]
[/template]

[**
 * generate initialization of meta model instance for an DestroyObjectAction element
 * 
 * this includes:
 * - initialize pins
*/]
[template private initializeActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(DestroyObjectAction))]
[let action : DestroyObjectAction = self.oclAsType(DestroyObjectAction)]
[action.output.initializePin()/]
[/let]
[/template]

[**
 * generate initialization of meta model instance for an DestroyObjectAction element
 * 
 * this includes:
 * - initialize pins
*/]
[template private initializeActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(ExpansionNode))]
[let node : ExpansionNode = self.oclAsType(ExpansionNode)]
	[node.memberName()/]->setType([node.type.generatePackageGetterCall(node)/]);
[if (not node.regionAsInput.oclIsUndefined())]
	[node.memberName()/]->setRegionAsInput([node.regionAsInput.memberName()/]);
[/if]
[if (not node.regionAsOutput.oclIsUndefined())]
	[node.memberName()/]->setRegionAsOutput([node.regionAsOutput.memberName()/]);
[/if]
[/let]
[/template]

[**
 * generate initialization of meta model instance for an DestroyObjectAction element
 * 
 * this includes:
 * - initialize pins
*/]
[template private initializeActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(ExpansionRegion))]
[let region : ExpansionRegion = self.oclAsType(ExpansionRegion)]
	[region.memberName()/]->setMode(uml::ExpansionKind::[region.mode.toString().toUpperCase()/]);
[for (input : ExpansionNode | region.inputElement)]
	[region.memberName()/]->getInputElement()->push_back([input.memberName()/]);
[/for]
[for (output : ExpansionNode | region.outputElement)]
	[region.memberName()/]->getOutputElement()->push_back([output.memberName()/]);
[/for]
	[region.node.initializeActivityNode()/]
	[region.edge.initializeEdge()/]
[/let]
[/template]


[**
 * generate initialization of meta model instance for an CreateObjectAction element
 * 
 * this includes:
 * - initialize pins
*/]
[template private initializeActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(ReadSelfAction))]
[let action : ReadSelfAction = self.oclAsType(ReadSelfAction)]
[action.output.initializePin()/]
[/let]
[/template]

[**
 * generate initialization of meta model instance for an ReadStructuralFeatureAction element
 * 
 * this includes:
 * - initialize pins
 * - set structuralFeature
*/]
[template private initializeActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(ReadStructuralFeatureAction))]
[let action : ReadStructuralFeatureAction = self.oclAsType(ReadStructuralFeatureAction)]
	[action.input.initializePin()/]
	[action.output.initializePin()/]
	[action.memberName()/]->setStructuralFeature([action.structuralFeature.generatePackageGetterCall()/]);
[/let]
[/template]

[**
 * generate initialization of meta model instance for an RemoveStructuralFeatureValueAction element
 * 
 * this includes:
 * - initialize pins
 * - set structuralFeature
 * - set isRemoveDuplicates
*/]
[template private initializeActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(RemoveStructuralFeatureValueAction))]
[let action : RemoveStructuralFeatureValueAction = self.oclAsType(RemoveStructuralFeatureValueAction)]
	[action.input.initializePin()/]
	[action.output.initializePin()/]
	[action.memberName()/]->setStructuralFeature([action.structuralFeature.generatePackageGetterCall()/]);
	[action.memberName()/]->setIsRemoveDuplicates([action.isRemoveDuplicates/]);
[/let]
[/template]

[**
 * generate initialization of meta model instance for an ValueSpecificationAction element
 * 
 * this includes:
 * - set value if defined
 * - set output if defined
*/]
[template private initializeActivityNodeSpecial(anActivityNode : ActivityNode) ? (oclIsKindOf(ValueSpecificationAction))]
[let action : ValueSpecificationAction = self.oclAsType(ValueSpecificationAction)]
[action.output.initializePin()/]
[if (action.value.oclIsUndefined())]
['UML4CPP_Generation Error: ValueSpecificationAction: '.concat(action.name).concat('value pin is undefined.').registerError()/]
[else]
[action.memberName()/]->setValue([action.value.memberName()/]);
[/if]
[/let]
[/template]

[**
 * query to check, if a pin is a target pin of CallOperationAction instance
*/]
[query private isTargetPin(pin : Pin) : Boolean = if (pin.owner.oclIsKindOf(CallOperationAction)) then pin.owner.oclAsType(CallOperationAction).target = pin else false endif/]

[**
 * generate initialization of meta model instance for an Pin element
 * 
 * this includes:
 * - set name
 * - if pin is a target pin, add to input pin list of CallOperationAction instance
*/]
[template private initializePin(pin : Pin)]
[pin.initializePin(false)/]
[/template]
[template private initializePin(pin : Pin, isTarget : Boolean)]
[pin.memberName()/]->setName("[pin.name/]");
[pin.memberName()/]->setLower([pin.lower/]);
[pin.memberName()/]->setUpper([if (isTarget)]-1[else][pin.upper/][/if]);

[/template]
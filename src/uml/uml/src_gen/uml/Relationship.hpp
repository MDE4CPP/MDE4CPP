//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef UML_RELATIONSHIP_HPP
#define UML_RELATIONSHIP_HPP


#include <memory>
#include <string>
// forward declarations
template<class T> class Union;

//*********************************
// generated Includes

//Forward Declaration for used types 
namespace uml 
{
	class Comment;
}

// namespace macro header include
#include "uml/uml.hpp"

// base class includes
#include "uml/Element.hpp"




//*********************************
namespace uml 
{
	/*!
	Relationship is an abstract concept that specifies some kind of relationship between Elements.
	<p>From package UML::CommonStructure.</p>
	*/
	
	class UML_API Relationship : virtual public Element
	{
		public:
 			Relationship(const Relationship &) {}

		protected:
			Relationship(){}

		public:
			virtual std::shared_ptr<ecore::EObject> copy() const = 0;

			//destructor
			virtual ~Relationship() {}

			//*********************************
			// Operations
			//*********************************

			//*********************************
			// Attribute Getters & Setters
			//*********************************

			//*********************************
			// Reference Getters & Setters
			//*********************************
			

			//*********************************
			// Union Reference Getters
			//*********************************
			/*!
			Specifies the elements related by the Relationship.
			<p>From package UML::CommonStructure.</p>
			*/
			
			virtual std::shared_ptr<Union<uml::Element>> getRelatedElement() const = 0;

			//*********************************
			// Container Getter
			//*********************************
			virtual std::shared_ptr<ecore::EObject> eContainer() const = 0; 

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			
			//*********************************
			// Reference Members
			//*********************************
			/*!
			Specifies the elements related by the Relationship.
			<p>From package UML::CommonStructure.</p>
			*/
			
			mutable std::shared_ptr<Union<uml::Element>> m_relatedElement;
	};
}
#endif /* end of include guard: UML_RELATIONSHIP_HPP */

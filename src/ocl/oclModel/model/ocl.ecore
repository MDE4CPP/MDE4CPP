<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="ocl" nsURI="http://ocl4cpp/ocl" nsPrefix="ocl">
  <eSubpackages name="Expressions" nsURI="http://ocl4cpp/ocl/expressions.ecore" nsPrefix="ocl.expressions">
    <eClassifiers xsi:type="ecore:EClass" name="BooleanLiteralExp" eSuperTypes="#//Expressions/PrimitiveLiteralExp">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="booleanSymbol" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PrimitiveLiteralExp" abstract="true"
        eSuperTypes="#//Expressions/LiteralExp">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="symbol" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//String"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="LiteralExp" abstract="true" eSuperTypes="#//Expressions/OclExpression"/>
    <eClassifiers xsi:type="ecore:EClass" name="OclExpression" abstract="true" eSuperTypes="http://www.eclipse.org/emf/2002/Ecore#//ETypedElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="appliedElement" eType="#//Expressions/CallExp"
          eOpposite="#//Expressions/CallExp/source"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="loopBodyOwner" eType="#//Expressions/LoopExp"
          eOpposite="#//Expressions/LoopExp/body"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="initializedElement" eType="#//Expressions/Variable"
          eOpposite="#//Expressions/Variable/initExpression"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="topExpression" eType="#//Expressions/ExpressionInOcl"
          eOpposite="#//Expressions/ExpressionInOcl/bodyExpression"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parentCall" eType="#//Expressions/OperationCallExp"
          eOpposite="#//Expressions/OperationCallExp/argument"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="thenOwner" eType="#//Expressions/IfExp"
          eOpposite="#//Expressions/IfExp/thenExpression"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ifOwner" eType="#//Expressions/IfExp"
          eOpposite="#//Expressions/IfExp/condition"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="elseOwner" eType="#//Expressions/IfExp"
          eOpposite="#//Expressions/IfExp/elseExpression"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parentNav" eType="#//Expressions/NavigationCallExp"
          eOpposite="#//Expressions/NavigationCallExp/qualifier"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="firstOwner" eType="#//Expressions/CollectionRange"
          eOpposite="#//Expressions/CollectionRange/first"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="lastOwner" eType="#//Expressions/CollectionRange"
          eOpposite="#//Expressions/CollectionRange/last"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="instance" eType="#//Evaluations/OclExpEval"
          eOpposite="#//Evaluations/OclExpEval/model"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CallExp" abstract="true" eSuperTypes="#//Expressions/OclExpression">
      <eStructuralFeatures xsi:type="ecore:EReference" name="source" ordered="false"
          eType="#//Expressions/OclExpression" containment="true" eOpposite="#//Expressions/OclExpression/appliedElement"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="CollectionKind">
      <eLiterals name="collection"/>
      <eLiterals name="set" value="1"/>
      <eLiterals name="orderedSet" value="2"/>
      <eLiterals name="bag" value="3"/>
      <eLiterals name="sequence" value="4"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="UnlimitedNaturalExp" eSuperTypes="#//Expressions/NumericLiteralExp">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="unlimitedNaturalSymbol"
          eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//UnlimitedNatural"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="NumericLiteralExp" abstract="true"
        eSuperTypes="#//Expressions/PrimitiveLiteralExp"/>
    <eClassifiers xsi:type="ecore:EClass" name="EnumLiteralExp" eSuperTypes="#//Expressions/LiteralExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredEnumLiteral"
          ordered="false" eType="ecore:EClass http://www.eclipse.org/uml2/5.0.0/UML#//EnumerationLiteral"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IfExp" eSuperTypes="#//Expressions/OclExpression">
      <eStructuralFeatures xsi:type="ecore:EReference" name="condition" ordered="false"
          lowerBound="1" eType="#//Expressions/OclExpression" containment="true" eOpposite="#//Expressions/OclExpression/ifOwner"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="thenExpression" ordered="false"
          lowerBound="1" eType="#//Expressions/OclExpression" containment="true" eOpposite="#//Expressions/OclExpression/thenOwner"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="elseExpression" ordered="false"
          lowerBound="1" eType="#//Expressions/OclExpression" containment="true" eOpposite="#//Expressions/OclExpression/elseOwner"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="LetExp" eSuperTypes="#//Expressions/OclExpression">
      <eStructuralFeatures xsi:type="ecore:EReference" name="in" ordered="false" lowerBound="1"
          eType="#//Expressions/OclExpression" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="variable" ordered="false"
          lowerBound="1" eType="#//Expressions/Variable" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Variable" eSuperTypes="http://www.eclipse.org/emf/2002/Ecore#//ETypedElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="initExpression" ordered="false"
          eType="#//Expressions/OclExpression" containment="true" eOpposite="#//Expressions/OclExpression/initializedElement"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="representedParameter"
          ordered="false" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EParameter"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="loopExp" eType="#//Expressions/LoopExp"
          eOpposite="#//Expressions/LoopExp/iterator"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="baseExp" eType="#//Expressions/IterateExp"
          eOpposite="#//Expressions/IterateExp/result"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="referringExp" eType="#//Expressions/VariableExp"
          eOpposite="#//Expressions/VariableExp/referredVariable"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="selfOwner" eType="#//Expressions/ExpressionInOcl"
          eOpposite="#//Expressions/ExpressionInOcl/contextVariable"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="resultOwner" eType="#//Expressions/ExpressionInOcl"
          eOpposite="#//Expressions/ExpressionInOcl/resultVariable"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="varOwner" eType="#//Expressions/ExpressionInOcl"
          eOpposite="#//Expressions/ExpressionInOcl/parameterVariable"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/Values/Value"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PropertyCallExp" eSuperTypes="#//Expressions/NavigationCallExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredProperty" ordered="false"
          eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EAttribute"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="NavigationCallExp" abstract="true"
        eSuperTypes="#//Expressions/FeatureCallExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="qualifier" upperBound="-1"
          eType="#//Expressions/OclExpression" containment="true" eOpposite="#//Expressions/OclExpression/parentNav"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="navigationSource" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EAttribute"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="FeatureCallExp" abstract="true" eSuperTypes="#//Expressions/CallExp">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isPre" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="VariableExp" eSuperTypes="#//Expressions/OclExpression">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredVariable" ordered="false"
          eType="#//Expressions/Variable" eOpposite="#//Expressions/Variable/referringExp"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TypeExp" eSuperTypes="#//Expressions/OclExpression">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredType" ordered="false"
          eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClassifier"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="LoopExp" abstract="true" eSuperTypes="#//Expressions/CallExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="body" ordered="false"
          lowerBound="1" eType="#//Expressions/OclExpression" containment="true" eOpposite="#//Expressions/OclExpression/loopBodyOwner"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="iterator" upperBound="-1"
          eType="#//Expressions/Variable" containment="true" eOpposite="#//Expressions/Variable/loopExp"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IteratorExp" eSuperTypes="#//Expressions/LoopExp"/>
    <eClassifiers xsi:type="ecore:EClass" name="StringLiteralExp" eSuperTypes="#//Expressions/PrimitiveLiteralExp">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="stringSymbol" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//String"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IntegerLiteralExp" eSuperTypes="#//Expressions/NumericLiteralExp">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="integerSymbol" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Integer"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OperationCallExp" eSuperTypes="#//Expressions/FeatureCallExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="argument" upperBound="-1"
          eType="#//Expressions/OclExpression" containment="true" eOpposite="#//Expressions/OclExpression/parentCall"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredOperation" ordered="false"
          eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EOperation"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RealLiteralExp" eSuperTypes="#//Expressions/NumericLiteralExp">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="realSymbol" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Integer"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IterateExp" eSuperTypes="#//Expressions/LoopExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="result" ordered="false"
          eType="#//Expressions/Variable" containment="true" eOpposite="#//Expressions/Variable/baseExp"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionLiteralExp" eSuperTypes="#//Expressions/LiteralExp">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" ordered="false"
          lowerBound="1" eType="#//Expressions/CollectionKind"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="part" upperBound="-1"
          eType="#//Expressions/CollectionLiteralPart" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionLiteralPart" abstract="true"
        eSuperTypes="http://www.eclipse.org/emf/2002/Ecore#//ETypedElement"/>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionItem" eSuperTypes="#//Expressions/CollectionLiteralPart">
      <eStructuralFeatures xsi:type="ecore:EReference" name="item" ordered="false"
          lowerBound="1" eType="#//Expressions/OclExpression" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionRange" eSuperTypes="#//Expressions/CollectionLiteralPart">
      <eStructuralFeatures xsi:type="ecore:EReference" name="first" ordered="false"
          lowerBound="1" eType="#//Expressions/OclExpression" containment="true" eOpposite="#//Expressions/OclExpression/firstOwner"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="last" ordered="false"
          lowerBound="1" eType="#//Expressions/OclExpression" containment="true" eOpposite="#//Expressions/OclExpression/lastOwner"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TupleLiteralExp" eSuperTypes="#//Expressions/LiteralExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="part" upperBound="-1"
          eType="#//Expressions/TupleLiteralPart" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="NullLiteralExp" eSuperTypes="#//Expressions/PrimitiveLiteralExp"/>
    <eClassifiers xsi:type="ecore:EClass" name="ExpressionInOcl" eSuperTypes="http://www.eclipse.org/emf/2002/Ecore#//ETypedElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="bodyExpression" ordered="false"
          lowerBound="1" eType="#//Expressions/OclExpression" containment="true" eOpposite="#//Expressions/OclExpression/topExpression"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="contextVariable" ordered="false"
          eType="#//Expressions/Variable" containment="true" eOpposite="#//Expressions/Variable/selfOwner"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="resultVariable" ordered="false"
          eType="#//Expressions/Variable" containment="true" eOpposite="#//Expressions/Variable/resultOwner"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parameterVariable" upperBound="-1"
          eType="#//Expressions/Variable" containment="true" eOpposite="#//Expressions/Variable/varOwner"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="InvalidLiteralExp" eSuperTypes="#//Expressions/LiteralExp"/>
    <eClassifiers xsi:type="ecore:EClass" name="TupleLiteralPart" eSuperTypes="http://www.eclipse.org/emf/2002/Ecore#//ETypedElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="attribute" ordered="false"
          eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EAttribute"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AssociationClassCallExp" eSuperTypes="#//Expressions/NavigationCallExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredAssociationClass"
          eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EReference"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="StateExp" eSuperTypes="#//Expressions/OclExpression">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredState" eType="ecore:EClass http://www.eclipse.org/uml2/5.0.0/UML#//State"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="UnspecifiedValueExp" eSuperTypes="#//Expressions/OclExpression"/>
    <eClassifiers xsi:type="ecore:EClass" name="MessageExp" eSuperTypes="#//Expressions/OclExpression">
      <eStructuralFeatures xsi:type="ecore:EReference" name="target" eType="#//Expressions/OclExpression"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="argument" upperBound="-1"
          eType="#//Expressions/OclExpression"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="calledOperation" eType="ecore:EClass http://www.eclipse.org/uml2/5.0.0/UML#//CallOperationAction"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sentSignal" eType="ecore:EClass http://www.eclipse.org/uml2/5.0.0/UML#//SendSignalAction"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="InfixedExp" eSuperTypes="#//Expressions/OclExpression">
      <eStructuralFeatures xsi:type="ecore:EReference" name="source" eType="#//Expressions/OclExpression"/>
    </eClassifiers>
  </eSubpackages>
  <eSubpackages name="Types" nsURI="http://ocl4cpp/ocl/types.ecore" nsPrefix="ocl.types">
    <eClassifiers xsi:type="ecore:EClass" name="BagType" eSuperTypes="#//Types/CollectionType"/>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionType" eSuperTypes="http://www.eclipse.org/emf/2002/Ecore#//EDataType">
      <eOperations name="kindOf" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="    if(coll != nullptr)&#xA;    {&#xA;        std::shared_ptr&lt;ecore::EClass> eclass = std::dynamic_pointer_cast&lt;ecore::EClass>(this->eClass());&#xA;        std::shared_ptr&lt;ecore::EClass> eclassOf = std::dynamic_pointer_cast&lt;ecore::EClass>(coll->eClass());&#xA;        return eclassOf->isSuperTypeOf(eclass);&#xA;    }&#xA;    return false;&#xA;   "/>
        </eAnnotations>
        <eParameters name="coll" lowerBound="1" eType="#//Types/CollectionType"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="elementType" ordered="false"
          lowerBound="1" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClassifier"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="instance" eType="#//Values/CollectionValue"
          eOpposite="#//Values/CollectionValue/model"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="VoidType" eSuperTypes="http://www.eclipse.org/emf/2002/Ecore#//EClassifier"/>
    <eClassifiers xsi:type="ecore:EClass" name="TupleType" eSuperTypes="http://www.eclipse.org/emf/2002/Ecore#//EDataType">
      <eStructuralFeatures xsi:type="ecore:EReference" name="instance" eType="#//Values/TupleValue"
          eOpposite="#//Values/TupleValue/model"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parts" upperBound="-1"
          eType="#//Types/NameTypeBinding"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SetType" eSuperTypes="#//Types/CollectionType"/>
    <eClassifiers xsi:type="ecore:EClass" name="SequenceType" eSuperTypes="#//Types/CollectionType"/>
    <eClassifiers xsi:type="ecore:EClass" name="OrderedSetType" eSuperTypes="#//Types/CollectionType"/>
    <eClassifiers xsi:type="ecore:EClass" name="InvalidType" eSuperTypes="http://www.eclipse.org/emf/2002/Ecore#//EClassifier"/>
    <eClassifiers xsi:type="ecore:EClass" name="TemplateParameterType" eSuperTypes="http://www.eclipse.org/emf/2002/Ecore#//EClassifier">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="specification" ordered="false"
          eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//String"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AnyType" eSuperTypes="http://www.eclipse.org/emf/2002/Ecore#//EClassifier">
      <eStructuralFeatures xsi:type="ecore:EReference" name="object" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClassifier"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="MessageType" eSuperTypes="http://www.eclipse.org/emf/2002/Ecore#//EClassifier">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredOperation" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EOperation"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredSignal" eType="ecore:EClass http://www.eclipse.org/uml2/5.0.0/UML#//Signal"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="NameTypeBinding">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//String"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClassifier"/>
    </eClassifiers>
  </eSubpackages>
  <eSubpackages name="Values" nsURI="http://ocl4cpp/ocl/values.ecore" nsPrefix="ocl.values">
    <eClassifiers xsi:type="ecore:EClass" name="BagTypeValue" eSuperTypes="#//Values/CollectionValue">
      <eOperations name="addValue" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="std::shared_ptr&lt;ocl::Values::Element> elem = ocl::Values::ValuesFactory::eInstance()->createElement();&#xA;elem->setValue(value);&#xA;elem->setIndexNr(m_elements->size());&#xA;m_elements->add(elem);&#xA;&#xA;return true;"/>
        </eAnnotations>
        <eParameters name="value" eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/Values/Value"/>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="NameValueBinding">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//String"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1"
          eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/Values/Value"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Element">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="indexNr" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Integer"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/Values/Value"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SequenceTypeValue" eSuperTypes="#//Values/CollectionValue">
      <eOperations name="addValue" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="std::shared_ptr&lt;ocl::Values::Element> elem = ocl::Values::ValuesFactory::eInstance()->createElement();&#xA;elem->setValue(value);&#xA;elem->setIndexNr(m_elements->size());&#xA;m_elements->add(elem);&#xA;&#xA;return true;"/>
        </eAnnotations>
        <eParameters name="value" eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/Values/Value"/>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ObjectValue" eSuperTypes="../../../fuml/model/fUML.ecore#//Semantics/Values/Value">
      <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
        <details key="includes" value="#include &quot;fUML/FUMLFactory.hpp&quot;&#xA;#include &quot;abstractDataTypes/Bag.hpp&quot;&#xA;#include &quot;ecore/EOperation.hpp&quot;&#xA;#include &quot;ecore/EParameter.hpp&quot;&#xA;#include &quot;ecore/ETypedElement.hpp&quot;&#xA;#include &quot;ecore/ENamedElement.hpp&quot;&#xA;#include &quot;ecore/EAttribute.hpp&quot;&#xA;#include &quot;ecore/EReference.hpp&quot;&#xA;#include &quot;uml/Operation.hpp&quot;&#xA;#include &quot;uml/Parameter.hpp&quot;&#xA;#include &quot;uml/TypedElement.hpp&quot;&#xA;#include &quot;uml/NamedElement.hpp&quot;&#xA;#include &quot;uml/Type.hpp&quot;&#xA;#include &quot;uml/Property.hpp&quot;"/>
      </eAnnotations>
      <eOperations name="toString" ordered="false" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//String">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="if(m_value != nullptr) {&#xA;        uml::NamedElement* uname = dynamic_cast&lt;uml::NamedElement*>(m_value.get());&#xA;        if(uname != nullptr) {&#xA;            uml::Operation* uope = dynamic_cast&lt;uml::Operation*>(m_value.get());&#xA;            if(uope != nullptr) {&#xA;                std::string result = &quot;&lt;Operation> &quot; + uope->getName() + &quot;(&quot;;&#xA;                Bag&lt;uml::Parameter>* ebag = dynamic_cast&lt;Bag&lt;uml::Parameter>*>(uope->getOwnedParameter().get());&#xA;                for(unsigned int i = 0; i &lt; ebag->size(); i++) {&#xA;                    if(i > 0) result += &quot;, &quot;;&#xA;                    result += ebag->at(i)->getName() + &quot; : &quot;;&#xA;                    if(ebag->at(i)->getType() != nullptr) {&#xA;                        if(ebag->at(i)->getUpper() > 1 || ebag->at(i)->getUpper() &lt; 0)&#xA;                            result += ebag->at(i)->getType()->getName()+ &quot; [&quot;&#xA;                                +  std::to_string(ebag->at(i)->getLower()) + &quot;..*]&quot;;&#xA;                        else&#xA;                            result += ebag->at(i)->getType()->getName()+ &quot; [&quot;&#xA;                                +  std::to_string(ebag->at(i)->getLower()) + &quot;..&quot; + std::to_string(ebag->at(i)->getUpper()) + &quot;]&quot;;&#xA;                    }&#xA;                    else&#xA;                        result += &quot;[Not set in Model]&quot;;&#xA;                }&#xA;                result += &quot;)&quot;;&#xA;                return result;&#xA;            }&#xA;            uml::Property* uprop = dynamic_cast&lt;uml::Property*>(m_value.get());&#xA;            if(uprop != nullptr) {&#xA;                if(uprop->getUpper() > 1 || uprop->getUpper() &lt; 0)&#xA;                    return &quot;&lt;Property> &quot; + uprop->getName() + &quot; : &quot; + uprop->getType()->getName() + &quot; [&quot;&#xA;                        +  std::to_string(uprop->getLower()) + &quot;..*]&quot;;&#xA;                else&#xA;                    return &quot;&lt;Property> &quot; + uprop->getName() + &quot; : &quot; + uprop->getType()->getName() + &quot; [&quot;&#xA;                        +  std::to_string(uprop->getLower()) + &quot;..&quot; + std::to_string(uprop->getUpper()) + &quot;]&quot;;&#xA;            }&#xA;            uml::TypedElement* utyped = dynamic_cast&lt;uml::TypedElement*>(m_value.get());&#xA;            if(utyped != nullptr) {&#xA;                return utyped->getName() + &quot; : &quot; + utyped->getType()->getName();&#xA;            }&#xA;            return uname->getName();&#xA;        }&#xA;&#xA;        ecore::EOperation* eope = dynamic_cast&lt;ecore::EOperation*>(m_value.get());&#xA;        if(eope != nullptr) {&#xA;            std::string result = eope->getName() + &quot;(&quot;;&#xA;            Bag&lt;ecore::EParameter>* ebag = dynamic_cast&lt;Bag&lt;ecore::EParameter>*>(eope->getEParameters().get());&#xA;            for(unsigned int i = 0; i &lt; ebag->size(); i++) {&#xA;                if(i > 0) result += &quot;, &quot;;&#xA;                result += ebag->at(i)->getName() + &quot; : &quot;;&#xA;                if(ebag->at(i)->getEType() != nullptr)&#xA;                    result += ebag->at(i)->getEType()->getName();&#xA;                else&#xA;                    result += &quot;[Not set in Model]&quot;;&#xA;            }&#xA;            result += &quot;)&quot;;&#xA;            return result;&#xA;        }&#xA;        ecore::EAttribute* eattr = dynamic_cast&lt;ecore::EAttribute*>(m_value.get());&#xA;        if(eattr != nullptr) {&#xA;            if(eattr->getUpperBound() > 1 || eattr->getUpperBound() &lt; 0)&#xA;                return &quot;&lt;EAttribute> &quot; + eattr->getName() + &quot; : &quot; + eattr->getEType()->getName()+ &quot; [&quot;&#xA;                    +  std::to_string(eattr->getLowerBound()) + &quot;..*]&quot;;&#xA;            else&#xA;                return &quot;&lt;EAttribute> &quot; + eattr->getName() + &quot; : &quot; + eattr->getEType()->getName()+ &quot; [&quot;&#xA;                        +  std::to_string(eattr->getLowerBound()) + &quot;..&quot; + std::to_string(eattr->getUpperBound()) + &quot;]&quot;;&#xA;        }&#xA;        ecore::EReference* eref = dynamic_cast&lt;ecore::EReference*>(m_value.get());&#xA;        if(eref != nullptr) {&#xA;            if(eref->getUpperBound() > 1 || eref->getUpperBound() &lt; 0)&#xA;                return &quot;&lt;EReference> &quot; + eref->getName() + &quot; : &quot; + eref->getEType()->getName()+ &quot; [&quot;&#xA;                    +  std::to_string(eref->getLowerBound()) + &quot;..*]&quot;;&#xA;            else&#xA;                return &quot;&lt;EReference> &quot; + eref->getName() + &quot; : &quot; + eref->getEType()->getName()+ &quot; [&quot;&#xA;                    +  std::to_string(eref->getLowerBound()) + &quot;..&quot; + std::to_string(eref->getUpperBound()) + &quot;]&quot;;&#xA;        }&#xA;        ecore::ETypedElement* etyped = dynamic_cast&lt;ecore::ETypedElement*>(m_value.get());&#xA;        if(etyped != nullptr) {&#xA;            if(etyped->isMany())&#xA;                return etyped->getName() + &quot; : &quot; + etyped->getEType()->getName()+ &quot; [0..*]&quot;;&#xA;            else&#xA;                return etyped->getName() + &quot; : &quot; + etyped->getEType()->getName()+ &quot; [0..1]&quot;;&#xA;        }&#xA;        ecore::ENamedElement* ename = dynamic_cast&lt;ecore::ENamedElement*>(m_value.get());&#xA;        if(ename != nullptr) {&#xA;            return ename->getName();&#xA;        }&#xA;    }&#xA;    return &quot;&quot;;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="equals" ordered="false" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="    if(otherValue != nullptr &amp;&amp; otherValue->eClass()->getClassifierID() == this->eClass()->getClassifierID()) {&#xA;        std::shared_ptr&lt;ocl::Values::ObjectValue> otherObj = std::dynamic_pointer_cast&lt;ocl::Values::ObjectValue>(otherValue);&#xA;        return otherObj != nullptr &amp;&amp; otherObj->getValue().get() == this->getValue().get();&#xA;    }&#xA;    return false;&#xA;   "/>
        </eAnnotations>
        <eParameters name="otherValue" ordered="false" lowerBound="1" eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/Values/Value"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="history" upperBound="-1"
          eType="#//Values/LocalSnapshot"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1"
          eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionValue" eSuperTypes="#//Values/StaticValue">
      <eOperations name="addValue" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean">
        <eParameters name="value" eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/Values/Value"/>
      </eOperations>
      <eOperations name="toString" ordered="false" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//String">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="std::string result = &quot;&quot;;&#xA;&#xA;Bag&lt;Element>::const_iterator endIt_elem = this->getElements()->end();&#xA;for (Bag&lt;Element>::const_iterator it_reference = this->getElements()->begin();&#xA;&#x9; it_reference != endIt_elem; ++it_reference)&#xA;{&#xA;       if(!result.empty()) {&#xA;            result += &quot;\n&quot;;&#xA;        }&#xA;&#x9;result += (*it_reference)->getValue()->toString();&#xA;}&#xA;return result;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="find" ordered="false" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="for (Bag&lt;ocl::Values::Element>::const_iterator it_elem = m_elements->begin(); it_elem != m_elements->end(); ++it_elem)&#xA;    {&#xA;        if ((*it_elem)->getValue()->equals(value)) {&#xA;            return true;&#xA;        }&#xA;    }&#xA;    return false;"/>
        </eAnnotations>
        <eParameters name="value" eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/Values/Value"/>
      </eOperations>
      <eOperations name="equals" ordered="false" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="    if(otherValue != nullptr)&#xA;    {&#xA;        std::shared_ptr&lt;ocl::Values::CollectionValue> otherBag = std::dynamic_pointer_cast&lt;ocl::Values::CollectionValue>(otherValue);&#xA;&#xA;&#x9;if(otherBag != nullptr &amp;&amp; otherBag->getModel() != nullptr &amp;&amp; &#xA;           this->getModel()->kindOf(otherBag->getModel()) &amp;&amp;&#xA;           otherBag->getElements()->size() == this->getElements()->size()) {&#xA;&#xA;           for(size_t i = 0; i &lt; this->getElements()->size(); i++) {&#xA;                auto item1 = this->getElements()->at(i)->getValue();&#xA;                auto item2 = otherBag->getElements()->at(i)->getValue();&#xA;                &#xA;                if(!item1->equals(item2)) {&#xA;                    return false;&#xA;                }&#xA;            }&#xA;            return true;&#xA;        }&#xA;    }&#xA;    return false;&#xA;   "/>
        </eAnnotations>
        <eParameters name="otherValue" ordered="false" lowerBound="1" eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/Values/Value"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="elements" ordered="false"
          upperBound="-1" eType="#//Values/Element"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="model" lowerBound="1"
          eType="#//Types/CollectionType" eOpposite="#//Types/CollectionType/instance"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SetTypeValue" eSuperTypes="#//Values/CollectionValue">
      <eOperations name="addValue" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="if(!this->find(value)) {&#xA;    std::shared_ptr&lt;ocl::Values::Element> elem = ocl::Values::ValuesFactory::eInstance()->createElement();&#xA;    elem->setValue(value);&#xA;    elem->setIndexNr(m_elements->size());&#xA;    m_elements->add(elem);&#xA;&#xA;    return true;&#xA;}&#xA;return false;"/>
        </eAnnotations>
        <eParameters name="value" eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/Values/Value"/>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OclVoidValue" eSuperTypes="../../../fuml/model/fUML.ecore#//Semantics/Values/Value">
      <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
        <details key="includes" value="#include &quot;fUML/FUMLFactory.hpp&quot;"/>
      </eAnnotations>
      <eOperations name="toString" ordered="false" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//String">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="return &quot;&quot;;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="equals" ordered="false" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="    return otherValue != nullptr &amp;&amp; otherValue->eClass()->getClassifierID() == this->eClass()->getClassifierID();&#xA;   "/>
        </eAnnotations>
        <eParameters name="otherValue" ordered="false" lowerBound="1" eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/Values/Value"/>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OclMessageValue" eSuperTypes="../../../fuml/model/fUML.ecore#//Semantics/Values/Value">
      <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
        <details key="includes" value="#include &quot;fUML/FUMLFactory.hpp&quot;"/>
      </eAnnotations>
      <eOperations name="toString" ordered="false" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//String">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="return &quot;&quot;;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//String"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isSyncOperation" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAsyncOperation" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isSignal" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="returnMessage" eType="#//Values/OclMessageValue"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="target" eType="#//Values/ObjectValue"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="source" eType="#//Values/ObjectValue"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="arguments" upperBound="-1"
          eType="#//Values/NameValueBinding"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="StaticValue" eSuperTypes="../../../fuml/model/fUML.ecore#//Semantics/Values/Value">
      <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
        <details key="includes" value="#include &quot;fUML/FUMLFactory.hpp&quot;"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="LocalSnapshot">
      <eStructuralFeatures xsi:type="ecore:EReference" name="succ" eType="#//Values/LocalSnapshot"
          eOpposite="#//Values/LocalSnapshot/pred"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="pred" eType="#//Values/LocalSnapshot"
          eOpposite="#//Values/LocalSnapshot/succ"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="bindings" upperBound="-1"
          eType="#//Values/NameValueBinding"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isPost" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isPre" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="inputQ" ordered="false"
          upperBound="-1" eType="#//Values/OclMessageValue"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="outputQ" upperBound="-1"
          eType="#//Values/OclMessageValue"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TupleValue" eSuperTypes="#//Values/StaticValue">
      <eOperations name="toString" ordered="false" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//String">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="std::string result = &quot;&quot;;&#xA;&#xA;Bag&lt;NameValueBinding>::const_iterator endIt_elem = this->getElements()->end();&#xA;for (Bag&lt;NameValueBinding>::const_iterator it_reference = this->getElements()->begin();&#xA;&#x9; it_reference != endIt_elem; ++it_reference)&#xA;{&#xA;       if(!result.empty()) {&#xA;            result += &quot;\n&quot;;&#xA;        }&#xA;&#x9;result += (*it_reference)->getName() + &quot; : &quot; + (*it_reference)->getValue()->toString();&#xA;}&#xA;return result;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="equals" ordered="false" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="    if(otherValue != nullptr)&#xA;    {&#xA;        std::shared_ptr&lt;ocl::Values::TupleValue> otherBag = std::dynamic_pointer_cast&lt;ocl::Values::TupleValue>(otherValue);&#xA;&#xA;&#x9;if(otherBag != nullptr &amp;&amp; otherBag->getElements()->size() == this->getElements()->size()) {&#xA;&#xA;           for(size_t i = 0; i &lt; this->getElements()->size(); i++) {&#xA;                auto item1 = this->getElements()->at(i);&#xA;                auto item2 = otherBag->getElements()->at(i);&#xA;                &#xA;                if(item1->getName() != item2->getName() || !item1->getValue()->equals(item2->getValue())) {&#xA;                    return false;&#xA;                }&#xA;            }&#xA;            return true;&#xA;        }&#xA;    }&#xA;    return false;&#xA;   "/>
        </eAnnotations>
        <eParameters name="otherValue" ordered="false" lowerBound="1" eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/Values/Value"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="elements" ordered="false"
          upperBound="-1" eType="#//Values/NameValueBinding"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="model" eType="#//Types/TupleType"
          eOpposite="#//Types/TupleType/instance"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="UndefinedValue" eSuperTypes="../../../fuml/model/fUML.ecore#//Semantics/Values/Value">
      <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
        <details key="includes" value="#include &quot;fUML/FUMLFactory.hpp&quot;"/>
      </eAnnotations>
      <eOperations name="toString" ordered="false" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//String">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="return &quot;Undefined&quot;;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="equals" ordered="false" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="    return otherValue != nullptr &amp;&amp; otherValue->eClass()->getClassifierID() == this->eClass()->getClassifierID();&#xA;   "/>
        </eAnnotations>
        <eParameters name="otherValue" ordered="false" lowerBound="1" eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/Values/Value"/>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OrderedSetTypeValue" eSuperTypes="#//Values/CollectionValue">
      <eOperations name="addValue" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="if(!this->find(value)) {&#xA;    std::shared_ptr&lt;ocl::Values::Element> elem = ocl::Values::ValuesFactory::eInstance()->createElement();&#xA;    elem->setValue(value);&#xA;    elem->setIndexNr(m_elements->size());&#xA;    m_elements->add(elem);&#xA;&#xA;    return true;&#xA;}&#xA;return false;"/>
        </eAnnotations>
        <eParameters name="value" eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/Values/Value"/>
      </eOperations>
    </eClassifiers>
  </eSubpackages>
  <eSubpackages name="Evaluations" nsURI="http://ocl4cpp/ocl/evaluations.ecore" nsPrefix="ocl.evaluations">
    <eClassifiers xsi:type="ecore:EClass" name="CollectionLiteralPartEval" eSuperTypes="../../../fuml/model/fUML.ecore#//Semantics/Values/Evaluation">
      <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
        <details key="includes" value="#include &quot;fUML/FUMLFactory.hpp&quot;"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="element" lowerBound="1"
          eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/Values/Value"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TupleLiteralExpPartEval" eSuperTypes="../../../fuml/model/fUML.ecore#//Semantics/Values/Evaluation">
      <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
        <details key="includes" value="#include &quot;fUML/FUMLFactory.hpp&quot;"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EvalNameSpace" eSuperTypes="../../../fuml/model/fUML.ecore#//Semantics/Values/Evaluation">
      <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
        <details key="includes" value="#include &quot;fUML/FUMLFactory.hpp&quot;"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ExpressionInOclEval">
      <eStructuralFeatures xsi:type="ecore:EReference" name="context" lowerBound="1"
          eType="#//Evaluations/OclExpEval"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="environment" eType="#//Evaluations/EvalEnvironment"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OclExpEval" eSuperTypes="../../../fuml/model/fUML.ecore#//Semantics/Values/Evaluation">
      <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
        <details key="includes" value="#include &quot;fUML/FUMLFactory.hpp&quot;"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="environment" lowerBound="1"
          eType="#//Evaluations/EvalEnvironment"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="beforeEnvironment" eType="#//Evaluations/EvalEnvironment"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="resultValue" lowerBound="1"
          eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/Values/Value"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="model" lowerBound="1"
          eType="#//Expressions/OclExpression" eOpposite="#//Expressions/OclExpression/instance"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="UnspecifiedValueExpEval" eSuperTypes="../../../fuml/model/fUML.ecore#//Semantics/Values/Evaluation">
      <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
        <details key="includes" value="#include &quot;fUML/FUMLFactory.hpp&quot;"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OclMessageArgEval" eSuperTypes="../../../fuml/model/fUML.ecore#//Semantics/Values/Evaluation">
      <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
        <details key="includes" value="#include &quot;fUML/FUMLFactory.hpp&quot;"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="unspecified" eType="#//Evaluations/UnspecifiedValueExpEval"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//Evaluations/OclExpEval"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="variable" eType="#//Evaluations/OclExpEval"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionItemEval" eSuperTypes="#//Evaluations/CollectionLiteralPartEval">
      <eStructuralFeatures xsi:type="ecore:EReference" name="item" lowerBound="1"
          eType="#//Evaluations/OclExpEval"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionRangeEval" eSuperTypes="#//Evaluations/CollectionLiteralPartEval">
      <eStructuralFeatures xsi:type="ecore:EReference" name="first" lowerBound="1"
          eType="#//Evaluations/OclExpEval"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="last" lowerBound="1"
          eType="#//Evaluations/OclExpEval"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PropertyCallExpEval" eSuperTypes="#//Evaluations/OclExpEval">
      <eStructuralFeatures xsi:type="ecore:EReference" name="source" eType="#//Evaluations/OclExpEval"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="VariableExpEval" eSuperTypes="#//Evaluations/OclExpEval">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredVariable" lowerBound="1"
          eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/SimpleClassifiers/StringValue"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="LiteralExpEval" eSuperTypes="#//Evaluations/OclExpEval"/>
    <eClassifiers xsi:type="ecore:EClass" name="LetExpEval" eSuperTypes="#//Evaluations/OclExpEval">
      <eStructuralFeatures xsi:type="ecore:EReference" name="in" lowerBound="1" eType="#//Evaluations/OclExpEval"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="initExpression" eType="#//Evaluations/OclExpEval"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="variable" lowerBound="1"
          eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/SimpleClassifiers/StringValue"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OclMessageExpEval" eSuperTypes="#//Evaluations/OclExpEval">
      <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
          eType="#//Evaluations/OclExpEval"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="arguments" unique="false"
          upperBound="-1" eType="#//Evaluations/OclMessageArgEval"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//String"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IfExpEval" eSuperTypes="#//Evaluations/OclExpEval">
      <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1"
          eType="#//Evaluations/OclExpEval"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="thenExpression" lowerBound="1"
          eType="#//Evaluations/OclExpEval"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="elseExpression" lowerBound="1"
          eType="#//Evaluations/OclExpEval"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ModelPropertyCallExpEval" eSuperTypes="#//Evaluations/PropertyCallExpEval">
      <eOperations name="atPre" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="LoopExpEval" eSuperTypes="#//Evaluations/PropertyCallExpEval">
      <eStructuralFeatures xsi:type="ecore:EReference" name="bodyEvals" lowerBound="1"
          upperBound="-1" eType="#//Evaluations/OclExpEval"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="iterators" lowerBound="1"
          upperBound="-1" eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/SimpleClassifiers/StringValue"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AttributeCallExpEval" eSuperTypes="#//Evaluations/ModelPropertyCallExpEval">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredAttribute" lowerBound="1"
          eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/SimpleClassifiers/StringValue"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="NavigationCallExpEval" eSuperTypes="#//Evaluations/ModelPropertyCallExpEval">
      <eStructuralFeatures xsi:type="ecore:EReference" name="navigationSource" lowerBound="1"
          eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/SimpleClassifiers/StringValue"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="qualifiers" unique="false"
          upperBound="-1" eType="#//Evaluations/OclExpEval"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OperationCallExpEval" eSuperTypes="#//Evaluations/ModelPropertyCallExpEval">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredOperation" lowerBound="1"
          eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/SimpleClassifiers/StringValue"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="arguments" ordered="false"
          unique="false" upperBound="-1" eType="#//Evaluations/OclExpEval"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IterateExpEval" eSuperTypes="#//Evaluations/LoopExpEval">
      <eStructuralFeatures xsi:type="ecore:EReference" name="result" lowerBound="1"
          eType="#//Evaluations/VariableDeclEval"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IteratorExpEval" eSuperTypes="#//Evaluations/LoopExpEval"/>
    <eClassifiers xsi:type="ecore:EClass" name="AssociationClassCallExpEval" eSuperTypes="#//Evaluations/NavigationCallExpEval">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredAssociationClass"
          lowerBound="1" eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/SimpleClassifiers/StringValue"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AssociationEndCallExpEval" eSuperTypes="#//Evaluations/NavigationCallExpEval">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredAssociationEnd"
          lowerBound="1" eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/SimpleClassifiers/StringValue"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TupleLiteralExpEval" eSuperTypes="#//Evaluations/LiteralExpEval">
      <eStructuralFeatures xsi:type="ecore:EReference" name="tuplePart" ordered="false"
          unique="false" upperBound="-1" eType="#//Evaluations/VariableDeclEval"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PrimitiveLiteralExpEval" eSuperTypes="#//Evaluations/LiteralExpEval"/>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionLiteralExpEval" eSuperTypes="#//Evaluations/LiteralExpEval">
      <eStructuralFeatures xsi:type="ecore:EReference" name="parts" unique="false"
          upperBound="-1" eType="#//Evaluations/CollectionLiteralPartEval"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EnumLiteralExpEval" eSuperTypes="#//Evaluations/LiteralExpEval"/>
    <eClassifiers xsi:type="ecore:EClass" name="BooleanLiteralExpEval" eSuperTypes="#//Evaluations/PrimitiveLiteralExpEval ../../../fuml/model/fUML.ecore#//Semantics/Values/LiteralBooleanEvaluation">
      <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
        <details key="includes" value="#include &quot;fUML/FUMLFactory.hpp&quot;"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="NumericLiteralExpEval" eSuperTypes="#//Evaluations/PrimitiveLiteralExpEval"/>
    <eClassifiers xsi:type="ecore:EClass" name="StringLiteralExpEval" eSuperTypes="#//Evaluations/PrimitiveLiteralExpEval ../../../fuml/model/fUML.ecore#//Semantics/Values/LiteralStringEvaluation">
      <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
        <details key="includes" value="#include &quot;fUML/FUMLFactory.hpp&quot;"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="UnlimitedNaturalLiteralExpEval" eSuperTypes="#//Evaluations/NumericLiteralExpEval ../../../fuml/model/fUML.ecore#//Semantics/Values/LiteralUnlimitedNaturalEvaluation">
      <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
        <details key="includes" value="#include &quot;fUML/FUMLFactory.hpp&quot;"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IntegerLiteralExpEval" eSuperTypes="#//Evaluations/NumericLiteralExpEval ../../../fuml/model/fUML.ecore#//Semantics/Values/LiteralIntegerEvaluation">
      <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
        <details key="includes" value="#include &quot;fUML/FUMLFactory.hpp&quot;"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RealLiteralExpEval" eSuperTypes="#//Evaluations/NumericLiteralExpEval ../../../fuml/model/fUML.ecore#//Semantics/Values/LiteralRealEvaluation">
      <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
        <details key="includes" value="#include &quot;fUML/FUMLFactory.hpp&quot;"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EvalEnvironment">
      <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
        <details key="includes" value="#include &quot;ocl/values/UndefinedValue.hpp&quot;"/>
      </eAnnotations>
      <eOperations name="getValueOf" ordered="false" lowerBound="1" eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/Values/Value">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="std::shared_ptr&lt;ocl::Values::NameValueBinding> nvb = this->find(n);&#xA;if(nvb != nullptr)&#xA;&#x9;return nvb->getValue();&#xA;else&#xA;       return ocl::Values::ValuesFactory::eInstance()->createUndefinedValue();"/>
        </eAnnotations>
        <eParameters name="n" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="replace" ordered="false" lowerBound="1">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="std::shared_ptr&lt;ocl::Values::NameValueBinding> nvb = this->find(n->getName());&#xA;if(nvb != nullptr)&#xA;&#x9;return nvb->setValue(n->getValue());&#xA;&#xA;"/>
        </eAnnotations>
        <eParameters name="n" eType="#//Values/NameValueBinding"/>
      </eOperations>
      <eOperations name="add" ordered="false" lowerBound="1">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="//std::shared_ptr&lt;ocl::Values::NameValueBinding> nvb = this->find(n->getName());&#xA;//if(nvb != nullptr)&#xA;&#x9;m_bindings->add(n);&#xA;&#xA;"/>
        </eAnnotations>
        <eParameters name="n" eType="#//Values/NameValueBinding"/>
      </eOperations>
      <eOperations name="find" ordered="false" lowerBound="1" eType="#//Values/NameValueBinding">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="for (Bag&lt;ocl::Values::NameValueBinding>::const_iterator it_attribute = m_bindings->begin(); it_attribute != m_bindings->end(); ++it_attribute)&#xA;    {&#xA;        if ((*it_attribute)->getName() == name) {&#xA;            return *it_attribute;&#xA;        }&#xA;    }&#xA;    return nullptr;"/>
        </eAnnotations>
        <eParameters name="name" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//String"/>
      </eOperations>
      <eOperations name="addAll" ordered="false" lowerBound="1">
        <eAnnotations source="http://sse.tu-ilmenau.de/codegen">
          <details key="body" value="for (Bag&lt;ocl::Values::NameValueBinding>::const_iterator it_attribute = nvbs->begin(); it_attribute != nvbs->end(); ++it_attribute)&#xA;    {&#xA;        if (this->find((*it_attribute)->getName()) == nullptr) {&#xA;           m_bindings->add(*it_attribute);&#xA;        }&#xA;    }&#xA;"/>
        </eAnnotations>
        <eParameters name="nvbs" upperBound="-1" eType="#//Values/NameValueBinding"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="bindings" upperBound="-1"
          eType="#//Values/NameValueBinding"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="VariableDeclEval">
      <eStructuralFeatures xsi:type="ecore:EReference" name="initExp" lowerBound="1"
          eType="#//Evaluations/OclExpEval"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="name" lowerBound="1"
          eType="ecore:EClass ../../../fuml/model/fUML.ecore#//Semantics/SimpleClassifiers/StringValue"/>
    </eClassifiers>
  </eSubpackages>
</ecore:EPackage>

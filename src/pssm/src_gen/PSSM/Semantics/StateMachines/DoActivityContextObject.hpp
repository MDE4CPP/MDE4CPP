//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef PSSM_SEMANTICS_STATEMACHINES_DOACTIVITYCONTEXTOBJECT_HPP
#define PSSM_SEMANTICS_STATEMACHINES_DOACTIVITYCONTEXTOBJECT_HPP


#include <memory>
#include <string>
// forward declarations
template<class T> class Bag; 

class Any;

//*********************************
// generated Includes
#include <map> // used for Persistence
#include <vector> // used for Persistence
namespace persistence
{
	namespace interfaces
	{
		class XLoadHandler; // used for Persistence
		class XSaveHandler; // used for Persistence
	}
}

namespace PSSM
{
	class PSSMFactory;
}

//Forward Declaration for used types 
namespace fUML::Semantics::CommonBehavior 
{
	class EventAccepter;
	class EventOccurrence;
	class Execution;
	class ParameterValue;
}
namespace fUML::MDE4CPP_Extensions 
{
	class FUML_Object;
}
namespace PSSM::Semantics::StateMachines 
{
	class StateActivation;
}
namespace uml 
{
	class Class;
	class Operation;
	class StructuralFeature;
}

// namespace macro header include
#include "PSSM/PSSM.hpp"



#include "ecore/EModelElement.hpp"


//*********************************
namespace PSSM::Semantics::StateMachines 
{
	
	class PSSM_API DoActivityContextObject : virtual public ecore::EModelElement
	{
		public:
 			DoActivityContextObject(const DoActivityContextObject &) {}

		protected:
			DoActivityContextObject(){}

		public:
			virtual std::shared_ptr<ecore::EObject> copy() const = 0;

			//destructor
			virtual ~DoActivityContextObject() {}

			//*********************************
			// Operations
			//*********************************
			
			
			
			
			
			
			
			
			virtual void unregister(const std::shared_ptr<fUML::Semantics::CommonBehavior::EventAccepter>& accepter) = 0;
			

			//*********************************
			// Attribute Getters & Setters
			//*********************************

			//*********************************
			// Reference Getters & Setters
			//*********************************
			virtual const std::shared_ptr<fUML::MDE4CPP_Extensions::FUML_Object>& getContext() const = 0;
			virtual void setContext(const std::shared_ptr<fUML::MDE4CPP_Extensions::FUML_Object>&) = 0;
			virtual const std::shared_ptr<PSSM::Semantics::StateMachines::StateActivation>& getOwner() const = 0;
			virtual void setOwner(const std::shared_ptr<PSSM::Semantics::StateMachines::StateActivation>&) = 0;

			//*********************************
			// Union Reference Getters
			//*********************************

			//*********************************
			// Container Getter
			//*********************************
			virtual std::shared_ptr<ecore::EObject> eContainer() const = 0; 

			//*********************************
			// Persistence Functions
			//*********************************
			virtual void load(std::shared_ptr<persistence::interfaces::XLoadHandler> loadHandler) = 0;
			virtual void resolveReferences(const int featureID, std::vector<std::shared_ptr<ecore::EObject>> references) = 0;
			virtual void save(std::shared_ptr<persistence::interfaces::XSaveHandler> saveHandler) const = 0;

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			
			//*********************************
			// Reference Members
			//*********************************
			std::shared_ptr<fUML::MDE4CPP_Extensions::FUML_Object> m_context;
			std::shared_ptr<PSSM::Semantics::StateMachines::StateActivation> m_owner;
	};
}
#endif /* end of include guard: PSSM_SEMANTICS_STATEMACHINES_DOACTIVITYCONTEXTOBJECT_HPP */

//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef PSSM_SEMANTICSPACKAGEIMPL_HPP
#define PSSM_SEMANTICSPACKAGEIMPL_HPP

// namespace macro header include
#include "PSSM/PSSM.hpp"

#include "ecore/ecorePackage.hpp"
#include "ecore/impl/EPackageImpl.hpp"

#include "PSSM/Semantics/SemanticsPackage.hpp" 


namespace PSSM::Semantics 
{
	namespace Actions 
	{
		class ActionsPackage;
	}

	namespace CommonBehavior 
	{
		class CommonBehaviorPackage;
	}

	namespace Loci 
	{
		class LociPackage;
	}

	namespace StateMachines 
	{
		class StateMachinesPackage;
	}

	namespace StructuredClassifiers 
	{
		class StructuredClassifiersPackage;
	}

	namespace Values 
	{
		class ValuesPackage;
	}
}

namespace ecore
{
	class ecoreFactory;
}

namespace PSSM::Semantics
{
	class PSSM_API SemanticsPackageImpl : public ecore::EPackageImpl ,virtual public SemanticsPackage
	{
		private:    
			SemanticsPackageImpl(SemanticsPackageImpl const&) = delete;
			SemanticsPackageImpl& operator=(SemanticsPackageImpl const&) = delete;

		protected:
			SemanticsPackageImpl();

		public:
			virtual ~SemanticsPackageImpl();


			
			// SubPackages Getters
			virtual std::shared_ptr<PSSM::Semantics::Actions::ActionsPackage> getActions_Package() const ;
			virtual std::shared_ptr<PSSM::Semantics::CommonBehavior::CommonBehaviorPackage> getCommonBehavior_Package() const ;
			virtual std::shared_ptr<PSSM::Semantics::Loci::LociPackage> getLoci_Package() const ;
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::StateMachinesPackage> getStateMachines_Package() const ;
			virtual std::shared_ptr<PSSM::Semantics::StructuredClassifiers::StructuredClassifiersPackage> getStructuredClassifiers_Package() const ;
			virtual std::shared_ptr<PSSM::Semantics::Values::ValuesPackage> getValues_Package() const ;
			

		private:
			
			
			
			
			

			friend class SemanticsPackage;

			static bool isInited;
			static SemanticsPackage* create();
			bool isInitialized = false;
 			bool isCreated = false;

			virtual void init(std::shared_ptr<ecore::EPackage> package);

		public:
			void createPackageContents(std::shared_ptr<ecore::EPackage> package);
			void initializePackageContents();

		private:
			void createPackageEDataTypes(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);

			void initializePackageEDataTypes();



	};
}
#endif /* end of include guard: PSSM_SEMANTICSPACKAGEIMPL_HPP */

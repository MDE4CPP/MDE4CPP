//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef UMLPACKAGEIMPL_HPP
#define UMLPACKAGEIMPL_HPP

#include "ecore/EcorePackage.hpp"
#include "ecore/impl/EPackageImpl.hpp"

#include "uml/UmlPackage.hpp" 


namespace uml 
{
	class Abstraction;
	class AcceptCallAction;
	class AcceptEventAction;
	class Action;
	class ActionExecutionSpecification;
	class ActionInputPin;
	class Activity;
	class ActivityContent;
	class ActivityEdge;
	class ActivityFinalNode;
	class ActivityGroup;
	class ActivityNode;
	class ActivityParameterNode;
	class ActivityPartition;
	class Actor;
	class AddStructuralFeatureValueAction;
	class AddVariableValueAction;
	class AnyReceiveEvent;
	class Argument;
	class Artifact;
	class Association;
	class AssociationClass;
	class Behavior;
	class BehaviorExecutionSpecification;
	class BehavioralFeature;
	class BehavioredClassifier;
	class BroadcastSignalAction;
	class CallAction;
	class CallBehaviorAction;
	class CallEvent;
	class CallOperationAction;
	class CentralBufferNode;
	class ChangeEvent;
	class Class;
	class Classifier;
	class ClassifierTemplateParameter;
	class Clause;
	class ClearAssociationAction;
	class ClearStructuralFeatureAction;
	class ClearVariableAction;
	class Collaboration;
	class CollaborationUse;
	class CombinedFragment;
	class Comment;
	class CommunicationPath;
	class Component;
	class ComponentRealization;
	class ConditionalNode;
	class ConnectableElement;
	class ConnectableElementTemplateParameter;
	class ConnectionPointReference;
	class Connector;
	class ConnectorEnd;
	class ConsiderIgnoreFragment;
	class Constraint;
	class Continuation;
	class ControlFlow;
	class ControlNode;
	class CreateLinkAction;
	class CreateLinkObjectAction;
	class CreateObjectAction;
	class DataStoreNode;
	class DataType;
	class DecisionNode;
	class Dependency;
	class DeployedArtifact;
	class Deployment;
	class DeploymentSpecification;
	class DeploymentTarget;
	class DestroyLinkAction;
	class DestroyObjectAction;
	class DestructionOccurrenceSpecification;
	class Device;
	class DirectedRelationship;
	class Duration;
	class DurationConstraint;
	class DurationInterval;
	class DurationObservation;
	class Element;
	class ElementImport;
	class EncapsulatedClassifier;
	class Enumeration;
	class EnumerationLiteral;
	class Event;
	class ExceptionHandler;
	class ExecutableNode;
	class ExecutionEnvironment;
	class ExecutionOccurrenceSpecification;
	class ExecutionSpecification;
	class ExpansionNode;
	class ExpansionRegion;
	class Expression;
	class Extend;
	class Extension;
	class ExtensionEnd;
	class ExtensionPoint;
	class Factory;
	class Feature;
	class FinalNode;
	class FinalState;
	class FlowFinalNode;
	class ForkNode;
	class FunctionBehavior;
	class Gate;
	class GeneralOrdering;
	class Generalization;
	class GeneralizationSet;
	class Image;
	class Include;
	class InformationFlow;
	class InformationItem;
	class InitialNode;
	class InputPin;
	class InstanceSpecification;
	class InstanceValue;
	class Interaction;
	class InteractionConstraint;
	class InteractionFragment;
	class InteractionOperand;
	class InteractionUse;
	class Interface;
	class InterfaceRealization;
	class InterruptibleActivityRegion;
	class Interval;
	class IntervalConstraint;
	class InvocationAction;
	class JoinNode;
	class Lifeline;
	class LinkAction;
	class LinkEndCreationData;
	class LinkEndData;
	class LinkEndDestructionData;
	class LiteralBoolean;
	class LiteralInteger;
	class LiteralNull;
	class LiteralReal;
	class LiteralSpecification;
	class LiteralString;
	class LiteralUnlimitedNatural;
	class LoopNode;
	class Manifestation;
	class MergeNode;
	class Message;
	class MessageEnd;
	class MessageEvent;
	class MessageOccurrenceSpecification;
	class Model;
	class MultiplicityElement;
	class NamedElement;
	class Namespace;
	class Node;
	class Object;
	class ObjectFlow;
	class ObjectNode;
	class Observation;
	class OccurrenceSpecification;
	class OpaqueAction;
	class OpaqueBehavior;
	class OpaqueExpression;
	class Operation;
	class OperationTemplateParameter;
	class OutputPin;
	class Package;
	class PackageImport;
	class PackageMerge;
	class PackageableElement;
	class Parameter;
	class ParameterSet;
	class ParameterableElement;
	class PartDecomposition;
	class Pin;
	class Port;
	class PrimitiveType;
	class Profile;
	class ProfileApplication;
	class Property;
	class ProtocolConformance;
	class ProtocolStateMachine;
	class ProtocolTransition;
	class Pseudostate;
	class QualifierValue;
	class RaiseExceptionAction;
	class ReadExtentAction;
	class ReadIsClassifiedObjectAction;
	class ReadLinkAction;
	class ReadLinkObjectEndAction;
	class ReadLinkObjectEndQualifierAction;
	class ReadSelfAction;
	class ReadStructuralFeatureAction;
	class ReadVariableAction;
	class Realization;
	class Reception;
	class ReclassifyObjectAction;
	class RedefinableElement;
	class RedefinableTemplateSignature;
	class ReduceAction;
	class Region;
	class Relationship;
	class RemoveStructuralFeatureValueAction;
	class RemoveVariableValueAction;
	class ReplyAction;
	class SendObjectAction;
	class SendSignalAction;
	class SequenceNode;
	class Signal;
	class SignalEvent;
	class Slot;
	class StartClassifierBehaviorAction;
	class StartObjectBehaviorAction;
	class State;
	class StateInvariant;
	class StateMachine;
	class Stereotype;
	class StringExpression;
	class StructuralFeature;
	class StructuralFeatureAction;
	class StructuredActivityNode;
	class StructuredClassifier;
	class Substitution;
	class TemplateBinding;
	class TemplateParameter;
	class TemplateParameterSubstitution;
	class TemplateSignature;
	class TemplateableElement;
	class TestIdentityAction;
	class TimeConstraint;
	class TimeEvent;
	class TimeExpression;
	class TimeInterval;
	class TimeObservation;
	class Transition;
	class Trigger;
	class Type;
	class TypedElement;
	class UnmarshallAction;
	class Usage;
	class UseCase;
	class ValuePin;
	class ValueSpecification;
	class ValueSpecificationAction;
	class Variable;
	class VariableAction;
	class Vertex;
	class WriteLinkAction;
	class WriteStructuralFeatureAction;
	class WriteVariableAction;}

namespace ecore
{
	class EcoreFactory;
}

namespace uml
{
	class UmlPackageImpl : public ecore::EPackageImpl ,virtual public UmlPackage
	{
		private:    
			UmlPackageImpl(UmlPackageImpl const&) = delete;
			UmlPackageImpl& operator=(UmlPackageImpl const&) = delete;

		protected:
			UmlPackageImpl();

		public:
			virtual ~UmlPackageImpl();

			// Begin Class Abstraction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getAbstraction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getAbstraction_Attribute_mapping() const ;
			
			
			// End Class Abstraction

			// Begin Class AcceptCallAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getAcceptCallAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getAcceptCallAction_Attribute_returnInformation() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getAcceptCallAction_Operation_result_pins_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getAcceptCallAction_Operation_trigger_call_event_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getAcceptCallAction_Operation_unmarshall_EDiagnosticChain_EMap() const ;
			
			// End Class AcceptCallAction

			// Begin Class AcceptEventAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getAcceptEventAction_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getAcceptEventAction_Attribute_isUnmarshall() const ;
			
			virtual std::shared_ptr<ecore::EReference> getAcceptEventAction_Attribute_result() const ;
			virtual std::shared_ptr<ecore::EReference> getAcceptEventAction_Attribute_trigger() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getAcceptEventAction_Operation_conforming_type_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getAcceptEventAction_Operation_no_input_pins_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getAcceptEventAction_Operation_no_output_pins_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getAcceptEventAction_Operation_one_output_pin_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getAcceptEventAction_Operation_unmarshall_signal_events_EDiagnosticChain_EMap() const ;
			
			// End Class AcceptEventAction

			// Begin Class Action
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getAction_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getAction_Attribute_isLocallyReentrant() const ;
			
			virtual std::shared_ptr<ecore::EReference> getAction_Attribute_context() const ;
			virtual std::shared_ptr<ecore::EReference> getAction_Attribute_input() const ;
			virtual std::shared_ptr<ecore::EReference> getAction_Attribute_localPostcondition() const ;
			virtual std::shared_ptr<ecore::EReference> getAction_Attribute_localPrecondition() const ;
			virtual std::shared_ptr<ecore::EReference> getAction_Attribute_output() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getAction_Operation_allActions() const ;
			virtual std::shared_ptr<ecore::EOperation> getAction_Operation_allOwnedNodes() const ;
			virtual std::shared_ptr<ecore::EOperation> getAction_Operation_containingBehavior() const ;
			virtual std::shared_ptr<ecore::EOperation> getAction_Operation_getContext() const ;
			
			// End Class Action

			// Begin Class ActionExecutionSpecification
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getActionExecutionSpecification_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getActionExecutionSpecification_Attribute_action() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getActionExecutionSpecification_Operation_action_referenced_EDiagnosticChain_EMap() const ;
			
			// End Class ActionExecutionSpecification

			// Begin Class ActionInputPin
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getActionInputPin_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getActionInputPin_Attribute_fromAction() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getActionInputPin_Operation_input_pin_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionInputPin_Operation_no_control_or_object_flow_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getActionInputPin_Operation_one_output_pin_EDiagnosticChain_EMap() const ;
			
			// End Class ActionInputPin

			// Begin Class Activity
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getActivity_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getActivity_Attribute_isReadOnly() const ;
			virtual std::shared_ptr<ecore::EAttribute> getActivity_Attribute_isSingleExecution() const ;
			
			virtual std::shared_ptr<ecore::EReference> getActivity_Attribute_edge() const ;
			virtual std::shared_ptr<ecore::EReference> getActivity_Attribute_group() const ;
			virtual std::shared_ptr<ecore::EReference> getActivity_Attribute_node() const ;
			virtual std::shared_ptr<ecore::EReference> getActivity_Attribute_ownedGroup() const ;
			virtual std::shared_ptr<ecore::EReference> getActivity_Attribute_ownedNode() const ;
			virtual std::shared_ptr<ecore::EReference> getActivity_Attribute_partition() const ;
			virtual std::shared_ptr<ecore::EReference> getActivity_Attribute_structuredNode() const ;
			virtual std::shared_ptr<ecore::EReference> getActivity_Attribute_variable() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getActivity_Operation_maximum_one_parameter_node_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivity_Operation_maximum_two_parameter_nodes_EDiagnosticChain_EMap() const ;
			
			// End Class Activity

			// Begin Class ActivityContent
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getActivityContent_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getActivityContent_Operation_containingActivity() const ;
			
			// End Class ActivityContent

			// Begin Class ActivityEdge
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getActivityEdge_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getActivityEdge_Attribute_activity() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityEdge_Attribute_guard() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityEdge_Attribute_inGroup() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityEdge_Attribute_inPartition() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityEdge_Attribute_inStructuredNode() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityEdge_Attribute_interrupts() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityEdge_Attribute_redefinedEdge() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityEdge_Attribute_source() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityEdge_Attribute_target() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityEdge_Attribute_weight() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getActivityEdge_Operation_source_and_target_EDiagnosticChain_EMap() const ;
			
			// End Class ActivityEdge

			// Begin Class ActivityFinalNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getActivityFinalNode_Class() const ;
			
			
			
			
			// End Class ActivityFinalNode

			// Begin Class ActivityGroup
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getActivityGroup_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getActivityGroup_Attribute_containedEdge() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityGroup_Attribute_containedNode() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityGroup_Attribute_inActivity() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityGroup_Attribute_subgroup() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityGroup_Attribute_superGroup() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getActivityGroup_Operation_nodes_and_edges_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityGroup_Operation_not_contained_EDiagnosticChain_EMap() const ;
			
			// End Class ActivityGroup

			// Begin Class ActivityNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getActivityNode_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getActivityNode_Attribute_activity() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityNode_Attribute_inGroup() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityNode_Attribute_inInterruptibleRegion() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityNode_Attribute_inPartition() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityNode_Attribute_inStructuredNode() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityNode_Attribute_incoming() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityNode_Attribute_outgoing() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityNode_Attribute_redefinedNode() const ;
			
			
			// End Class ActivityNode

			// Begin Class ActivityParameterNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getActivityParameterNode_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getActivityParameterNode_Attribute_parameter() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getActivityParameterNode_Operation_has_parameters_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityParameterNode_Operation_no_edges_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityParameterNode_Operation_no_incoming_edges_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityParameterNode_Operation_no_outgoing_edges_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityParameterNode_Operation_same_type_EDiagnosticChain_EMap() const ;
			
			// End Class ActivityParameterNode

			// Begin Class ActivityPartition
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getActivityPartition_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getActivityPartition_Attribute_isDimension() const ;
			virtual std::shared_ptr<ecore::EAttribute> getActivityPartition_Attribute_isExternal() const ;
			
			virtual std::shared_ptr<ecore::EReference> getActivityPartition_Attribute_edge() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityPartition_Attribute_node() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityPartition_Attribute_represents() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityPartition_Attribute_subpartition() const ;
			virtual std::shared_ptr<ecore::EReference> getActivityPartition_Attribute_superPartition() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getActivityPartition_Operation_dimension_not_contained_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityPartition_Operation_represents_classifier_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityPartition_Operation_represents_property_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getActivityPartition_Operation_represents_property_and_is_contained_EDiagnosticChain_EMap() const ;
			
			// End Class ActivityPartition

			// Begin Class Actor
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getActor_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getActor_Operation_associations_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getActor_Operation_must_have_name_EDiagnosticChain_EMap() const ;
			
			// End Class Actor

			// Begin Class AddStructuralFeatureValueAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getAddStructuralFeatureValueAction_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getAddStructuralFeatureValueAction_Attribute_isReplaceAll() const ;
			
			virtual std::shared_ptr<ecore::EReference> getAddStructuralFeatureValueAction_Attribute_insertAt() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getAddStructuralFeatureValueAction_Operation_insertAt_pin_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getAddStructuralFeatureValueAction_Operation_required_value_EDiagnosticChain_EMap() const ;
			
			// End Class AddStructuralFeatureValueAction

			// Begin Class AddVariableValueAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getAddVariableValueAction_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getAddVariableValueAction_Attribute_isReplaceAll() const ;
			
			virtual std::shared_ptr<ecore::EReference> getAddVariableValueAction_Attribute_insertAt() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getAddVariableValueAction_Operation_insertAt_pin_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getAddVariableValueAction_Operation_required_value_EDiagnosticChain_EMap() const ;
			
			// End Class AddVariableValueAction

			// Begin Class AnyReceiveEvent
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getAnyReceiveEvent_Class() const ;
			
			
			
			
			// End Class AnyReceiveEvent

			// Begin Class Argument
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getArgument_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getArgument_Attribute_name() const ;
			
			virtual std::shared_ptr<ecore::EReference> getArgument_Attribute_value() const ;
			
			
			// End Class Argument

			// Begin Class Artifact
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getArtifact_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getArtifact_Attribute_fileName() const ;
			
			virtual std::shared_ptr<ecore::EReference> getArtifact_Attribute_manifestation() const ;
			virtual std::shared_ptr<ecore::EReference> getArtifact_Attribute_nestedArtifact() const ;
			virtual std::shared_ptr<ecore::EReference> getArtifact_Attribute_ownedAttribute() const ;
			virtual std::shared_ptr<ecore::EReference> getArtifact_Attribute_ownedOperation() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getArtifact_Operation_createOwnedAttribute_String_UnlimitedNatural() const ;
			virtual std::shared_ptr<ecore::EOperation> getArtifact_Operation_createOwnedOperation_String_Type() const ;
			
			// End Class Artifact

			// Begin Class Association
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getAssociation_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getAssociation_Attribute_isDerived() const ;
			
			virtual std::shared_ptr<ecore::EReference> getAssociation_Attribute_endType() const ;
			virtual std::shared_ptr<ecore::EReference> getAssociation_Attribute_memberEnd() const ;
			virtual std::shared_ptr<ecore::EReference> getAssociation_Attribute_navigableOwnedEnd() const ;
			virtual std::shared_ptr<ecore::EReference> getAssociation_Attribute_ownedEnd() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getAssociation_Operation_association_ends_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getAssociation_Operation_binary_associations_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getAssociation_Operation_ends_must_be_typed_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getAssociation_Operation_getEndTypes() const ;
			virtual std::shared_ptr<ecore::EOperation> getAssociation_Operation_isBinary() const ;
			virtual std::shared_ptr<ecore::EOperation> getAssociation_Operation_specialized_end_number_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getAssociation_Operation_specialized_end_types_EDiagnosticChain_EMap() const ;
			
			// End Class Association

			// Begin Class AssociationClass
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getAssociationClass_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getAssociationClass_Operation_cannot_be_defined_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getAssociationClass_Operation_disjoint_attributes_ends_EDiagnosticChain_EMap() const ;
			
			// End Class AssociationClass

			// Begin Class Behavior
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getBehavior_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getBehavior_Attribute_isReentrant() const ;
			
			virtual std::shared_ptr<ecore::EReference> getBehavior_Attribute_behavioredClassifier() const ;
			virtual std::shared_ptr<ecore::EReference> getBehavior_Attribute_context() const ;
			virtual std::shared_ptr<ecore::EReference> getBehavior_Attribute_ownedParameter() const ;
			virtual std::shared_ptr<ecore::EReference> getBehavior_Attribute_ownedParameterSet() const ;
			virtual std::shared_ptr<ecore::EReference> getBehavior_Attribute_postcondition() const ;
			virtual std::shared_ptr<ecore::EReference> getBehavior_Attribute_precondition() const ;
			virtual std::shared_ptr<ecore::EReference> getBehavior_Attribute_redefinedBehavior() const ;
			virtual std::shared_ptr<ecore::EReference> getBehavior_Attribute_specification() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getBehavior_Operation_behavioredClassifier_Element() const ;
			virtual std::shared_ptr<ecore::EOperation> getBehavior_Operation_feature_of_context_classifier_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getBehavior_Operation_getContext() const ;
			virtual std::shared_ptr<ecore::EOperation> getBehavior_Operation_inputParameters() const ;
			virtual std::shared_ptr<ecore::EOperation> getBehavior_Operation_most_one_behavior_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getBehavior_Operation_outputParameters() const ;
			virtual std::shared_ptr<ecore::EOperation> getBehavior_Operation_parameters_match_EDiagnosticChain_EMap() const ;
			
			// End Class Behavior

			// Begin Class BehaviorExecutionSpecification
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getBehaviorExecutionSpecification_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getBehaviorExecutionSpecification_Attribute_behavior() const ;
			
			
			// End Class BehaviorExecutionSpecification

			// Begin Class BehavioralFeature
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getBehavioralFeature_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getBehavioralFeature_Attribute_concurrency() const ;
			virtual std::shared_ptr<ecore::EAttribute> getBehavioralFeature_Attribute_isAbstract() const ;
			
			virtual std::shared_ptr<ecore::EReference> getBehavioralFeature_Attribute_method() const ;
			virtual std::shared_ptr<ecore::EReference> getBehavioralFeature_Attribute_ownedParameter() const ;
			virtual std::shared_ptr<ecore::EReference> getBehavioralFeature_Attribute_ownedParameterSet() const ;
			virtual std::shared_ptr<ecore::EReference> getBehavioralFeature_Attribute_raisedException() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getBehavioralFeature_Operation_abstract_no_method_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getBehavioralFeature_Operation_createReturnResult_String_Type() const ;
			virtual std::shared_ptr<ecore::EOperation> getBehavioralFeature_Operation_inputParameters() const ;
			virtual std::shared_ptr<ecore::EOperation> getBehavioralFeature_Operation_outputParameters() const ;
			
			// End Class BehavioralFeature

			// Begin Class BehavioredClassifier
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getBehavioredClassifier_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getBehavioredClassifier_Attribute_classifierBehavior() const ;
			virtual std::shared_ptr<ecore::EReference> getBehavioredClassifier_Attribute_interfaceRealization() const ;
			virtual std::shared_ptr<ecore::EReference> getBehavioredClassifier_Attribute_ownedBehavior() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getBehavioredClassifier_Operation_class_behavior_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getBehavioredClassifier_Operation_getAllImplementedInterfaces() const ;
			virtual std::shared_ptr<ecore::EOperation> getBehavioredClassifier_Operation_getImplementedInterfaces() const ;
			
			// End Class BehavioredClassifier

			// Begin Class BroadcastSignalAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getBroadcastSignalAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getBroadcastSignalAction_Attribute_signal() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getBroadcastSignalAction_Operation_no_onport_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getBroadcastSignalAction_Operation_number_of_arguments_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getBroadcastSignalAction_Operation_type_ordering_multiplicity_EDiagnosticChain_EMap() const ;
			
			// End Class BroadcastSignalAction

			// Begin Class CallAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCallAction_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getCallAction_Attribute_isSynchronous() const ;
			
			virtual std::shared_ptr<ecore::EReference> getCallAction_Attribute_result() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getCallAction_Operation_argument_pins_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getCallAction_Operation_inputParameters() const ;
			virtual std::shared_ptr<ecore::EOperation> getCallAction_Operation_outputParameters() const ;
			virtual std::shared_ptr<ecore::EOperation> getCallAction_Operation_result_pins_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getCallAction_Operation_synchronous_call_EDiagnosticChain_EMap() const ;
			
			// End Class CallAction

			// Begin Class CallBehaviorAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCallBehaviorAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getCallBehaviorAction_Attribute_behavior() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getCallBehaviorAction_Operation_no_onport_EDiagnosticChain_EMap() const ;
			
			// End Class CallBehaviorAction

			// Begin Class CallEvent
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCallEvent_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getCallEvent_Attribute_operation() const ;
			
			
			// End Class CallEvent

			// Begin Class CallOperationAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCallOperationAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getCallOperationAction_Attribute_operation() const ;
			virtual std::shared_ptr<ecore::EReference> getCallOperationAction_Attribute_target() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getCallOperationAction_Operation_type_target_pin_EDiagnosticChain_EMap() const ;
			
			// End Class CallOperationAction

			// Begin Class CentralBufferNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCentralBufferNode_Class() const ;
			
			
			
			
			// End Class CentralBufferNode

			// Begin Class ChangeEvent
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getChangeEvent_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getChangeEvent_Attribute_changeExpression() const ;
			
			
			// End Class ChangeEvent

			// Begin Class Class
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getClass_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getClass_Attribute_isActive() const ;
			
			virtual std::shared_ptr<ecore::EReference> getClass_Attribute_extension() const ;
			virtual std::shared_ptr<ecore::EReference> getClass_Attribute_nestedClassifier() const ;
			virtual std::shared_ptr<ecore::EReference> getClass_Attribute_ownedOperation() const ;
			virtual std::shared_ptr<ecore::EReference> getClass_Attribute_ownedReception() const ;
			virtual std::shared_ptr<ecore::EReference> getClass_Attribute_superClass() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getClass_Operation_createOwnedOperation_String_Type() const ;
			virtual std::shared_ptr<ecore::EOperation> getClass_Operation_getExtensions() const ;
			virtual std::shared_ptr<ecore::EOperation> getClass_Operation_getSuperClasses() const ;
			virtual std::shared_ptr<ecore::EOperation> getClass_Operation_isMetaclass() const ;
			virtual std::shared_ptr<ecore::EOperation> getClass_Operation_passive_class_EDiagnosticChain_EMap() const ;
			
			// End Class Class

			// Begin Class Classifier
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getClassifier_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getClassifier_Attribute_isAbstract() const ;
			virtual std::shared_ptr<ecore::EAttribute> getClassifier_Attribute_isFinalSpecialization() const ;
			
			virtual std::shared_ptr<ecore::EReference> getClassifier_Attribute_attribute() const ;
			virtual std::shared_ptr<ecore::EReference> getClassifier_Attribute_collaborationUse() const ;
			virtual std::shared_ptr<ecore::EReference> getClassifier_Attribute_feature() const ;
			virtual std::shared_ptr<ecore::EReference> getClassifier_Attribute_general() const ;
			virtual std::shared_ptr<ecore::EReference> getClassifier_Attribute_generalization() const ;
			virtual std::shared_ptr<ecore::EReference> getClassifier_Attribute_inheritedMember() const ;
			virtual std::shared_ptr<ecore::EReference> getClassifier_Attribute_ownedUseCase() const ;
			virtual std::shared_ptr<ecore::EReference> getClassifier_Attribute_powertypeExtent() const ;
			virtual std::shared_ptr<ecore::EReference> getClassifier_Attribute_redefinedClassifier() const ;
			virtual std::shared_ptr<ecore::EReference> getClassifier_Attribute_representation() const ;
			virtual std::shared_ptr<ecore::EReference> getClassifier_Attribute_substitution() const ;
			virtual std::shared_ptr<ecore::EReference> getClassifier_Attribute_useCase() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_allAttributes() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_allFeatures() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_allParents() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_allRealizedInterfaces() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_allSlottableFeatures() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_allUsedInterfaces() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_directlyRealizedInterfaces() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_directlyUsedInterfaces() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_getAllAttributes() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_getAllOperations() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_getAllUsedInterfaces() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_getGenerals() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_getInheritedMembers() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_getOperation_String_Type() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_getOperation_String_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_getOperations() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_getUsedInterfaces() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_hasVisibilityOf_NamedElement() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_inherit_NamedElement() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_inheritableMembers_Classifier() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_isSubstitutableFor_Classifier() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_maps_to_generalization_set_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_maySpecializeType_Classifier() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_no_cycles_in_generalization_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_non_final_parents_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_parents() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifier_Operation_specialize_type_EDiagnosticChain_EMap() const ;
			
			// End Class Classifier

			// Begin Class ClassifierTemplateParameter
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getClassifierTemplateParameter_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getClassifierTemplateParameter_Attribute_allowSubstitutable() const ;
			
			virtual std::shared_ptr<ecore::EReference> getClassifierTemplateParameter_Attribute_constrainingClassifier() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getClassifierTemplateParameter_Operation_actual_is_classifier_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifierTemplateParameter_Operation_constraining_classifiers_constrain_args_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifierTemplateParameter_Operation_constraining_classifiers_constrain_parametered_element_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifierTemplateParameter_Operation_has_constraining_classifier_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifierTemplateParameter_Operation_matching_abstract_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getClassifierTemplateParameter_Operation_parametered_element_no_features_EDiagnosticChain_EMap() const ;
			
			// End Class ClassifierTemplateParameter

			// Begin Class Clause
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getClause_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getClause_Attribute_body() const ;
			virtual std::shared_ptr<ecore::EReference> getClause_Attribute_bodyOutput() const ;
			virtual std::shared_ptr<ecore::EReference> getClause_Attribute_decider() const ;
			virtual std::shared_ptr<ecore::EReference> getClause_Attribute_predecessorClause() const ;
			virtual std::shared_ptr<ecore::EReference> getClause_Attribute_successorClause() const ;
			virtual std::shared_ptr<ecore::EReference> getClause_Attribute_test() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getClause_Operation_body_output_pins_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getClause_Operation_decider_output_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getClause_Operation_test_and_body_EDiagnosticChain_EMap() const ;
			
			// End Class Clause

			// Begin Class ClearAssociationAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getClearAssociationAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getClearAssociationAction_Attribute_association() const ;
			virtual std::shared_ptr<ecore::EReference> getClearAssociationAction_Attribute_object() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getClearAssociationAction_Operation_multiplicity_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getClearAssociationAction_Operation_same_type_EDiagnosticChain_EMap() const ;
			
			// End Class ClearAssociationAction

			// Begin Class ClearStructuralFeatureAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getClearStructuralFeatureAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getClearStructuralFeatureAction_Attribute_result() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getClearStructuralFeatureAction_Operation_multiplicity_of_result_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getClearStructuralFeatureAction_Operation_type_of_result_EDiagnosticChain_EMap() const ;
			
			// End Class ClearStructuralFeatureAction

			// Begin Class ClearVariableAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getClearVariableAction_Class() const ;
			
			
			
			
			// End Class ClearVariableAction

			// Begin Class Collaboration
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCollaboration_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getCollaboration_Attribute_collaborationRole() const ;
			
			
			// End Class Collaboration

			// Begin Class CollaborationUse
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCollaborationUse_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getCollaborationUse_Attribute_roleBinding() const ;
			virtual std::shared_ptr<ecore::EReference> getCollaborationUse_Attribute_type() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getCollaborationUse_Operation_client_elements_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getCollaborationUse_Operation_connectors_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getCollaborationUse_Operation_every_role_EDiagnosticChain_EMap() const ;
			
			// End Class CollaborationUse

			// Begin Class CombinedFragment
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCombinedFragment_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getCombinedFragment_Attribute_interactionOperator() const ;
			
			virtual std::shared_ptr<ecore::EReference> getCombinedFragment_Attribute_cfragmentGate() const ;
			virtual std::shared_ptr<ecore::EReference> getCombinedFragment_Attribute_operand() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getCombinedFragment_Operation_break__EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getCombinedFragment_Operation_consider_and_ignore_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getCombinedFragment_Operation_opt_loop_break_neg_EDiagnosticChain_EMap() const ;
			
			// End Class CombinedFragment

			// Begin Class Comment
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getComment_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getComment_Attribute_body() const ;
			
			virtual std::shared_ptr<ecore::EReference> getComment_Attribute_annotatedElement() const ;
			
			
			// End Class Comment

			// Begin Class CommunicationPath
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCommunicationPath_Class() const ;
			
			
			
			
			// End Class CommunicationPath

			// Begin Class Component
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getComponent_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getComponent_Attribute_isIndirectlyInstantiated() const ;
			
			virtual std::shared_ptr<ecore::EReference> getComponent_Attribute_packagedElement() const ;
			virtual std::shared_ptr<ecore::EReference> getComponent_Attribute_provided() const ;
			virtual std::shared_ptr<ecore::EReference> getComponent_Attribute_realization() const ;
			virtual std::shared_ptr<ecore::EReference> getComponent_Attribute_required() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getComponent_Operation_createOwnedClass_String_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getComponent_Operation_createOwnedEnumeration_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getComponent_Operation_createOwnedInterface_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getComponent_Operation_createOwnedPrimitiveType_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getComponent_Operation_getProvideds() const ;
			virtual std::shared_ptr<ecore::EOperation> getComponent_Operation_getRequireds() const ;
			virtual std::shared_ptr<ecore::EOperation> getComponent_Operation_no_nested_classifiers_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getComponent_Operation_no_packaged_elements_EDiagnosticChain_EMap() const ;
			
			// End Class Component

			// Begin Class ComponentRealization
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getComponentRealization_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getComponentRealization_Attribute_abstraction() const ;
			virtual std::shared_ptr<ecore::EReference> getComponentRealization_Attribute_realizingClassifier() const ;
			
			
			// End Class ComponentRealization

			// Begin Class ConditionalNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getConditionalNode_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getConditionalNode_Attribute_isAssured() const ;
			virtual std::shared_ptr<ecore::EAttribute> getConditionalNode_Attribute_isDeterminate() const ;
			
			virtual std::shared_ptr<ecore::EReference> getConditionalNode_Attribute_clause() const ;
			virtual std::shared_ptr<ecore::EReference> getConditionalNode_Attribute_result() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getConditionalNode_Operation_clause_no_predecessor_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getConditionalNode_Operation_executable_nodes_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getConditionalNode_Operation_matching_output_pins_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getConditionalNode_Operation_no_input_pins_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getConditionalNode_Operation_one_clause_with_executable_node_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getConditionalNode_Operation_result_no_incoming_EDiagnosticChain_EMap() const ;
			
			// End Class ConditionalNode

			// Begin Class ConnectableElement
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getConnectableElement_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getConnectableElement_Attribute_end() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getConnectableElement_Operation_getEnds() const ;
			
			// End Class ConnectableElement

			// Begin Class ConnectableElementTemplateParameter
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getConnectableElementTemplateParameter_Class() const ;
			
			
			
			
			// End Class ConnectableElementTemplateParameter

			// Begin Class ConnectionPointReference
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getConnectionPointReference_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getConnectionPointReference_Attribute_entry() const ;
			virtual std::shared_ptr<ecore::EReference> getConnectionPointReference_Attribute_exit() const ;
			virtual std::shared_ptr<ecore::EReference> getConnectionPointReference_Attribute_state() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getConnectionPointReference_Operation_entry_pseudostates_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getConnectionPointReference_Operation_exit_pseudostates_EDiagnosticChain_EMap() const ;
			
			// End Class ConnectionPointReference

			// Begin Class Connector
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getConnector_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getConnector_Attribute_kind() const ;
			
			virtual std::shared_ptr<ecore::EReference> getConnector_Attribute_contract() const ;
			virtual std::shared_ptr<ecore::EReference> getConnector_Attribute_end() const ;
			virtual std::shared_ptr<ecore::EReference> getConnector_Attribute_redefinedConnector() const ;
			virtual std::shared_ptr<ecore::EReference> getConnector_Attribute_type() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getConnector_Operation_getKind() const ;
			virtual std::shared_ptr<ecore::EOperation> getConnector_Operation_roles_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getConnector_Operation_types_EDiagnosticChain_EMap() const ;
			
			// End Class Connector

			// Begin Class ConnectorEnd
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getConnectorEnd_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getConnectorEnd_Attribute_definingEnd() const ;
			virtual std::shared_ptr<ecore::EReference> getConnectorEnd_Attribute_partWithPort() const ;
			virtual std::shared_ptr<ecore::EReference> getConnectorEnd_Attribute_role() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getConnectorEnd_Operation_getDefiningEnd() const ;
			virtual std::shared_ptr<ecore::EOperation> getConnectorEnd_Operation_multiplicity_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getConnectorEnd_Operation_part_with_port_empty_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getConnectorEnd_Operation_role_and_part_with_port_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getConnectorEnd_Operation_self_part_with_port_EDiagnosticChain_EMap() const ;
			
			// End Class ConnectorEnd

			// Begin Class ConsiderIgnoreFragment
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getConsiderIgnoreFragment_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getConsiderIgnoreFragment_Attribute_message() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getConsiderIgnoreFragment_Operation_consider_or_ignore_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getConsiderIgnoreFragment_Operation_type_EDiagnosticChain_EMap() const ;
			
			// End Class ConsiderIgnoreFragment

			// Begin Class Constraint
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getConstraint_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getConstraint_Attribute_constrainedElement() const ;
			virtual std::shared_ptr<ecore::EReference> getConstraint_Attribute_context() const ;
			virtual std::shared_ptr<ecore::EReference> getConstraint_Attribute_specification() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getConstraint_Operation_boolean_value_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getConstraint_Operation_no_side_effects_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getConstraint_Operation_not_apply_to_self_EDiagnosticChain_EMap() const ;
			
			// End Class Constraint

			// Begin Class Continuation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getContinuation_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getContinuation_Attribute_setting() const ;
			
			
			virtual std::shared_ptr<ecore::EOperation> getContinuation_Operation_first_or_last_interaction_fragment_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getContinuation_Operation_global_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getContinuation_Operation_same_name_EDiagnosticChain_EMap() const ;
			
			// End Class Continuation

			// Begin Class ControlFlow
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getControlFlow_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getControlFlow_Operation_object_nodes_EDiagnosticChain_EMap() const ;
			
			// End Class ControlFlow

			// Begin Class ControlNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getControlNode_Class() const ;
			
			
			
			
			// End Class ControlNode

			// Begin Class CreateLinkAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCreateLinkAction_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getCreateLinkAction_Operation_association_not_abstract_EDiagnosticChain_EMap() const ;
			
			// End Class CreateLinkAction

			// Begin Class CreateLinkObjectAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCreateLinkObjectAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getCreateLinkObjectAction_Attribute_result() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getCreateLinkObjectAction_Operation_association_class_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getCreateLinkObjectAction_Operation_multiplicity_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getCreateLinkObjectAction_Operation_type_of_result_EDiagnosticChain_EMap() const ;
			
			// End Class CreateLinkObjectAction

			// Begin Class CreateObjectAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCreateObjectAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getCreateObjectAction_Attribute_classifier() const ;
			virtual std::shared_ptr<ecore::EReference> getCreateObjectAction_Attribute_result() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getCreateObjectAction_Operation_classifier_not_abstract_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getCreateObjectAction_Operation_classifier_not_association_class_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getCreateObjectAction_Operation_multiplicity_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getCreateObjectAction_Operation_same_type_EDiagnosticChain_EMap() const ;
			
			// End Class CreateObjectAction

			// Begin Class DataStoreNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDataStoreNode_Class() const ;
			
			
			
			
			// End Class DataStoreNode

			// Begin Class DataType
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDataType_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getDataType_Attribute_ownedAttribute() const ;
			virtual std::shared_ptr<ecore::EReference> getDataType_Attribute_ownedOperation() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getDataType_Operation_createOwnedAttribute_String_UnlimitedNatural() const ;
			virtual std::shared_ptr<ecore::EOperation> getDataType_Operation_createOwnedOperation_String_Type() const ;
			
			// End Class DataType

			// Begin Class DecisionNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDecisionNode_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getDecisionNode_Attribute_decisionInput() const ;
			virtual std::shared_ptr<ecore::EReference> getDecisionNode_Attribute_decisionInputFlow() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getDecisionNode_Operation_decision_input_flow_incoming_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getDecisionNode_Operation_edges_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getDecisionNode_Operation_incoming_control_one_input_parameter_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getDecisionNode_Operation_incoming_object_one_input_parameter_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getDecisionNode_Operation_incoming_outgoing_edges_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getDecisionNode_Operation_parameters_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getDecisionNode_Operation_two_input_parameters_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getDecisionNode_Operation_zero_input_parameters_EDiagnosticChain_EMap() const ;
			
			// End Class DecisionNode

			// Begin Class Dependency
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDependency_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getDependency_Attribute_client() const ;
			virtual std::shared_ptr<ecore::EReference> getDependency_Attribute_supplier() const ;
			
			
			// End Class Dependency

			// Begin Class DeployedArtifact
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDeployedArtifact_Class() const ;
			
			
			
			
			// End Class DeployedArtifact

			// Begin Class Deployment
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDeployment_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getDeployment_Attribute_configuration() const ;
			virtual std::shared_ptr<ecore::EReference> getDeployment_Attribute_deployedArtifact() const ;
			virtual std::shared_ptr<ecore::EReference> getDeployment_Attribute_location() const ;
			
			
			// End Class Deployment

			// Begin Class DeploymentSpecification
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDeploymentSpecification_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getDeploymentSpecification_Attribute_deploymentLocation() const ;
			virtual std::shared_ptr<ecore::EAttribute> getDeploymentSpecification_Attribute_executionLocation() const ;
			
			virtual std::shared_ptr<ecore::EReference> getDeploymentSpecification_Attribute_deployment() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getDeploymentSpecification_Operation_deployed_elements_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getDeploymentSpecification_Operation_deployment_target_EDiagnosticChain_EMap() const ;
			
			// End Class DeploymentSpecification

			// Begin Class DeploymentTarget
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDeploymentTarget_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getDeploymentTarget_Attribute_deployedElement() const ;
			virtual std::shared_ptr<ecore::EReference> getDeploymentTarget_Attribute_deployment() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getDeploymentTarget_Operation_getDeployedElements() const ;
			
			// End Class DeploymentTarget

			// Begin Class DestroyLinkAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDestroyLinkAction_Class() const ;
			
			
			
			
			// End Class DestroyLinkAction

			// Begin Class DestroyObjectAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDestroyObjectAction_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getDestroyObjectAction_Attribute_isDestroyLinks() const ;
			virtual std::shared_ptr<ecore::EAttribute> getDestroyObjectAction_Attribute_isDestroyOwnedObjects() const ;
			
			virtual std::shared_ptr<ecore::EReference> getDestroyObjectAction_Attribute_target() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getDestroyObjectAction_Operation_multiplicity_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getDestroyObjectAction_Operation_no_type_EDiagnosticChain_EMap() const ;
			
			// End Class DestroyObjectAction

			// Begin Class DestructionOccurrenceSpecification
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDestructionOccurrenceSpecification_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getDestructionOccurrenceSpecification_Operation_no_occurrence_specifications_below_EDiagnosticChain_EMap() const ;
			
			// End Class DestructionOccurrenceSpecification

			// Begin Class Device
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDevice_Class() const ;
			
			
			
			
			// End Class Device

			// Begin Class DirectedRelationship
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDirectedRelationship_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getDirectedRelationship_Attribute_source() const ;
			virtual std::shared_ptr<ecore::EReference> getDirectedRelationship_Attribute_target() const ;
			
			
			// End Class DirectedRelationship

			// Begin Class Duration
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDuration_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getDuration_Attribute_expr() const ;
			virtual std::shared_ptr<ecore::EReference> getDuration_Attribute_observation() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getDuration_Operation_no_expr_requires_observation_EDiagnosticChain_EMap() const ;
			
			// End Class Duration

			// Begin Class DurationConstraint
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDurationConstraint_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getDurationConstraint_Attribute_firstEvent() const ;
			
			
			virtual std::shared_ptr<ecore::EOperation> getDurationConstraint_Operation_first_event_multiplicity_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getDurationConstraint_Operation_has_one_or_two_constrainedElements_EDiagnosticChain_EMap() const ;
			
			// End Class DurationConstraint

			// Begin Class DurationInterval
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDurationInterval_Class() const ;
			
			
			
			
			// End Class DurationInterval

			// Begin Class DurationObservation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDurationObservation_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getDurationObservation_Attribute_firstEvent() const ;
			
			virtual std::shared_ptr<ecore::EReference> getDurationObservation_Attribute_event() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getDurationObservation_Operation_first_event_multiplicity_EDiagnosticChain_EMap() const ;
			
			// End Class DurationObservation

			// Begin Class Element
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getElement_Attribute_ownedComment() const ;
			virtual std::shared_ptr<ecore::EReference> getElement_Attribute_ownedElement() const ;
			virtual std::shared_ptr<ecore::EReference> getElement_Attribute_owner() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_addKeyword_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_allOwnedElements() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_applyStereotype_Stereotype() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_container() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_createEAnnotation_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_destroy() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getApplicableStereotype_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getApplicableStereotypes() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getAppliedStereotype_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getAppliedStereotypes() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getAppliedSubstereotype_Stereotype_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getAppliedSubstereotypes_Stereotype() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getKeywords() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getMetaClass() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getModel() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getNearestPackage() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getRelationships() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getRelationships_EClass() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getRequiredStereotype_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getRequiredStereotypes() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getSourceDirectedRelationships() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getSourceDirectedRelationships_EClass() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getStereotypeApplication_Stereotype() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getStereotypeApplications() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getTargetDirectedRelationships() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getTargetDirectedRelationships_EClass() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_getValue_Stereotype_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_hasKeyword_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_hasValue_Stereotype_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_has_owner_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_isStereotypeApplicable_Stereotype() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_isStereotypeApplied_Stereotype() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_isStereotypeRequired_Stereotype() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_mustBeOwned() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_not_own_self_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_removeKeyword_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_setValue_Stereotype_EJavaObject() const ;
			virtual std::shared_ptr<ecore::EOperation> getElement_Operation_unapplyStereotype_Stereotype() const ;
			
			// End Class Element

			// Begin Class ElementImport
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElementImport_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getElementImport_Attribute_alias() const ;
			virtual std::shared_ptr<ecore::EAttribute> getElementImport_Attribute_visibility() const ;
			
			virtual std::shared_ptr<ecore::EReference> getElementImport_Attribute_importedElement() const ;
			virtual std::shared_ptr<ecore::EReference> getElementImport_Attribute_importingNamespace() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getElementImport_Operation_getName() const ;
			virtual std::shared_ptr<ecore::EOperation> getElementImport_Operation_imported_element_is_public_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getElementImport_Operation_visibility_public_or_private_EDiagnosticChain_EMap() const ;
			
			// End Class ElementImport

			// Begin Class EncapsulatedClassifier
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getEncapsulatedClassifier_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getEncapsulatedClassifier_Attribute_ownedPort() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getEncapsulatedClassifier_Operation_getOwnedPorts() const ;
			
			// End Class EncapsulatedClassifier

			// Begin Class Enumeration
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getEnumeration_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getEnumeration_Attribute_ownedLiteral() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getEnumeration_Operation_immutable_EDiagnosticChain_EMap() const ;
			
			// End Class Enumeration

			// Begin Class EnumerationLiteral
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getEnumerationLiteral_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getEnumerationLiteral_Attribute_enumeration() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getEnumerationLiteral_Operation_getClassifier() const ;
			virtual std::shared_ptr<ecore::EOperation> getEnumerationLiteral_Operation_getClassifiers() const ;
			
			// End Class EnumerationLiteral

			// Begin Class Event
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getEvent_Class() const ;
			
			
			
			
			// End Class Event

			// Begin Class ExceptionHandler
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExceptionHandler_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getExceptionHandler_Attribute_exceptionInput() const ;
			virtual std::shared_ptr<ecore::EReference> getExceptionHandler_Attribute_exceptionType() const ;
			virtual std::shared_ptr<ecore::EReference> getExceptionHandler_Attribute_handlerBody() const ;
			virtual std::shared_ptr<ecore::EReference> getExceptionHandler_Attribute_protectedNode() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getExceptionHandler_Operation_edge_source_target_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getExceptionHandler_Operation_exception_input_type_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getExceptionHandler_Operation_handler_body_edges_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getExceptionHandler_Operation_handler_body_owner_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getExceptionHandler_Operation_one_input_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getExceptionHandler_Operation_output_pins_EDiagnosticChain_EMap() const ;
			
			// End Class ExceptionHandler

			// Begin Class ExecutableNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExecutableNode_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getExecutableNode_Attribute_handler() const ;
			
			
			// End Class ExecutableNode

			// Begin Class ExecutionEnvironment
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExecutionEnvironment_Class() const ;
			
			
			
			
			// End Class ExecutionEnvironment

			// Begin Class ExecutionOccurrenceSpecification
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExecutionOccurrenceSpecification_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getExecutionOccurrenceSpecification_Attribute_execution() const ;
			
			
			// End Class ExecutionOccurrenceSpecification

			// Begin Class ExecutionSpecification
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExecutionSpecification_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getExecutionSpecification_Attribute_finish() const ;
			virtual std::shared_ptr<ecore::EReference> getExecutionSpecification_Attribute_start() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getExecutionSpecification_Operation_same_lifeline_EDiagnosticChain_EMap() const ;
			
			// End Class ExecutionSpecification

			// Begin Class ExpansionNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExpansionNode_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getExpansionNode_Attribute_regionAsInput() const ;
			virtual std::shared_ptr<ecore::EReference> getExpansionNode_Attribute_regionAsOutput() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getExpansionNode_Operation_region_as_input_or_output_EDiagnosticChain_EMap() const ;
			
			// End Class ExpansionNode

			// Begin Class ExpansionRegion
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExpansionRegion_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getExpansionRegion_Attribute_mode() const ;
			
			virtual std::shared_ptr<ecore::EReference> getExpansionRegion_Attribute_inputElement() const ;
			virtual std::shared_ptr<ecore::EReference> getExpansionRegion_Attribute_outputElement() const ;
			
			
			// End Class ExpansionRegion

			// Begin Class Expression
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExpression_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getExpression_Attribute_symbol() const ;
			
			virtual std::shared_ptr<ecore::EReference> getExpression_Attribute_operand() const ;
			
			
			// End Class Expression

			// Begin Class Extend
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExtend_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getExtend_Attribute_condition() const ;
			virtual std::shared_ptr<ecore::EReference> getExtend_Attribute_extendedCase() const ;
			virtual std::shared_ptr<ecore::EReference> getExtend_Attribute_extension() const ;
			virtual std::shared_ptr<ecore::EReference> getExtend_Attribute_extensionLocation() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getExtend_Operation_extension_points_EDiagnosticChain_EMap() const ;
			
			// End Class Extend

			// Begin Class Extension
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExtension_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getExtension_Attribute_isRequired() const ;
			
			virtual std::shared_ptr<ecore::EReference> getExtension_Attribute_metaclass() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getExtension_Operation_getMetaclass() const ;
			virtual std::shared_ptr<ecore::EOperation> getExtension_Operation_getStereotype() const ;
			virtual std::shared_ptr<ecore::EOperation> getExtension_Operation_getStereotypeEnd() const ;
			virtual std::shared_ptr<ecore::EOperation> getExtension_Operation_isRequired() const ;
			virtual std::shared_ptr<ecore::EOperation> getExtension_Operation_is_binary_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getExtension_Operation_metaclassEnd() const ;
			virtual std::shared_ptr<ecore::EOperation> getExtension_Operation_non_owned_end_EDiagnosticChain_EMap() const ;
			
			// End Class Extension

			// Begin Class ExtensionEnd
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExtensionEnd_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getExtensionEnd_Operation_aggregation_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getExtensionEnd_Operation_multiplicity_EDiagnosticChain_EMap() const ;
			
			// End Class ExtensionEnd

			// Begin Class ExtensionPoint
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExtensionPoint_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getExtensionPoint_Attribute_useCase() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getExtensionPoint_Operation_must_have_name_EDiagnosticChain_EMap() const ;
			
			// End Class ExtensionPoint

			// Begin Class Factory
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getFactory_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getFactory_Operation_create_Class() const ;
			
			// End Class Factory

			// Begin Class Feature
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getFeature_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getFeature_Attribute_isStatic() const ;
			
			virtual std::shared_ptr<ecore::EReference> getFeature_Attribute_featuringClassifier() const ;
			
			
			// End Class Feature

			// Begin Class FinalNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getFinalNode_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getFinalNode_Operation_no_outgoing_edges_EDiagnosticChain_EMap() const ;
			
			// End Class FinalNode

			// Begin Class FinalState
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getFinalState_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getFinalState_Operation_cannot_reference_submachine_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getFinalState_Operation_no_entry_behavior_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getFinalState_Operation_no_exit_behavior_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getFinalState_Operation_no_outgoing_transitions_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getFinalState_Operation_no_regions_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getFinalState_Operation_no_state_behavior_EDiagnosticChain_EMap() const ;
			
			// End Class FinalState

			// Begin Class FlowFinalNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getFlowFinalNode_Class() const ;
			
			
			
			
			// End Class FlowFinalNode

			// Begin Class ForkNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getForkNode_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getForkNode_Operation_edges_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getForkNode_Operation_one_incoming_edge_EDiagnosticChain_EMap() const ;
			
			// End Class ForkNode

			// Begin Class FunctionBehavior
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getFunctionBehavior_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getFunctionBehavior_Operation_hasAllDataTypeAttributes_DataType() const ;
			virtual std::shared_ptr<ecore::EOperation> getFunctionBehavior_Operation_one_output_parameter_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getFunctionBehavior_Operation_types_of_parameters_EDiagnosticChain_EMap() const ;
			
			// End Class FunctionBehavior

			// Begin Class Gate
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getGate_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getGate_Operation_actual_gate_distinguishable_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getGate_Operation_actual_gate_matched_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getGate_Operation_formal_gate_distinguishable_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getGate_Operation_getName() const ;
			virtual std::shared_ptr<ecore::EOperation> getGate_Operation_getOperand() const ;
			virtual std::shared_ptr<ecore::EOperation> getGate_Operation_inside_cf_gate_distinguishable_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getGate_Operation_inside_cf_matched_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getGate_Operation_isActual() const ;
			virtual std::shared_ptr<ecore::EOperation> getGate_Operation_isFormal() const ;
			virtual std::shared_ptr<ecore::EOperation> getGate_Operation_isInsideCF() const ;
			virtual std::shared_ptr<ecore::EOperation> getGate_Operation_isOutsideCF() const ;
			virtual std::shared_ptr<ecore::EOperation> getGate_Operation_matches_Gate() const ;
			virtual std::shared_ptr<ecore::EOperation> getGate_Operation_outside_cf_gate_distinguishable_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getGate_Operation_outside_cf_matched_EDiagnosticChain_EMap() const ;
			
			// End Class Gate

			// Begin Class GeneralOrdering
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getGeneralOrdering_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getGeneralOrdering_Attribute_after() const ;
			virtual std::shared_ptr<ecore::EReference> getGeneralOrdering_Attribute_before() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getGeneralOrdering_Operation_irreflexive_transitive_closure_EDiagnosticChain_EMap() const ;
			
			// End Class GeneralOrdering

			// Begin Class Generalization
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getGeneralization_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getGeneralization_Attribute_isSubstitutable() const ;
			
			virtual std::shared_ptr<ecore::EReference> getGeneralization_Attribute_general() const ;
			virtual std::shared_ptr<ecore::EReference> getGeneralization_Attribute_generalizationSet() const ;
			virtual std::shared_ptr<ecore::EReference> getGeneralization_Attribute_specific() const ;
			
			
			// End Class Generalization

			// Begin Class GeneralizationSet
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getGeneralizationSet_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getGeneralizationSet_Attribute_isCovering() const ;
			virtual std::shared_ptr<ecore::EAttribute> getGeneralizationSet_Attribute_isDisjoint() const ;
			
			virtual std::shared_ptr<ecore::EReference> getGeneralizationSet_Attribute_generalization() const ;
			virtual std::shared_ptr<ecore::EReference> getGeneralizationSet_Attribute_powertype() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getGeneralizationSet_Operation_generalization_same_classifier_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getGeneralizationSet_Operation_maps_to_generalization_set_EDiagnosticChain_EMap() const ;
			
			// End Class GeneralizationSet

			// Begin Class Image
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getImage_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getImage_Attribute_content() const ;
			virtual std::shared_ptr<ecore::EAttribute> getImage_Attribute_format() const ;
			virtual std::shared_ptr<ecore::EAttribute> getImage_Attribute_location() const ;
			
			
			
			// End Class Image

			// Begin Class Include
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInclude_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getInclude_Attribute_addition() const ;
			virtual std::shared_ptr<ecore::EReference> getInclude_Attribute_includingCase() const ;
			
			
			// End Class Include

			// Begin Class InformationFlow
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInformationFlow_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getInformationFlow_Attribute_conveyed() const ;
			virtual std::shared_ptr<ecore::EReference> getInformationFlow_Attribute_informationSource() const ;
			virtual std::shared_ptr<ecore::EReference> getInformationFlow_Attribute_informationTarget() const ;
			virtual std::shared_ptr<ecore::EReference> getInformationFlow_Attribute_realization() const ;
			virtual std::shared_ptr<ecore::EReference> getInformationFlow_Attribute_realizingActivityEdge() const ;
			virtual std::shared_ptr<ecore::EReference> getInformationFlow_Attribute_realizingConnector() const ;
			virtual std::shared_ptr<ecore::EReference> getInformationFlow_Attribute_realizingMessage() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getInformationFlow_Operation_convey_classifiers_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getInformationFlow_Operation_must_conform_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getInformationFlow_Operation_sources_and_targets_kind_EDiagnosticChain_EMap() const ;
			
			// End Class InformationFlow

			// Begin Class InformationItem
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInformationItem_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getInformationItem_Attribute_represented() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getInformationItem_Operation_has_no_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getInformationItem_Operation_not_instantiable_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getInformationItem_Operation_sources_and_targets_EDiagnosticChain_EMap() const ;
			
			// End Class InformationItem

			// Begin Class InitialNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInitialNode_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getInitialNode_Operation_control_edges_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getInitialNode_Operation_no_incoming_edges_EDiagnosticChain_EMap() const ;
			
			// End Class InitialNode

			// Begin Class InputPin
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInputPin_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getInputPin_Attribute_action() const ;
			virtual std::shared_ptr<ecore::EReference> getInputPin_Attribute_addStructuralFeatureValueAction() const ;
			virtual std::shared_ptr<ecore::EReference> getInputPin_Attribute_callOperationAction() const ;
			virtual std::shared_ptr<ecore::EReference> getInputPin_Attribute_destroyObjectAction() const ;
			virtual std::shared_ptr<ecore::EReference> getInputPin_Attribute_invocationAction() const ;
			virtual std::shared_ptr<ecore::EReference> getInputPin_Attribute_structuralFeatureAction() const ;
			virtual std::shared_ptr<ecore::EReference> getInputPin_Attribute_writeStructuralFeatureAction() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getInputPin_Operation_outgoing_edges_structured_only_EDiagnosticChain_EMap() const ;
			
			// End Class InputPin

			// Begin Class InstanceSpecification
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInstanceSpecification_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getInstanceSpecification_Attribute_classifier() const ;
			virtual std::shared_ptr<ecore::EReference> getInstanceSpecification_Attribute_slot() const ;
			virtual std::shared_ptr<ecore::EReference> getInstanceSpecification_Attribute_specification() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getInstanceSpecification_Operation_defining_feature_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getInstanceSpecification_Operation_deployment_artifact_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getInstanceSpecification_Operation_deployment_target_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getInstanceSpecification_Operation_structural_feature_EDiagnosticChain_EMap() const ;
			
			// End Class InstanceSpecification

			// Begin Class InstanceValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInstanceValue_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getInstanceValue_Attribute_instance() const ;
			
			
			// End Class InstanceValue

			// Begin Class Interaction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInteraction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getInteraction_Attribute_action() const ;
			virtual std::shared_ptr<ecore::EReference> getInteraction_Attribute_formalGate() const ;
			virtual std::shared_ptr<ecore::EReference> getInteraction_Attribute_fragment() const ;
			virtual std::shared_ptr<ecore::EReference> getInteraction_Attribute_lifeline() const ;
			virtual std::shared_ptr<ecore::EReference> getInteraction_Attribute_message() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getInteraction_Operation_not_contained_EDiagnosticChain_EMap() const ;
			
			// End Class Interaction

			// Begin Class InteractionConstraint
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInteractionConstraint_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getInteractionConstraint_Attribute_maxint() const ;
			virtual std::shared_ptr<ecore::EReference> getInteractionConstraint_Attribute_minint() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getInteractionConstraint_Operation_dynamic_variables_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getInteractionConstraint_Operation_global_data_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getInteractionConstraint_Operation_maxint_greater_equal_minint_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getInteractionConstraint_Operation_maxint_positive_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getInteractionConstraint_Operation_minint_maxint_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getInteractionConstraint_Operation_minint_non_negative_EDiagnosticChain_EMap() const ;
			
			// End Class InteractionConstraint

			// Begin Class InteractionFragment
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInteractionFragment_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getInteractionFragment_Attribute_covered() const ;
			virtual std::shared_ptr<ecore::EReference> getInteractionFragment_Attribute_enclosingInteraction() const ;
			virtual std::shared_ptr<ecore::EReference> getInteractionFragment_Attribute_enclosingOperand() const ;
			virtual std::shared_ptr<ecore::EReference> getInteractionFragment_Attribute_generalOrdering() const ;
			
			
			// End Class InteractionFragment

			// Begin Class InteractionOperand
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInteractionOperand_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getInteractionOperand_Attribute_fragment() const ;
			virtual std::shared_ptr<ecore::EReference> getInteractionOperand_Attribute_guard() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getInteractionOperand_Operation_guard_contain_references_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getInteractionOperand_Operation_guard_directly_prior_EDiagnosticChain_EMap() const ;
			
			// End Class InteractionOperand

			// Begin Class InteractionUse
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInteractionUse_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getInteractionUse_Attribute_actualGate() const ;
			virtual std::shared_ptr<ecore::EReference> getInteractionUse_Attribute_argument() const ;
			virtual std::shared_ptr<ecore::EReference> getInteractionUse_Attribute_refersTo() const ;
			virtual std::shared_ptr<ecore::EReference> getInteractionUse_Attribute_returnValue() const ;
			virtual std::shared_ptr<ecore::EReference> getInteractionUse_Attribute_returnValueRecipient() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getInteractionUse_Operation_all_lifelines_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getInteractionUse_Operation_arguments_are_constants_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getInteractionUse_Operation_arguments_correspond_to_parameters_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getInteractionUse_Operation_gates_match_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getInteractionUse_Operation_returnValueRecipient_coverage_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getInteractionUse_Operation_returnValue_type_recipient_correspondence_EDiagnosticChain_EMap() const ;
			
			// End Class InteractionUse

			// Begin Class Interface
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInterface_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getInterface_Attribute_nestedClassifier() const ;
			virtual std::shared_ptr<ecore::EReference> getInterface_Attribute_ownedAttribute() const ;
			virtual std::shared_ptr<ecore::EReference> getInterface_Attribute_ownedOperation() const ;
			virtual std::shared_ptr<ecore::EReference> getInterface_Attribute_ownedReception() const ;
			virtual std::shared_ptr<ecore::EReference> getInterface_Attribute_protocol() const ;
			virtual std::shared_ptr<ecore::EReference> getInterface_Attribute_redefinedInterface() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getInterface_Operation_createOwnedAttribute_String_UnlimitedNatural() const ;
			virtual std::shared_ptr<ecore::EOperation> getInterface_Operation_createOwnedOperation_String_Type() const ;
			virtual std::shared_ptr<ecore::EOperation> getInterface_Operation_visibility_EDiagnosticChain_EMap() const ;
			
			// End Class Interface

			// Begin Class InterfaceRealization
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInterfaceRealization_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getInterfaceRealization_Attribute_contract() const ;
			virtual std::shared_ptr<ecore::EReference> getInterfaceRealization_Attribute_implementingClassifier() const ;
			
			
			// End Class InterfaceRealization

			// Begin Class InterruptibleActivityRegion
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInterruptibleActivityRegion_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getInterruptibleActivityRegion_Attribute_interruptingEdge() const ;
			virtual std::shared_ptr<ecore::EReference> getInterruptibleActivityRegion_Attribute_node() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getInterruptibleActivityRegion_Operation_interrupting_edges_EDiagnosticChain_EMap() const ;
			
			// End Class InterruptibleActivityRegion

			// Begin Class Interval
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInterval_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getInterval_Attribute_max() const ;
			virtual std::shared_ptr<ecore::EReference> getInterval_Attribute_min() const ;
			
			
			// End Class Interval

			// Begin Class IntervalConstraint
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getIntervalConstraint_Class() const ;
			
			
			
			
			// End Class IntervalConstraint

			// Begin Class InvocationAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInvocationAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getInvocationAction_Attribute_argument() const ;
			virtual std::shared_ptr<ecore::EReference> getInvocationAction_Attribute_onPort() const ;
			
			
			// End Class InvocationAction

			// Begin Class JoinNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getJoinNode_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getJoinNode_Attribute_isCombineDuplicate() const ;
			
			virtual std::shared_ptr<ecore::EReference> getJoinNode_Attribute_joinSpec() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getJoinNode_Operation_incoming_object_flow_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getJoinNode_Operation_one_outgoing_edge_EDiagnosticChain_EMap() const ;
			
			// End Class JoinNode

			// Begin Class Lifeline
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLifeline_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getLifeline_Attribute_coveredBy() const ;
			virtual std::shared_ptr<ecore::EReference> getLifeline_Attribute_decomposedAs() const ;
			virtual std::shared_ptr<ecore::EReference> getLifeline_Attribute_interaction() const ;
			virtual std::shared_ptr<ecore::EReference> getLifeline_Attribute_represents() const ;
			virtual std::shared_ptr<ecore::EReference> getLifeline_Attribute_selector() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getLifeline_Operation_interaction_uses_share_lifeline_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getLifeline_Operation_same_classifier_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getLifeline_Operation_selector_int_or_string_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getLifeline_Operation_selector_specified_EDiagnosticChain_EMap() const ;
			
			// End Class Lifeline

			// Begin Class LinkAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLinkAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getLinkAction_Attribute_endData() const ;
			virtual std::shared_ptr<ecore::EReference> getLinkAction_Attribute_inputValue() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getLinkAction_Operation_association() const ;
			virtual std::shared_ptr<ecore::EOperation> getLinkAction_Operation_not_static_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getLinkAction_Operation_same_association_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getLinkAction_Operation_same_pins_EDiagnosticChain_EMap() const ;
			
			// End Class LinkAction

			// Begin Class LinkEndCreationData
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLinkEndCreationData_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getLinkEndCreationData_Attribute_isReplaceAll() const ;
			
			virtual std::shared_ptr<ecore::EReference> getLinkEndCreationData_Attribute_insertAt() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getLinkEndCreationData_Operation_insertAt_pin_EDiagnosticChain_EMap() const ;
			
			// End Class LinkEndCreationData

			// Begin Class LinkEndData
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLinkEndData_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getLinkEndData_Attribute_end() const ;
			virtual std::shared_ptr<ecore::EReference> getLinkEndData_Attribute_qualifier() const ;
			virtual std::shared_ptr<ecore::EReference> getLinkEndData_Attribute_value() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getLinkEndData_Operation_allPins() const ;
			virtual std::shared_ptr<ecore::EOperation> getLinkEndData_Operation_end_object_input_pin_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getLinkEndData_Operation_multiplicity_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getLinkEndData_Operation_property_is_association_end_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getLinkEndData_Operation_qualifiers_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getLinkEndData_Operation_same_type_EDiagnosticChain_EMap() const ;
			
			// End Class LinkEndData

			// Begin Class LinkEndDestructionData
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLinkEndDestructionData_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getLinkEndDestructionData_Attribute_isDestroyDuplicates() const ;
			
			virtual std::shared_ptr<ecore::EReference> getLinkEndDestructionData_Attribute_destroyAt() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getLinkEndDestructionData_Operation_destroyAt_pin_EDiagnosticChain_EMap() const ;
			
			// End Class LinkEndDestructionData

			// Begin Class LiteralBoolean
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLiteralBoolean_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getLiteralBoolean_Attribute_value() const ;
			
			
			
			// End Class LiteralBoolean

			// Begin Class LiteralInteger
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLiteralInteger_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getLiteralInteger_Attribute_value() const ;
			
			
			
			// End Class LiteralInteger

			// Begin Class LiteralNull
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLiteralNull_Class() const ;
			
			
			
			
			// End Class LiteralNull

			// Begin Class LiteralReal
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLiteralReal_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getLiteralReal_Attribute_value() const ;
			
			
			
			// End Class LiteralReal

			// Begin Class LiteralSpecification
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLiteralSpecification_Class() const ;
			
			
			
			
			// End Class LiteralSpecification

			// Begin Class LiteralString
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLiteralString_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getLiteralString_Attribute_value() const ;
			
			
			
			// End Class LiteralString

			// Begin Class LiteralUnlimitedNatural
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLiteralUnlimitedNatural_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getLiteralUnlimitedNatural_Attribute_value() const ;
			
			
			
			// End Class LiteralUnlimitedNatural

			// Begin Class LoopNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLoopNode_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getLoopNode_Attribute_isTestedFirst() const ;
			
			virtual std::shared_ptr<ecore::EReference> getLoopNode_Attribute_bodyOutput() const ;
			virtual std::shared_ptr<ecore::EReference> getLoopNode_Attribute_bodyPart() const ;
			virtual std::shared_ptr<ecore::EReference> getLoopNode_Attribute_decider() const ;
			virtual std::shared_ptr<ecore::EReference> getLoopNode_Attribute_loopVariable() const ;
			virtual std::shared_ptr<ecore::EReference> getLoopNode_Attribute_loopVariableInput() const ;
			virtual std::shared_ptr<ecore::EReference> getLoopNode_Attribute_result() const ;
			virtual std::shared_ptr<ecore::EReference> getLoopNode_Attribute_setupPart() const ;
			virtual std::shared_ptr<ecore::EReference> getLoopNode_Attribute_test() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getLoopNode_Operation_body_output_pins_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getLoopNode_Operation_executable_nodes_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getLoopNode_Operation_input_edges_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getLoopNode_Operation_loop_variable_outgoing_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getLoopNode_Operation_matching_loop_variables_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getLoopNode_Operation_matching_output_pins_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getLoopNode_Operation_matching_result_pins_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getLoopNode_Operation_result_no_incoming_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getLoopNode_Operation_setup_test_and_body_EDiagnosticChain_EMap() const ;
			
			// End Class LoopNode

			// Begin Class Manifestation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getManifestation_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getManifestation_Attribute_utilizedElement() const ;
			
			
			// End Class Manifestation

			// Begin Class MergeNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getMergeNode_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getMergeNode_Operation_edges_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getMergeNode_Operation_one_outgoing_edge_EDiagnosticChain_EMap() const ;
			
			// End Class MergeNode

			// Begin Class Message
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getMessage_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getMessage_Attribute_messageKind() const ;
			virtual std::shared_ptr<ecore::EAttribute> getMessage_Attribute_messageSort() const ;
			
			virtual std::shared_ptr<ecore::EReference> getMessage_Attribute_argument() const ;
			virtual std::shared_ptr<ecore::EReference> getMessage_Attribute_connector() const ;
			virtual std::shared_ptr<ecore::EReference> getMessage_Attribute_interaction() const ;
			virtual std::shared_ptr<ecore::EReference> getMessage_Attribute_receiveEvent() const ;
			virtual std::shared_ptr<ecore::EReference> getMessage_Attribute_sendEvent() const ;
			virtual std::shared_ptr<ecore::EReference> getMessage_Attribute_signature() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getMessage_Operation_arguments_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getMessage_Operation_cannot_cross_boundaries_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getMessage_Operation_getMessageKind() const ;
			virtual std::shared_ptr<ecore::EOperation> getMessage_Operation_occurrence_specifications_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getMessage_Operation_sending_receiving_message_event_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getMessage_Operation_signature_is_operation_reply_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getMessage_Operation_signature_is_operation_request_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getMessage_Operation_signature_is_signal_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getMessage_Operation_signature_refer_to_EDiagnosticChain_EMap() const ;
			
			// End Class Message

			// Begin Class MessageEnd
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getMessageEnd_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getMessageEnd_Attribute_message() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getMessageEnd_Operation_enclosingFragment() const ;
			virtual std::shared_ptr<ecore::EOperation> getMessageEnd_Operation_isReceive() const ;
			virtual std::shared_ptr<ecore::EOperation> getMessageEnd_Operation_isSend() const ;
			virtual std::shared_ptr<ecore::EOperation> getMessageEnd_Operation_oppositeEnd() const ;
			
			// End Class MessageEnd

			// Begin Class MessageEvent
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getMessageEvent_Class() const ;
			
			
			
			
			// End Class MessageEvent

			// Begin Class MessageOccurrenceSpecification
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getMessageOccurrenceSpecification_Class() const ;
			
			
			
			
			// End Class MessageOccurrenceSpecification

			// Begin Class Model
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getModel_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getModel_Attribute_viewpoint() const ;
			
			
			virtual std::shared_ptr<ecore::EOperation> getModel_Operation_isMetamodel() const ;
			
			// End Class Model

			// Begin Class MultiplicityElement
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getMultiplicityElement_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getMultiplicityElement_Attribute_isOrdered() const ;
			virtual std::shared_ptr<ecore::EAttribute> getMultiplicityElement_Attribute_isUnique() const ;
			virtual std::shared_ptr<ecore::EAttribute> getMultiplicityElement_Attribute_lower() const ;
			virtual std::shared_ptr<ecore::EAttribute> getMultiplicityElement_Attribute_upper() const ;
			
			virtual std::shared_ptr<ecore::EReference> getMultiplicityElement_Attribute_lowerValue() const ;
			virtual std::shared_ptr<ecore::EReference> getMultiplicityElement_Attribute_upperValue() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getMultiplicityElement_Operation_compatibleWith_MultiplicityElement() const ;
			virtual std::shared_ptr<ecore::EOperation> getMultiplicityElement_Operation_includesMultiplicity_MultiplicityElement() const ;
			virtual std::shared_ptr<ecore::EOperation> getMultiplicityElement_Operation_is_Integer_UnlimitedNatural() const ;
			virtual std::shared_ptr<ecore::EOperation> getMultiplicityElement_Operation_isMultivalued() const ;
			virtual std::shared_ptr<ecore::EOperation> getMultiplicityElement_Operation_lowerBound() const ;
			virtual std::shared_ptr<ecore::EOperation> getMultiplicityElement_Operation_lower_ge_0_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getMultiplicityElement_Operation_lower_is_integer_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getMultiplicityElement_Operation_upperBound() const ;
			virtual std::shared_ptr<ecore::EOperation> getMultiplicityElement_Operation_upper_ge_lower_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getMultiplicityElement_Operation_upper_is_unlimitedNatural_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getMultiplicityElement_Operation_value_specification_constant_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getMultiplicityElement_Operation_value_specification_no_side_effects_EDiagnosticChain_EMap() const ;
			
			// End Class MultiplicityElement

			// Begin Class NamedElement
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getNamedElement_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getNamedElement_Attribute_name() const ;
			virtual std::shared_ptr<ecore::EAttribute> getNamedElement_Attribute_qualifiedName() const ;
			virtual std::shared_ptr<ecore::EAttribute> getNamedElement_Attribute_visibility() const ;
			
			virtual std::shared_ptr<ecore::EReference> getNamedElement_Attribute_clientDependency() const ;
			virtual std::shared_ptr<ecore::EReference> getNamedElement_Attribute_nameExpression() const ;
			virtual std::shared_ptr<ecore::EReference> getNamedElement_Attribute_namespace() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getNamedElement_Operation_allNamespaces() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamedElement_Operation_allOwningPackages() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamedElement_Operation_createDependency_NamedElement() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamedElement_Operation_createUsage_NamedElement() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamedElement_Operation_getClientDependencies() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamedElement_Operation_getLabel() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamedElement_Operation_getLabel_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamedElement_Operation_getNamespace() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamedElement_Operation_getQualifiedName() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamedElement_Operation_has_no_qualified_name_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamedElement_Operation_has_qualified_name_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamedElement_Operation_isDistinguishableFrom_NamedElement_Namespace() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamedElement_Operation_separator() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamedElement_Operation_visibility_needs_ownership_EDiagnosticChain_EMap() const ;
			
			// End Class NamedElement

			// Begin Class Namespace
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getNamespace_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getNamespace_Attribute_elementImport() const ;
			virtual std::shared_ptr<ecore::EReference> getNamespace_Attribute_importedMember() const ;
			virtual std::shared_ptr<ecore::EReference> getNamespace_Attribute_member() const ;
			virtual std::shared_ptr<ecore::EReference> getNamespace_Attribute_ownedMember() const ;
			virtual std::shared_ptr<ecore::EReference> getNamespace_Attribute_ownedRule() const ;
			virtual std::shared_ptr<ecore::EReference> getNamespace_Attribute_packageImport() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getNamespace_Operation_cannot_import_ownedMembers_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamespace_Operation_cannot_import_self_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamespace_Operation_createElementImport_PackageableElement_VisibilityKind() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamespace_Operation_createPackageImport_Package_VisibilityKind() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamespace_Operation_excludeCollisions_PackageableElement() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamespace_Operation_getImportedElements() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamespace_Operation_getImportedMembers() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamespace_Operation_getImportedPackages() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamespace_Operation_getNamesOfMember_NamedElement() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamespace_Operation_getOwnedMembers() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamespace_Operation_importMembers_PackageableElement() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamespace_Operation_membersAreDistinguishable() const ;
			virtual std::shared_ptr<ecore::EOperation> getNamespace_Operation_members_distinguishable_EDiagnosticChain_EMap() const ;
			
			// End Class Namespace

			// Begin Class Node
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getNode_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getNode_Attribute_nestedNode() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getNode_Operation_createCommunicationPath_Boolean_UnlimitedNatural() const ;
			virtual std::shared_ptr<ecore::EOperation> getNode_Operation_getCommunicationPaths() const ;
			virtual std::shared_ptr<ecore::EOperation> getNode_Operation_internal_structure_EDiagnosticChain_EMap() const ;
			
			// End Class Node

			// Begin Class Object
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getObject_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getObject_Operation_get_Property() const ;
			virtual std::shared_ptr<ecore::EOperation> getObject_Operation_invoke_Operation_Argument() const ;
			virtual std::shared_ptr<ecore::EOperation> getObject_Operation_set_Property_EJavaObject() const ;
			virtual std::shared_ptr<ecore::EOperation> getObject_Operation_unset_Property() const ;
			
			// End Class Object

			// Begin Class ObjectFlow
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getObjectFlow_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getObjectFlow_Attribute_isMulticast() const ;
			virtual std::shared_ptr<ecore::EAttribute> getObjectFlow_Attribute_isMultireceive() const ;
			
			virtual std::shared_ptr<ecore::EReference> getObjectFlow_Attribute_selection() const ;
			virtual std::shared_ptr<ecore::EReference> getObjectFlow_Attribute_transformation() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getObjectFlow_Operation_compatible_types_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectFlow_Operation_input_and_output_parameter_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectFlow_Operation_is_multicast_or_is_multireceive_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectFlow_Operation_no_executable_nodes_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectFlow_Operation_same_upper_bounds_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectFlow_Operation_selection_behavior_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectFlow_Operation_target_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectFlow_Operation_transformation_behavior_EDiagnosticChain_EMap() const ;
			
			// End Class ObjectFlow

			// Begin Class ObjectNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getObjectNode_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getObjectNode_Attribute_isControlType() const ;
			virtual std::shared_ptr<ecore::EAttribute> getObjectNode_Attribute_ordering() const ;
			
			virtual std::shared_ptr<ecore::EReference> getObjectNode_Attribute_inState() const ;
			virtual std::shared_ptr<ecore::EReference> getObjectNode_Attribute_selection() const ;
			virtual std::shared_ptr<ecore::EReference> getObjectNode_Attribute_upperBound() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getObjectNode_Operation_input_output_parameter_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectNode_Operation_object_flow_edges_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectNode_Operation_selection_behavior_EDiagnosticChain_EMap() const ;
			
			// End Class ObjectNode

			// Begin Class Observation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getObservation_Class() const ;
			
			
			
			
			// End Class Observation

			// Begin Class OccurrenceSpecification
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getOccurrenceSpecification_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getOccurrenceSpecification_Attribute_toAfter() const ;
			virtual std::shared_ptr<ecore::EReference> getOccurrenceSpecification_Attribute_toBefore() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getOccurrenceSpecification_Operation_getCovered() const ;
			virtual std::shared_ptr<ecore::EOperation> getOccurrenceSpecification_Operation_setCovered_Lifeline() const ;
			
			// End Class OccurrenceSpecification

			// Begin Class OpaqueAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getOpaqueAction_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getOpaqueAction_Attribute_body() const ;
			virtual std::shared_ptr<ecore::EAttribute> getOpaqueAction_Attribute_language() const ;
			
			virtual std::shared_ptr<ecore::EReference> getOpaqueAction_Attribute_inputValue() const ;
			virtual std::shared_ptr<ecore::EReference> getOpaqueAction_Attribute_outputValue() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getOpaqueAction_Operation_language_body_size_EDiagnosticChain_EMap() const ;
			
			// End Class OpaqueAction

			// Begin Class OpaqueBehavior
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getOpaqueBehavior_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getOpaqueBehavior_Attribute_body() const ;
			virtual std::shared_ptr<ecore::EAttribute> getOpaqueBehavior_Attribute_language() const ;
			
			
			
			// End Class OpaqueBehavior

			// Begin Class OpaqueExpression
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getOpaqueExpression_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getOpaqueExpression_Attribute_body() const ;
			virtual std::shared_ptr<ecore::EAttribute> getOpaqueExpression_Attribute_language() const ;
			
			virtual std::shared_ptr<ecore::EReference> getOpaqueExpression_Attribute_behavior() const ;
			virtual std::shared_ptr<ecore::EReference> getOpaqueExpression_Attribute_result() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getOpaqueExpression_Operation_getResult() const ;
			virtual std::shared_ptr<ecore::EOperation> getOpaqueExpression_Operation_isIntegral() const ;
			virtual std::shared_ptr<ecore::EOperation> getOpaqueExpression_Operation_isNonNegative() const ;
			virtual std::shared_ptr<ecore::EOperation> getOpaqueExpression_Operation_isPositive() const ;
			virtual std::shared_ptr<ecore::EOperation> getOpaqueExpression_Operation_language_body_size_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getOpaqueExpression_Operation_one_return_result_parameter_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getOpaqueExpression_Operation_only_return_result_parameters_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getOpaqueExpression_Operation_value() const ;
			
			// End Class OpaqueExpression

			// Begin Class Operation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getOperation_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getOperation_Attribute_isOrdered() const ;
			virtual std::shared_ptr<ecore::EAttribute> getOperation_Attribute_isQuery() const ;
			virtual std::shared_ptr<ecore::EAttribute> getOperation_Attribute_isUnique() const ;
			virtual std::shared_ptr<ecore::EAttribute> getOperation_Attribute_lower() const ;
			virtual std::shared_ptr<ecore::EAttribute> getOperation_Attribute_upper() const ;
			
			virtual std::shared_ptr<ecore::EReference> getOperation_Attribute_bodyCondition() const ;
			virtual std::shared_ptr<ecore::EReference> getOperation_Attribute_class() const ;
			virtual std::shared_ptr<ecore::EReference> getOperation_Attribute_datatype() const ;
			virtual std::shared_ptr<ecore::EReference> getOperation_Attribute_interface() const ;
			virtual std::shared_ptr<ecore::EReference> getOperation_Attribute_postcondition() const ;
			virtual std::shared_ptr<ecore::EReference> getOperation_Attribute_precondition() const ;
			virtual std::shared_ptr<ecore::EReference> getOperation_Attribute_redefinedOperation() const ;
			virtual std::shared_ptr<ecore::EReference> getOperation_Attribute_type() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getOperation_Operation_at_most_one_return_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getOperation_Operation_getLower() const ;
			virtual std::shared_ptr<ecore::EOperation> getOperation_Operation_getReturnResult() const ;
			virtual std::shared_ptr<ecore::EOperation> getOperation_Operation_getType() const ;
			virtual std::shared_ptr<ecore::EOperation> getOperation_Operation_getUpper() const ;
			virtual std::shared_ptr<ecore::EOperation> getOperation_Operation_isOrdered() const ;
			virtual std::shared_ptr<ecore::EOperation> getOperation_Operation_isUnique() const ;
			virtual std::shared_ptr<ecore::EOperation> getOperation_Operation_only_body_for_query_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getOperation_Operation_returnResult() const ;
			virtual std::shared_ptr<ecore::EOperation> getOperation_Operation_setIsOrdered_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getOperation_Operation_setIsUnique_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getOperation_Operation_setLower_Integer() const ;
			virtual std::shared_ptr<ecore::EOperation> getOperation_Operation_setType_Type() const ;
			virtual std::shared_ptr<ecore::EOperation> getOperation_Operation_setUpper_UnlimitedNatural() const ;
			
			// End Class Operation

			// Begin Class OperationTemplateParameter
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getOperationTemplateParameter_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getOperationTemplateParameter_Operation_match_default_signature_EDiagnosticChain_EMap() const ;
			
			// End Class OperationTemplateParameter

			// Begin Class OutputPin
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getOutputPin_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getOutputPin_Attribute_action() const ;
			virtual std::shared_ptr<ecore::EReference> getOutputPin_Attribute_callAction() const ;
			virtual std::shared_ptr<ecore::EReference> getOutputPin_Attribute_clearStructuralFeatureAction() const ;
			virtual std::shared_ptr<ecore::EReference> getOutputPin_Attribute_createObjectAction() const ;
			virtual std::shared_ptr<ecore::EReference> getOutputPin_Attribute_readSelfAction() const ;
			virtual std::shared_ptr<ecore::EReference> getOutputPin_Attribute_readStructuralFeatureAction() const ;
			virtual std::shared_ptr<ecore::EReference> getOutputPin_Attribute_valueSpecificationAction() const ;
			virtual std::shared_ptr<ecore::EReference> getOutputPin_Attribute_writeStructuralFeatureAction() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getOutputPin_Operation_incoming_edges_structured_only_EDiagnosticChain_EMap() const ;
			
			// End Class OutputPin

			// Begin Class Package
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getPackage_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getPackage_Attribute_uRI() const ;
			
			virtual std::shared_ptr<ecore::EReference> getPackage_Attribute_nestedPackage() const ;
			virtual std::shared_ptr<ecore::EReference> getPackage_Attribute_nestingPackage() const ;
			virtual std::shared_ptr<ecore::EReference> getPackage_Attribute_ownedStereotype() const ;
			virtual std::shared_ptr<ecore::EReference> getPackage_Attribute_ownedType() const ;
			virtual std::shared_ptr<ecore::EReference> getPackage_Attribute_packageMerge() const ;
			virtual std::shared_ptr<ecore::EReference> getPackage_Attribute_packagedElement() const ;
			virtual std::shared_ptr<ecore::EReference> getPackage_Attribute_profileApplication() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_allApplicableStereotypes() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_applyProfile_Profile() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_containingProfile() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_createOwnedClass_String_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_createOwnedEnumeration_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_createOwnedInterface_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_createOwnedPrimitiveType_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_createOwnedStereotype_String_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_elements_public_or_private_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_getAllAppliedProfiles() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_getAllProfileApplications() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_getAppliedProfile_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_getAppliedProfile_String_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_getAppliedProfiles() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_getNestedPackages() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_getOwnedStereotypes() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_getOwnedTypes() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_getProfileApplication_Profile() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_getProfileApplication_Profile_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_isModelLibrary() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_isProfileApplied_Profile() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_makesVisible_NamedElement() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_unapplyProfile_Profile() const ;
			virtual std::shared_ptr<ecore::EOperation> getPackage_Operation_visibleMembers() const ;
			
			// End Class Package

			// Begin Class PackageImport
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getPackageImport_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getPackageImport_Attribute_visibility() const ;
			
			virtual std::shared_ptr<ecore::EReference> getPackageImport_Attribute_importedPackage() const ;
			virtual std::shared_ptr<ecore::EReference> getPackageImport_Attribute_importingNamespace() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getPackageImport_Operation_public_or_private_EDiagnosticChain_EMap() const ;
			
			// End Class PackageImport

			// Begin Class PackageMerge
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getPackageMerge_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getPackageMerge_Attribute_mergedPackage() const ;
			virtual std::shared_ptr<ecore::EReference> getPackageMerge_Attribute_receivingPackage() const ;
			
			
			// End Class PackageMerge

			// Begin Class PackageableElement
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getPackageableElement_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getPackageableElement_Attribute_owningPackage() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getPackageableElement_Operation_namespace_needs_visibility_EDiagnosticChain_EMap() const ;
			
			// End Class PackageableElement

			// Begin Class Parameter
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getParameter_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getParameter_Attribute_default() const ;
			virtual std::shared_ptr<ecore::EAttribute> getParameter_Attribute_direction() const ;
			virtual std::shared_ptr<ecore::EAttribute> getParameter_Attribute_effect() const ;
			virtual std::shared_ptr<ecore::EAttribute> getParameter_Attribute_isException() const ;
			virtual std::shared_ptr<ecore::EAttribute> getParameter_Attribute_isStream() const ;
			
			virtual std::shared_ptr<ecore::EReference> getParameter_Attribute_behavior() const ;
			virtual std::shared_ptr<ecore::EReference> getParameter_Attribute_defaultValue() const ;
			virtual std::shared_ptr<ecore::EReference> getParameter_Attribute_operation() const ;
			virtual std::shared_ptr<ecore::EReference> getParameter_Attribute_parameterSet() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getParameter_Operation_connector_end_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getParameter_Operation_in_and_out_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getParameter_Operation_isSetDefault() const ;
			virtual std::shared_ptr<ecore::EOperation> getParameter_Operation_not_exception_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getParameter_Operation_object_effect_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getParameter_Operation_reentrant_behaviors_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getParameter_Operation_setBooleanDefaultValue_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getParameter_Operation_setIntegerDefaultValue_Integer() const ;
			virtual std::shared_ptr<ecore::EOperation> getParameter_Operation_setNullDefaultValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getParameter_Operation_setRealDefaultValue_Real() const ;
			virtual std::shared_ptr<ecore::EOperation> getParameter_Operation_setStringDefaultValue_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getParameter_Operation_setUnlimitedNaturalDefaultValue_UnlimitedNatural() const ;
			virtual std::shared_ptr<ecore::EOperation> getParameter_Operation_stream_and_exception_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getParameter_Operation_unsetDefault() const ;
			
			// End Class Parameter

			// Begin Class ParameterSet
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getParameterSet_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getParameterSet_Attribute_condition() const ;
			virtual std::shared_ptr<ecore::EReference> getParameterSet_Attribute_parameter() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getParameterSet_Operation_input_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getParameterSet_Operation_same_parameterized_entity_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getParameterSet_Operation_two_parameter_sets_EDiagnosticChain_EMap() const ;
			
			// End Class ParameterSet

			// Begin Class ParameterableElement
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getParameterableElement_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getParameterableElement_Attribute_owningTemplateParameter() const ;
			virtual std::shared_ptr<ecore::EReference> getParameterableElement_Attribute_templateParameter() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getParameterableElement_Operation_isCompatibleWith_ParameterableElement() const ;
			virtual std::shared_ptr<ecore::EOperation> getParameterableElement_Operation_isTemplateParameter() const ;
			
			// End Class ParameterableElement

			// Begin Class PartDecomposition
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getPartDecomposition_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getPartDecomposition_Operation_assume_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getPartDecomposition_Operation_commutativity_of_decomposition_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getPartDecomposition_Operation_parts_of_internal_structures_EDiagnosticChain_EMap() const ;
			
			// End Class PartDecomposition

			// Begin Class Pin
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getPin_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getPin_Attribute_isControl() const ;
			
			
			virtual std::shared_ptr<ecore::EOperation> getPin_Operation_control_pins_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getPin_Operation_not_unique_EDiagnosticChain_EMap() const ;
			
			// End Class Pin

			// Begin Class Port
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getPort_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getPort_Attribute_isBehavior() const ;
			virtual std::shared_ptr<ecore::EAttribute> getPort_Attribute_isConjugated() const ;
			virtual std::shared_ptr<ecore::EAttribute> getPort_Attribute_isService() const ;
			
			virtual std::shared_ptr<ecore::EReference> getPort_Attribute_protocol() const ;
			virtual std::shared_ptr<ecore::EReference> getPort_Attribute_provided() const ;
			virtual std::shared_ptr<ecore::EReference> getPort_Attribute_redefinedPort() const ;
			virtual std::shared_ptr<ecore::EReference> getPort_Attribute_required() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getPort_Operation_basicProvided() const ;
			virtual std::shared_ptr<ecore::EOperation> getPort_Operation_basicRequired() const ;
			virtual std::shared_ptr<ecore::EOperation> getPort_Operation_default_value_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getPort_Operation_encapsulated_owner_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getPort_Operation_getProvideds() const ;
			virtual std::shared_ptr<ecore::EOperation> getPort_Operation_getRequireds() const ;
			virtual std::shared_ptr<ecore::EOperation> getPort_Operation_port_aggregation_EDiagnosticChain_EMap() const ;
			
			// End Class Port

			// Begin Class PrimitiveType
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getPrimitiveType_Class() const ;
			
			
			
			
			// End Class PrimitiveType

			// Begin Class Profile
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getProfile_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getProfile_Attribute_metaclassReference() const ;
			virtual std::shared_ptr<ecore::EReference> getProfile_Attribute_metamodelReference() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getProfile_Operation_create_Classifier() const ;
			virtual std::shared_ptr<ecore::EOperation> getProfile_Operation_define() const ;
			virtual std::shared_ptr<ecore::EOperation> getProfile_Operation_define_EMap_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getProfile_Operation_getDefinition() const ;
			virtual std::shared_ptr<ecore::EOperation> getProfile_Operation_getDefinition_NamedElement() const ;
			virtual std::shared_ptr<ecore::EOperation> getProfile_Operation_getOwnedExtensions_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getProfile_Operation_getReferencedMetaclasses() const ;
			virtual std::shared_ptr<ecore::EOperation> getProfile_Operation_getReferencedMetamodels() const ;
			virtual std::shared_ptr<ecore::EOperation> getProfile_Operation_isDefined() const ;
			virtual std::shared_ptr<ecore::EOperation> getProfile_Operation_metaclass_reference_not_specialized_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getProfile_Operation_references_same_metamodel_EDiagnosticChain_EMap() const ;
			
			// End Class Profile

			// Begin Class ProfileApplication
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getProfileApplication_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getProfileApplication_Attribute_isStrict() const ;
			
			virtual std::shared_ptr<ecore::EReference> getProfileApplication_Attribute_appliedProfile() const ;
			virtual std::shared_ptr<ecore::EReference> getProfileApplication_Attribute_applyingPackage() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getProfileApplication_Operation_getAppliedDefinition() const ;
			virtual std::shared_ptr<ecore::EOperation> getProfileApplication_Operation_getAppliedDefinition_NamedElement() const ;
			
			// End Class ProfileApplication

			// Begin Class Property
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getProperty_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getProperty_Attribute_aggregation() const ;
			virtual std::shared_ptr<ecore::EAttribute> getProperty_Attribute_default() const ;
			virtual std::shared_ptr<ecore::EAttribute> getProperty_Attribute_isComposite() const ;
			virtual std::shared_ptr<ecore::EAttribute> getProperty_Attribute_isDerived() const ;
			virtual std::shared_ptr<ecore::EAttribute> getProperty_Attribute_isDerivedUnion() const ;
			virtual std::shared_ptr<ecore::EAttribute> getProperty_Attribute_isID() const ;
			
			virtual std::shared_ptr<ecore::EReference> getProperty_Attribute_association() const ;
			virtual std::shared_ptr<ecore::EReference> getProperty_Attribute_associationEnd() const ;
			virtual std::shared_ptr<ecore::EReference> getProperty_Attribute_class() const ;
			virtual std::shared_ptr<ecore::EReference> getProperty_Attribute_datatype() const ;
			virtual std::shared_ptr<ecore::EReference> getProperty_Attribute_defaultValue() const ;
			virtual std::shared_ptr<ecore::EReference> getProperty_Attribute_interface() const ;
			virtual std::shared_ptr<ecore::EReference> getProperty_Attribute_opposite() const ;
			virtual std::shared_ptr<ecore::EReference> getProperty_Attribute_owningAssociation() const ;
			virtual std::shared_ptr<ecore::EReference> getProperty_Attribute_qualifier() const ;
			virtual std::shared_ptr<ecore::EReference> getProperty_Attribute_redefinedProperty() const ;
			virtual std::shared_ptr<ecore::EReference> getProperty_Attribute_subsettedProperty() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_binding_to_attribute_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_deployment_target_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_derived_union_is_derived_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_derived_union_is_read_only_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_getOpposite() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_getOtherEnd() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_isAttribute() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_isComposite() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_isNavigable() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_isSetDefault() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_multiplicity_of_composite_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_qualified_is_association_end_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_redefined_property_inherited_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_setBooleanDefaultValue_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_setIntegerDefaultValue_Integer() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_setIsNavigable_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_setNullDefaultValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_setRealDefaultValue_Real() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_setStringDefaultValue_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_setUnlimitedNaturalDefaultValue_UnlimitedNatural() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_subsetted_property_names_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_subsettingContext() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_subsetting_context_conforms_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_subsetting_rules_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_type_of_opposite_end_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getProperty_Operation_unsetDefault() const ;
			
			// End Class Property

			// Begin Class ProtocolConformance
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getProtocolConformance_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getProtocolConformance_Attribute_generalMachine() const ;
			virtual std::shared_ptr<ecore::EReference> getProtocolConformance_Attribute_specificMachine() const ;
			
			
			// End Class ProtocolConformance

			// Begin Class ProtocolStateMachine
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getProtocolStateMachine_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getProtocolStateMachine_Attribute_conformance() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getProtocolStateMachine_Operation_deep_or_shallow_history_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getProtocolStateMachine_Operation_entry_exit_do_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getProtocolStateMachine_Operation_protocol_transitions_EDiagnosticChain_EMap() const ;
			
			// End Class ProtocolStateMachine

			// Begin Class ProtocolTransition
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getProtocolTransition_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getProtocolTransition_Attribute_postCondition() const ;
			virtual std::shared_ptr<ecore::EReference> getProtocolTransition_Attribute_preCondition() const ;
			virtual std::shared_ptr<ecore::EReference> getProtocolTransition_Attribute_referred() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getProtocolTransition_Operation_associated_actions_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getProtocolTransition_Operation_belongs_to_psm_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getProtocolTransition_Operation_getReferreds() const ;
			virtual std::shared_ptr<ecore::EOperation> getProtocolTransition_Operation_refers_to_operation_EDiagnosticChain_EMap() const ;
			
			// End Class ProtocolTransition

			// Begin Class Pseudostate
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getPseudostate_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getPseudostate_Attribute_kind() const ;
			
			virtual std::shared_ptr<ecore::EReference> getPseudostate_Attribute_state() const ;
			virtual std::shared_ptr<ecore::EReference> getPseudostate_Attribute_stateMachine() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getPseudostate_Operation_choice_vertex_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getPseudostate_Operation_fork_vertex_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getPseudostate_Operation_history_vertices_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getPseudostate_Operation_initial_vertex_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getPseudostate_Operation_join_vertex_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getPseudostate_Operation_junction_vertex_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getPseudostate_Operation_outgoing_from_initial_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getPseudostate_Operation_transitions_incoming_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getPseudostate_Operation_transitions_outgoing_EDiagnosticChain_EMap() const ;
			
			// End Class Pseudostate

			// Begin Class QualifierValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getQualifierValue_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getQualifierValue_Attribute_qualifier() const ;
			virtual std::shared_ptr<ecore::EReference> getQualifierValue_Attribute_value() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getQualifierValue_Operation_multiplicity_of_qualifier_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getQualifierValue_Operation_qualifier_attribute_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getQualifierValue_Operation_type_of_qualifier_EDiagnosticChain_EMap() const ;
			
			// End Class QualifierValue

			// Begin Class RaiseExceptionAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getRaiseExceptionAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getRaiseExceptionAction_Attribute_exception() const ;
			
			
			// End Class RaiseExceptionAction

			// Begin Class ReadExtentAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReadExtentAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getReadExtentAction_Attribute_classifier() const ;
			virtual std::shared_ptr<ecore::EReference> getReadExtentAction_Attribute_result() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getReadExtentAction_Operation_multiplicity_of_result_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadExtentAction_Operation_type_is_classifier_EDiagnosticChain_EMap() const ;
			
			// End Class ReadExtentAction

			// Begin Class ReadIsClassifiedObjectAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReadIsClassifiedObjectAction_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getReadIsClassifiedObjectAction_Attribute_isDirect() const ;
			
			virtual std::shared_ptr<ecore::EReference> getReadIsClassifiedObjectAction_Attribute_classifier() const ;
			virtual std::shared_ptr<ecore::EReference> getReadIsClassifiedObjectAction_Attribute_object() const ;
			virtual std::shared_ptr<ecore::EReference> getReadIsClassifiedObjectAction_Attribute_result() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getReadIsClassifiedObjectAction_Operation_boolean_result_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadIsClassifiedObjectAction_Operation_multiplicity_of_input_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadIsClassifiedObjectAction_Operation_multiplicity_of_output_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadIsClassifiedObjectAction_Operation_no_type_EDiagnosticChain_EMap() const ;
			
			// End Class ReadIsClassifiedObjectAction

			// Begin Class ReadLinkAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReadLinkAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getReadLinkAction_Attribute_result() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getReadLinkAction_Operation_compatible_multiplicity_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadLinkAction_Operation_navigable_open_end_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadLinkAction_Operation_one_open_end_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadLinkAction_Operation_openEnd() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadLinkAction_Operation_type_and_ordering_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadLinkAction_Operation_visibility_EDiagnosticChain_EMap() const ;
			
			// End Class ReadLinkAction

			// Begin Class ReadLinkObjectEndAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReadLinkObjectEndAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getReadLinkObjectEndAction_Attribute_end() const ;
			virtual std::shared_ptr<ecore::EReference> getReadLinkObjectEndAction_Attribute_object() const ;
			virtual std::shared_ptr<ecore::EReference> getReadLinkObjectEndAction_Attribute_result() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getReadLinkObjectEndAction_Operation_association_of_association_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadLinkObjectEndAction_Operation_ends_of_association_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadLinkObjectEndAction_Operation_multiplicity_of_object_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadLinkObjectEndAction_Operation_multiplicity_of_result_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadLinkObjectEndAction_Operation_property_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadLinkObjectEndAction_Operation_type_of_object_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadLinkObjectEndAction_Operation_type_of_result_EDiagnosticChain_EMap() const ;
			
			// End Class ReadLinkObjectEndAction

			// Begin Class ReadLinkObjectEndQualifierAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReadLinkObjectEndQualifierAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getReadLinkObjectEndQualifierAction_Attribute_object() const ;
			virtual std::shared_ptr<ecore::EReference> getReadLinkObjectEndQualifierAction_Attribute_qualifier() const ;
			virtual std::shared_ptr<ecore::EReference> getReadLinkObjectEndQualifierAction_Attribute_result() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getReadLinkObjectEndQualifierAction_Operation_association_of_association_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadLinkObjectEndQualifierAction_Operation_ends_of_association_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadLinkObjectEndQualifierAction_Operation_multiplicity_of_object_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadLinkObjectEndQualifierAction_Operation_multiplicity_of_qualifier_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadLinkObjectEndQualifierAction_Operation_multiplicity_of_result_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadLinkObjectEndQualifierAction_Operation_qualifier_attribute_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadLinkObjectEndQualifierAction_Operation_same_type_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadLinkObjectEndQualifierAction_Operation_type_of_object_EDiagnosticChain_EMap() const ;
			
			// End Class ReadLinkObjectEndQualifierAction

			// Begin Class ReadSelfAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReadSelfAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getReadSelfAction_Attribute_result() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getReadSelfAction_Operation_contained_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadSelfAction_Operation_multiplicity_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadSelfAction_Operation_not_static_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadSelfAction_Operation_type_EDiagnosticChain_EMap() const ;
			
			// End Class ReadSelfAction

			// Begin Class ReadStructuralFeatureAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReadStructuralFeatureAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getReadStructuralFeatureAction_Attribute_result() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getReadStructuralFeatureAction_Operation_type_and_ordering_EDiagnosticChain_EMap() const ;
			
			// End Class ReadStructuralFeatureAction

			// Begin Class ReadVariableAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReadVariableAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getReadVariableAction_Attribute_result() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getReadVariableAction_Operation_compatible_multiplicity_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReadVariableAction_Operation_type_and_ordering_EDiagnosticChain_EMap() const ;
			
			// End Class ReadVariableAction

			// Begin Class Realization
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getRealization_Class() const ;
			
			
			
			
			// End Class Realization

			// Begin Class Reception
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReception_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getReception_Attribute_signal() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getReception_Operation_same_name_as_signal_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReception_Operation_same_structure_as_signal_EDiagnosticChain_EMap() const ;
			
			// End Class Reception

			// Begin Class ReclassifyObjectAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReclassifyObjectAction_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getReclassifyObjectAction_Attribute_isReplaceAll() const ;
			
			virtual std::shared_ptr<ecore::EReference> getReclassifyObjectAction_Attribute_newClassifier() const ;
			virtual std::shared_ptr<ecore::EReference> getReclassifyObjectAction_Attribute_object() const ;
			virtual std::shared_ptr<ecore::EReference> getReclassifyObjectAction_Attribute_oldClassifier() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getReclassifyObjectAction_Operation_classifier_not_abstract_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReclassifyObjectAction_Operation_input_pin_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReclassifyObjectAction_Operation_multiplicity_EDiagnosticChain_EMap() const ;
			
			// End Class ReclassifyObjectAction

			// Begin Class RedefinableElement
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getRedefinableElement_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getRedefinableElement_Attribute_isLeaf() const ;
			
			virtual std::shared_ptr<ecore::EReference> getRedefinableElement_Attribute_redefinedElement() const ;
			virtual std::shared_ptr<ecore::EReference> getRedefinableElement_Attribute_redefinitionContext() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getRedefinableElement_Operation_isConsistentWith_RedefinableElement() const ;
			virtual std::shared_ptr<ecore::EOperation> getRedefinableElement_Operation_isRedefinitionContextValid_RedefinableElement() const ;
			virtual std::shared_ptr<ecore::EOperation> getRedefinableElement_Operation_non_leaf_redefinition_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getRedefinableElement_Operation_redefinition_consistent_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getRedefinableElement_Operation_redefinition_context_valid_EDiagnosticChain_EMap() const ;
			
			// End Class RedefinableElement

			// Begin Class RedefinableTemplateSignature
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getRedefinableTemplateSignature_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getRedefinableTemplateSignature_Attribute_classifier() const ;
			virtual std::shared_ptr<ecore::EReference> getRedefinableTemplateSignature_Attribute_extendedSignature() const ;
			virtual std::shared_ptr<ecore::EReference> getRedefinableTemplateSignature_Attribute_inheritedParameter() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getRedefinableTemplateSignature_Operation_getInheritedParameters() const ;
			virtual std::shared_ptr<ecore::EOperation> getRedefinableTemplateSignature_Operation_redefines_parents_EDiagnosticChain_EMap() const ;
			
			// End Class RedefinableTemplateSignature

			// Begin Class ReduceAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReduceAction_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getReduceAction_Attribute_isOrdered() const ;
			
			virtual std::shared_ptr<ecore::EReference> getReduceAction_Attribute_collection() const ;
			virtual std::shared_ptr<ecore::EReference> getReduceAction_Attribute_reducer() const ;
			virtual std::shared_ptr<ecore::EReference> getReduceAction_Attribute_result() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getReduceAction_Operation_input_type_is_collection_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReduceAction_Operation_output_types_are_compatible_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReduceAction_Operation_reducer_inputs_output_EDiagnosticChain_EMap() const ;
			
			// End Class ReduceAction

			// Begin Class Region
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getRegion_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getRegion_Attribute_extendedRegion() const ;
			virtual std::shared_ptr<ecore::EReference> getRegion_Attribute_state() const ;
			virtual std::shared_ptr<ecore::EReference> getRegion_Attribute_stateMachine() const ;
			virtual std::shared_ptr<ecore::EReference> getRegion_Attribute_subvertex() const ;
			virtual std::shared_ptr<ecore::EReference> getRegion_Attribute_transition() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getRegion_Operation_belongsToPSM() const ;
			virtual std::shared_ptr<ecore::EOperation> getRegion_Operation_containingStateMachine() const ;
			virtual std::shared_ptr<ecore::EOperation> getRegion_Operation_deep_history_vertex_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getRegion_Operation_initial_vertex_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getRegion_Operation_owned_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getRegion_Operation_redefinitionContext() const ;
			virtual std::shared_ptr<ecore::EOperation> getRegion_Operation_shallow_history_vertex_EDiagnosticChain_EMap() const ;
			
			// End Class Region

			// Begin Class Relationship
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getRelationship_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getRelationship_Attribute_relatedElement() const ;
			
			
			// End Class Relationship

			// Begin Class RemoveStructuralFeatureValueAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getRemoveStructuralFeatureValueAction_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getRemoveStructuralFeatureValueAction_Attribute_isRemoveDuplicates() const ;
			
			virtual std::shared_ptr<ecore::EReference> getRemoveStructuralFeatureValueAction_Attribute_removeAt() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getRemoveStructuralFeatureValueAction_Operation_removeAt_and_value_EDiagnosticChain_EMap() const ;
			
			// End Class RemoveStructuralFeatureValueAction

			// Begin Class RemoveVariableValueAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getRemoveVariableValueAction_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getRemoveVariableValueAction_Attribute_isRemoveDuplicates() const ;
			
			virtual std::shared_ptr<ecore::EReference> getRemoveVariableValueAction_Attribute_removeAt() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getRemoveVariableValueAction_Operation_removeAt_and_value_EDiagnosticChain_EMap() const ;
			
			// End Class RemoveVariableValueAction

			// Begin Class ReplyAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReplyAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getReplyAction_Attribute_replyToCall() const ;
			virtual std::shared_ptr<ecore::EReference> getReplyAction_Attribute_replyValue() const ;
			virtual std::shared_ptr<ecore::EReference> getReplyAction_Attribute_returnInformation() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getReplyAction_Operation_event_on_reply_to_call_trigger_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getReplyAction_Operation_pins_match_parameter_EDiagnosticChain_EMap() const ;
			
			// End Class ReplyAction

			// Begin Class SendObjectAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSendObjectAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getSendObjectAction_Attribute_request() const ;
			virtual std::shared_ptr<ecore::EReference> getSendObjectAction_Attribute_target() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getSendObjectAction_Operation_type_target_pin_EDiagnosticChain_EMap() const ;
			
			// End Class SendObjectAction

			// Begin Class SendSignalAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSendSignalAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getSendSignalAction_Attribute_signal() const ;
			virtual std::shared_ptr<ecore::EReference> getSendSignalAction_Attribute_target() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getSendSignalAction_Operation_number_order_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getSendSignalAction_Operation_type_ordering_multiplicity_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getSendSignalAction_Operation_type_target_pin_EDiagnosticChain_EMap() const ;
			
			// End Class SendSignalAction

			// Begin Class SequenceNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSequenceNode_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getSequenceNode_Attribute_executableNode() const ;
			
			
			// End Class SequenceNode

			// Begin Class Signal
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSignal_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getSignal_Attribute_ownedAttribute() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getSignal_Operation_createOwnedAttribute_String_UnlimitedNatural() const ;
			
			// End Class Signal

			// Begin Class SignalEvent
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSignalEvent_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getSignalEvent_Attribute_signal() const ;
			
			
			// End Class SignalEvent

			// Begin Class Slot
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSlot_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getSlot_Attribute_definingFeature() const ;
			virtual std::shared_ptr<ecore::EReference> getSlot_Attribute_owningInstance() const ;
			virtual std::shared_ptr<ecore::EReference> getSlot_Attribute_value() const ;
			
			
			// End Class Slot

			// Begin Class StartClassifierBehaviorAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStartClassifierBehaviorAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getStartClassifierBehaviorAction_Attribute_object() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getStartClassifierBehaviorAction_Operation_multiplicity_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStartClassifierBehaviorAction_Operation_type_has_classifier_EDiagnosticChain_EMap() const ;
			
			// End Class StartClassifierBehaviorAction

			// Begin Class StartObjectBehaviorAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStartObjectBehaviorAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getStartObjectBehaviorAction_Attribute_object() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getStartObjectBehaviorAction_Operation_behavior() const ;
			virtual std::shared_ptr<ecore::EOperation> getStartObjectBehaviorAction_Operation_multiplicity_of_object_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStartObjectBehaviorAction_Operation_no_onport_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStartObjectBehaviorAction_Operation_type_of_object_EDiagnosticChain_EMap() const ;
			
			// End Class StartObjectBehaviorAction

			// Begin Class State
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getState_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getState_Attribute_isComposite() const ;
			virtual std::shared_ptr<ecore::EAttribute> getState_Attribute_isOrthogonal() const ;
			virtual std::shared_ptr<ecore::EAttribute> getState_Attribute_isSimple() const ;
			virtual std::shared_ptr<ecore::EAttribute> getState_Attribute_isSubmachineState() const ;
			
			virtual std::shared_ptr<ecore::EReference> getState_Attribute_connection() const ;
			virtual std::shared_ptr<ecore::EReference> getState_Attribute_connectionPoint() const ;
			virtual std::shared_ptr<ecore::EReference> getState_Attribute_deferrableTrigger() const ;
			virtual std::shared_ptr<ecore::EReference> getState_Attribute_doActivity() const ;
			virtual std::shared_ptr<ecore::EReference> getState_Attribute_entry() const ;
			virtual std::shared_ptr<ecore::EReference> getState_Attribute_exit() const ;
			virtual std::shared_ptr<ecore::EReference> getState_Attribute_redefinedState() const ;
			virtual std::shared_ptr<ecore::EReference> getState_Attribute_region() const ;
			virtual std::shared_ptr<ecore::EReference> getState_Attribute_stateInvariant() const ;
			virtual std::shared_ptr<ecore::EReference> getState_Attribute_submachine() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getState_Operation_composite_states_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getState_Operation_destinations_or_sources_of_transitions_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getState_Operation_entry_or_exit_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getState_Operation_isComposite() const ;
			virtual std::shared_ptr<ecore::EOperation> getState_Operation_isOrthogonal() const ;
			virtual std::shared_ptr<ecore::EOperation> getState_Operation_isSimple() const ;
			virtual std::shared_ptr<ecore::EOperation> getState_Operation_isSubmachineState() const ;
			virtual std::shared_ptr<ecore::EOperation> getState_Operation_redefinitionContext() const ;
			virtual std::shared_ptr<ecore::EOperation> getState_Operation_submachine_or_regions_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getState_Operation_submachine_states_EDiagnosticChain_EMap() const ;
			
			// End Class State

			// Begin Class StateInvariant
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStateInvariant_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getStateInvariant_Attribute_invariant() const ;
			
			
			// End Class StateInvariant

			// Begin Class StateMachine
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStateMachine_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getStateMachine_Attribute_connectionPoint() const ;
			virtual std::shared_ptr<ecore::EReference> getStateMachine_Attribute_extendedStateMachine() const ;
			virtual std::shared_ptr<ecore::EReference> getStateMachine_Attribute_region() const ;
			virtual std::shared_ptr<ecore::EReference> getStateMachine_Attribute_submachineState() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getStateMachine_Operation_lCA_Vertex_Vertex() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachine_Operation_lCAState_Vertex_Vertex() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachine_Operation_ancestor_Vertex_Vertex() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachine_Operation_classifier_context_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachine_Operation_connection_points_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachine_Operation_context_classifier_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStateMachine_Operation_method_EDiagnosticChain_EMap() const ;
			
			// End Class StateMachine

			// Begin Class Stereotype
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStereotype_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getStereotype_Attribute_icon() const ;
			virtual std::shared_ptr<ecore::EReference> getStereotype_Attribute_profile() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getStereotype_Operation_associationEndOwnership_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStereotype_Operation_base_property_multiplicity_multiple_extension_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStereotype_Operation_base_property_multiplicity_single_extension_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStereotype_Operation_base_property_upper_bound_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStereotype_Operation_binaryAssociationsOnly_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStereotype_Operation_containingProfile() const ;
			virtual std::shared_ptr<ecore::EOperation> getStereotype_Operation_createExtension_Class_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getStereotype_Operation_createIcon_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getStereotype_Operation_createIcon_String_String() const ;
			virtual std::shared_ptr<ecore::EOperation> getStereotype_Operation_generalize_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStereotype_Operation_getAllExtendedMetaclasses() const ;
			virtual std::shared_ptr<ecore::EOperation> getStereotype_Operation_getDefinition() const ;
			virtual std::shared_ptr<ecore::EOperation> getStereotype_Operation_getExtendedMetaclasses() const ;
			virtual std::shared_ptr<ecore::EOperation> getStereotype_Operation_getKeyword() const ;
			virtual std::shared_ptr<ecore::EOperation> getStereotype_Operation_getKeyword_Boolean() const ;
			virtual std::shared_ptr<ecore::EOperation> getStereotype_Operation_getProfile() const ;
			virtual std::shared_ptr<ecore::EOperation> getStereotype_Operation_name_not_clash_EDiagnosticChain_EMap() const ;
			
			// End Class Stereotype

			// Begin Class StringExpression
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStringExpression_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getStringExpression_Attribute_owningExpression() const ;
			virtual std::shared_ptr<ecore::EReference> getStringExpression_Attribute_subExpression() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getStringExpression_Operation_operands_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStringExpression_Operation_subexpressions_EDiagnosticChain_EMap() const ;
			
			// End Class StringExpression

			// Begin Class StructuralFeature
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStructuralFeature_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getStructuralFeature_Attribute_isReadOnly() const ;
			
			
			
			// End Class StructuralFeature

			// Begin Class StructuralFeatureAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStructuralFeatureAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getStructuralFeatureAction_Attribute_object() const ;
			virtual std::shared_ptr<ecore::EReference> getStructuralFeatureAction_Attribute_structuralFeature() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getStructuralFeatureAction_Operation_multiplicity_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuralFeatureAction_Operation_not_static_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuralFeatureAction_Operation_object_type_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuralFeatureAction_Operation_one_featuring_classifier_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuralFeatureAction_Operation_visibility_EDiagnosticChain_EMap() const ;
			
			// End Class StructuralFeatureAction

			// Begin Class StructuredActivityNode
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStructuredActivityNode_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getStructuredActivityNode_Attribute_mustIsolate() const ;
			
			virtual std::shared_ptr<ecore::EReference> getStructuredActivityNode_Attribute_edge() const ;
			virtual std::shared_ptr<ecore::EReference> getStructuredActivityNode_Attribute_node() const ;
			virtual std::shared_ptr<ecore::EReference> getStructuredActivityNode_Attribute_structuredNodeInput() const ;
			virtual std::shared_ptr<ecore::EReference> getStructuredActivityNode_Attribute_structuredNodeOutput() const ;
			virtual std::shared_ptr<ecore::EReference> getStructuredActivityNode_Attribute_variable() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getStructuredActivityNode_Operation_edges_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredActivityNode_Operation_input_pin_edges_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredActivityNode_Operation_output_pin_edges_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredActivityNode_Operation_sourceNodes() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredActivityNode_Operation_targetNodes() const ;
			
			// End Class StructuredActivityNode

			// Begin Class StructuredClassifier
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStructuredClassifier_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getStructuredClassifier_Attribute_ownedAttribute() const ;
			virtual std::shared_ptr<ecore::EReference> getStructuredClassifier_Attribute_ownedConnector() const ;
			virtual std::shared_ptr<ecore::EReference> getStructuredClassifier_Attribute_part() const ;
			virtual std::shared_ptr<ecore::EReference> getStructuredClassifier_Attribute_role() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getStructuredClassifier_Operation_allRoles() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredClassifier_Operation_createOwnedAttribute_String_UnlimitedNatural() const ;
			virtual std::shared_ptr<ecore::EOperation> getStructuredClassifier_Operation_getParts() const ;
			
			// End Class StructuredClassifier

			// Begin Class Substitution
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSubstitution_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getSubstitution_Attribute_contract() const ;
			virtual std::shared_ptr<ecore::EReference> getSubstitution_Attribute_substitutingClassifier() const ;
			
			
			// End Class Substitution

			// Begin Class TemplateBinding
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTemplateBinding_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getTemplateBinding_Attribute_boundElement() const ;
			virtual std::shared_ptr<ecore::EReference> getTemplateBinding_Attribute_parameterSubstitution() const ;
			virtual std::shared_ptr<ecore::EReference> getTemplateBinding_Attribute_signature() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getTemplateBinding_Operation_one_parameter_substitution_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getTemplateBinding_Operation_parameter_substitution_formal_EDiagnosticChain_EMap() const ;
			
			// End Class TemplateBinding

			// Begin Class TemplateParameter
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTemplateParameter_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getTemplateParameter_Attribute_default() const ;
			virtual std::shared_ptr<ecore::EReference> getTemplateParameter_Attribute_ownedDefault() const ;
			virtual std::shared_ptr<ecore::EReference> getTemplateParameter_Attribute_ownedParameteredElement() const ;
			virtual std::shared_ptr<ecore::EReference> getTemplateParameter_Attribute_parameteredElement() const ;
			virtual std::shared_ptr<ecore::EReference> getTemplateParameter_Attribute_signature() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getTemplateParameter_Operation_must_be_compatible_EDiagnosticChain_EMap() const ;
			
			// End Class TemplateParameter

			// Begin Class TemplateParameterSubstitution
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTemplateParameterSubstitution_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getTemplateParameterSubstitution_Attribute_actual() const ;
			virtual std::shared_ptr<ecore::EReference> getTemplateParameterSubstitution_Attribute_formal() const ;
			virtual std::shared_ptr<ecore::EReference> getTemplateParameterSubstitution_Attribute_ownedActual() const ;
			virtual std::shared_ptr<ecore::EReference> getTemplateParameterSubstitution_Attribute_templateBinding() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getTemplateParameterSubstitution_Operation_must_be_compatible_EDiagnosticChain_EMap() const ;
			
			// End Class TemplateParameterSubstitution

			// Begin Class TemplateSignature
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTemplateSignature_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getTemplateSignature_Attribute_ownedParameter() const ;
			virtual std::shared_ptr<ecore::EReference> getTemplateSignature_Attribute_parameter() const ;
			virtual std::shared_ptr<ecore::EReference> getTemplateSignature_Attribute_template() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getTemplateSignature_Operation_own_elements_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getTemplateSignature_Operation_unique_parameters_EDiagnosticChain_EMap() const ;
			
			// End Class TemplateSignature

			// Begin Class TemplateableElement
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTemplateableElement_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getTemplateableElement_Attribute_ownedTemplateSignature() const ;
			virtual std::shared_ptr<ecore::EReference> getTemplateableElement_Attribute_templateBinding() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getTemplateableElement_Operation_isTemplate() const ;
			virtual std::shared_ptr<ecore::EOperation> getTemplateableElement_Operation_parameterableElements() const ;
			
			// End Class TemplateableElement

			// Begin Class TestIdentityAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTestIdentityAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getTestIdentityAction_Attribute_first() const ;
			virtual std::shared_ptr<ecore::EReference> getTestIdentityAction_Attribute_result() const ;
			virtual std::shared_ptr<ecore::EReference> getTestIdentityAction_Attribute_second() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getTestIdentityAction_Operation_multiplicity_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getTestIdentityAction_Operation_no_type_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getTestIdentityAction_Operation_result_is_boolean_EDiagnosticChain_EMap() const ;
			
			// End Class TestIdentityAction

			// Begin Class TimeConstraint
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTimeConstraint_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getTimeConstraint_Attribute_firstEvent() const ;
			
			
			virtual std::shared_ptr<ecore::EOperation> getTimeConstraint_Operation_has_one_constrainedElement_EDiagnosticChain_EMap() const ;
			
			// End Class TimeConstraint

			// Begin Class TimeEvent
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTimeEvent_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getTimeEvent_Attribute_isRelative() const ;
			
			virtual std::shared_ptr<ecore::EReference> getTimeEvent_Attribute_when() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getTimeEvent_Operation_when_non_negative_EDiagnosticChain_EMap() const ;
			
			// End Class TimeEvent

			// Begin Class TimeExpression
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTimeExpression_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getTimeExpression_Attribute_expr() const ;
			virtual std::shared_ptr<ecore::EReference> getTimeExpression_Attribute_observation() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getTimeExpression_Operation_no_expr_requires_observation_EDiagnosticChain_EMap() const ;
			
			// End Class TimeExpression

			// Begin Class TimeInterval
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTimeInterval_Class() const ;
			
			
			
			
			// End Class TimeInterval

			// Begin Class TimeObservation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTimeObservation_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getTimeObservation_Attribute_firstEvent() const ;
			
			virtual std::shared_ptr<ecore::EReference> getTimeObservation_Attribute_event() const ;
			
			
			// End Class TimeObservation

			// Begin Class Transition
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTransition_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getTransition_Attribute_kind() const ;
			
			virtual std::shared_ptr<ecore::EReference> getTransition_Attribute_container() const ;
			virtual std::shared_ptr<ecore::EReference> getTransition_Attribute_effect() const ;
			virtual std::shared_ptr<ecore::EReference> getTransition_Attribute_guard() const ;
			virtual std::shared_ptr<ecore::EReference> getTransition_Attribute_redefinedTransition() const ;
			virtual std::shared_ptr<ecore::EReference> getTransition_Attribute_source() const ;
			virtual std::shared_ptr<ecore::EReference> getTransition_Attribute_target() const ;
			virtual std::shared_ptr<ecore::EReference> getTransition_Attribute_trigger() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getTransition_Operation_containingStateMachine() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransition_Operation_fork_segment_guards_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransition_Operation_fork_segment_state_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransition_Operation_initial_transition_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransition_Operation_join_segment_guards_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransition_Operation_join_segment_state_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransition_Operation_outgoing_pseudostates_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransition_Operation_redefinitionContext() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransition_Operation_state_is_external_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransition_Operation_state_is_internal_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getTransition_Operation_state_is_local_EDiagnosticChain_EMap() const ;
			
			// End Class Transition

			// Begin Class Trigger
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTrigger_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getTrigger_Attribute_event() const ;
			virtual std::shared_ptr<ecore::EReference> getTrigger_Attribute_port() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getTrigger_Operation_trigger_with_ports_EDiagnosticChain_EMap() const ;
			
			// End Class Trigger

			// Begin Class Type
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getType_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getType_Attribute_package() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getType_Operation_conformsTo_Type() const ;
			virtual std::shared_ptr<ecore::EOperation> getType_Operation_createAssociation_Boolean_UnlimitedNatural() const ;
			virtual std::shared_ptr<ecore::EOperation> getType_Operation_getAssociations() const ;
			
			// End Class Type

			// Begin Class TypedElement
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTypedElement_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getTypedElement_Attribute_type() const ;
			
			
			// End Class TypedElement

			// Begin Class UnmarshallAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getUnmarshallAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getUnmarshallAction_Attribute_object() const ;
			virtual std::shared_ptr<ecore::EReference> getUnmarshallAction_Attribute_result() const ;
			virtual std::shared_ptr<ecore::EReference> getUnmarshallAction_Attribute_unmarshallType() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getUnmarshallAction_Operation_multiplicity_of_object_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getUnmarshallAction_Operation_number_of_result_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getUnmarshallAction_Operation_object_type_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getUnmarshallAction_Operation_structural_feature_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getUnmarshallAction_Operation_type_ordering_and_multiplicity_EDiagnosticChain_EMap() const ;
			
			// End Class UnmarshallAction

			// Begin Class Usage
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getUsage_Class() const ;
			
			
			
			
			// End Class Usage

			// Begin Class UseCase
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getUseCase_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getUseCase_Attribute_extend() const ;
			virtual std::shared_ptr<ecore::EReference> getUseCase_Attribute_extensionPoint() const ;
			virtual std::shared_ptr<ecore::EReference> getUseCase_Attribute_include() const ;
			virtual std::shared_ptr<ecore::EReference> getUseCase_Attribute_subject() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getUseCase_Operation_allIncludedUseCases() const ;
			virtual std::shared_ptr<ecore::EOperation> getUseCase_Operation_binary_associations_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getUseCase_Operation_cannot_include_self_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getUseCase_Operation_must_have_name_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getUseCase_Operation_no_association_to_use_case_EDiagnosticChain_EMap() const ;
			
			// End Class UseCase

			// Begin Class ValuePin
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getValuePin_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getValuePin_Attribute_value() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getValuePin_Operation_compatible_type_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getValuePin_Operation_no_incoming_edges_EDiagnosticChain_EMap() const ;
			
			// End Class ValuePin

			// Begin Class ValueSpecification
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getValueSpecification_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getValueSpecification_Attribute_owningSlot() const ;
			virtual std::shared_ptr<ecore::EReference> getValueSpecification_Attribute_valueSpecificationAction() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getValueSpecification_Operation_booleanValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getValueSpecification_Operation_integerValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getValueSpecification_Operation_isComputable() const ;
			virtual std::shared_ptr<ecore::EOperation> getValueSpecification_Operation_isNull() const ;
			virtual std::shared_ptr<ecore::EOperation> getValueSpecification_Operation_realValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getValueSpecification_Operation_stringValue() const ;
			virtual std::shared_ptr<ecore::EOperation> getValueSpecification_Operation_unlimitedValue() const ;
			
			// End Class ValueSpecification

			// Begin Class ValueSpecificationAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getValueSpecificationAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getValueSpecificationAction_Attribute_result() const ;
			virtual std::shared_ptr<ecore::EReference> getValueSpecificationAction_Attribute_value() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getValueSpecificationAction_Operation_compatible_type_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getValueSpecificationAction_Operation_multiplicity_EDiagnosticChain_EMap() const ;
			
			// End Class ValueSpecificationAction

			// Begin Class Variable
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getVariable_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getVariable_Attribute_activityScope() const ;
			virtual std::shared_ptr<ecore::EReference> getVariable_Attribute_scope() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getVariable_Operation_isAccessibleBy_Action() const ;
			
			// End Class Variable

			// Begin Class VariableAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getVariableAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getVariableAction_Attribute_variable() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getVariableAction_Operation_scope_of_variable_EDiagnosticChain_EMap() const ;
			
			// End Class VariableAction

			// Begin Class Vertex
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getVertex_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getVertex_Attribute_container() const ;
			virtual std::shared_ptr<ecore::EReference> getVertex_Attribute_incoming() const ;
			virtual std::shared_ptr<ecore::EReference> getVertex_Attribute_outgoing() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getVertex_Operation_containingStateMachine() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertex_Operation_getIncomings() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertex_Operation_getOutgoings() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertex_Operation_isContainedInRegion_Region() const ;
			virtual std::shared_ptr<ecore::EOperation> getVertex_Operation_isContainedInState_State() const ;
			
			// End Class Vertex

			// Begin Class WriteLinkAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getWriteLinkAction_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getWriteLinkAction_Operation_allow_access_EDiagnosticChain_EMap() const ;
			
			// End Class WriteLinkAction

			// Begin Class WriteStructuralFeatureAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getWriteStructuralFeatureAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getWriteStructuralFeatureAction_Attribute_result() const ;
			virtual std::shared_ptr<ecore::EReference> getWriteStructuralFeatureAction_Attribute_value() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getWriteStructuralFeatureAction_Operation_multiplicity_of_result_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getWriteStructuralFeatureAction_Operation_multiplicity_of_value_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getWriteStructuralFeatureAction_Operation_type_of_result_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getWriteStructuralFeatureAction_Operation_type_of_value_EDiagnosticChain_EMap() const ;
			
			// End Class WriteStructuralFeatureAction

			// Begin Class WriteVariableAction
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getWriteVariableAction_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getWriteVariableAction_Attribute_value() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getWriteVariableAction_Operation_multiplicity_EDiagnosticChain_EMap() const ;
			virtual std::shared_ptr<ecore::EOperation> getWriteVariableAction_Operation_value_type_EDiagnosticChain_EMap() const ;
			
			// End Class WriteVariableAction

			virtual std::shared_ptr<ecore::EEnum> getVisibilityKind_Class() const ;
			virtual std::shared_ptr<ecore::EEnum> getParameterDirectionKind_Class() const ;
			virtual std::shared_ptr<ecore::EEnum> getParameterEffectKind_Class() const ;
			virtual std::shared_ptr<ecore::EEnum> getCallConcurrencyKind_Class() const ;
			virtual std::shared_ptr<ecore::EEnum> getTransitionKind_Class() const ;
			virtual std::shared_ptr<ecore::EEnum> getPseudostateKind_Class() const ;
			virtual std::shared_ptr<ecore::EEnum> getAggregationKind_Class() const ;
			virtual std::shared_ptr<ecore::EEnum> getConnectorKind_Class() const ;
			virtual std::shared_ptr<ecore::EEnum> getObjectNodeOrderingKind_Class() const ;
			virtual std::shared_ptr<ecore::EEnum> getExpansionKind_Class() const ;
			virtual std::shared_ptr<ecore::EEnum> getMessageKind_Class() const ;
			virtual std::shared_ptr<ecore::EEnum> getMessageSort_Class() const ;
			virtual std::shared_ptr<ecore::EEnum> getInteractionOperatorKind_Class() const ;
			
			// SubPackages Getters
			

		private:
			std::shared_ptr<ecore::EClass> m_abstraction_Class = nullptr;std::shared_ptr<ecore::EClass> m_acceptCallAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_acceptEventAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_action_Class = nullptr;std::shared_ptr<ecore::EClass> m_actionExecutionSpecification_Class = nullptr;std::shared_ptr<ecore::EClass> m_actionInputPin_Class = nullptr;std::shared_ptr<ecore::EClass> m_activity_Class = nullptr;std::shared_ptr<ecore::EClass> m_activityContent_Class = nullptr;std::shared_ptr<ecore::EClass> m_activityEdge_Class = nullptr;std::shared_ptr<ecore::EClass> m_activityFinalNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_activityGroup_Class = nullptr;std::shared_ptr<ecore::EClass> m_activityNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_activityParameterNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_activityPartition_Class = nullptr;std::shared_ptr<ecore::EClass> m_actor_Class = nullptr;std::shared_ptr<ecore::EClass> m_addStructuralFeatureValueAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_addVariableValueAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_anyReceiveEvent_Class = nullptr;std::shared_ptr<ecore::EClass> m_argument_Class = nullptr;std::shared_ptr<ecore::EClass> m_artifact_Class = nullptr;std::shared_ptr<ecore::EClass> m_association_Class = nullptr;std::shared_ptr<ecore::EClass> m_associationClass_Class = nullptr;std::shared_ptr<ecore::EClass> m_behavior_Class = nullptr;std::shared_ptr<ecore::EClass> m_behaviorExecutionSpecification_Class = nullptr;std::shared_ptr<ecore::EClass> m_behavioralFeature_Class = nullptr;std::shared_ptr<ecore::EClass> m_behavioredClassifier_Class = nullptr;std::shared_ptr<ecore::EClass> m_broadcastSignalAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_callAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_callBehaviorAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_callEvent_Class = nullptr;std::shared_ptr<ecore::EClass> m_callOperationAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_centralBufferNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_changeEvent_Class = nullptr;std::shared_ptr<ecore::EClass> m_class_Class = nullptr;std::shared_ptr<ecore::EClass> m_classifier_Class = nullptr;std::shared_ptr<ecore::EClass> m_classifierTemplateParameter_Class = nullptr;std::shared_ptr<ecore::EClass> m_clause_Class = nullptr;std::shared_ptr<ecore::EClass> m_clearAssociationAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_clearStructuralFeatureAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_clearVariableAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_collaboration_Class = nullptr;std::shared_ptr<ecore::EClass> m_collaborationUse_Class = nullptr;std::shared_ptr<ecore::EClass> m_combinedFragment_Class = nullptr;std::shared_ptr<ecore::EClass> m_comment_Class = nullptr;std::shared_ptr<ecore::EClass> m_communicationPath_Class = nullptr;std::shared_ptr<ecore::EClass> m_component_Class = nullptr;std::shared_ptr<ecore::EClass> m_componentRealization_Class = nullptr;std::shared_ptr<ecore::EClass> m_conditionalNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_connectableElement_Class = nullptr;std::shared_ptr<ecore::EClass> m_connectableElementTemplateParameter_Class = nullptr;std::shared_ptr<ecore::EClass> m_connectionPointReference_Class = nullptr;std::shared_ptr<ecore::EClass> m_connector_Class = nullptr;std::shared_ptr<ecore::EClass> m_connectorEnd_Class = nullptr;std::shared_ptr<ecore::EClass> m_considerIgnoreFragment_Class = nullptr;std::shared_ptr<ecore::EClass> m_constraint_Class = nullptr;std::shared_ptr<ecore::EClass> m_continuation_Class = nullptr;std::shared_ptr<ecore::EClass> m_controlFlow_Class = nullptr;std::shared_ptr<ecore::EClass> m_controlNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_createLinkAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_createLinkObjectAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_createObjectAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_dataStoreNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_dataType_Class = nullptr;std::shared_ptr<ecore::EClass> m_decisionNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_dependency_Class = nullptr;std::shared_ptr<ecore::EClass> m_deployedArtifact_Class = nullptr;std::shared_ptr<ecore::EClass> m_deployment_Class = nullptr;std::shared_ptr<ecore::EClass> m_deploymentSpecification_Class = nullptr;std::shared_ptr<ecore::EClass> m_deploymentTarget_Class = nullptr;std::shared_ptr<ecore::EClass> m_destroyLinkAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_destroyObjectAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_destructionOccurrenceSpecification_Class = nullptr;std::shared_ptr<ecore::EClass> m_device_Class = nullptr;std::shared_ptr<ecore::EClass> m_directedRelationship_Class = nullptr;std::shared_ptr<ecore::EClass> m_duration_Class = nullptr;std::shared_ptr<ecore::EClass> m_durationConstraint_Class = nullptr;std::shared_ptr<ecore::EClass> m_durationInterval_Class = nullptr;std::shared_ptr<ecore::EClass> m_durationObservation_Class = nullptr;std::shared_ptr<ecore::EClass> m_element_Class = nullptr;std::shared_ptr<ecore::EClass> m_elementImport_Class = nullptr;std::shared_ptr<ecore::EClass> m_encapsulatedClassifier_Class = nullptr;std::shared_ptr<ecore::EClass> m_enumeration_Class = nullptr;std::shared_ptr<ecore::EClass> m_enumerationLiteral_Class = nullptr;std::shared_ptr<ecore::EClass> m_event_Class = nullptr;std::shared_ptr<ecore::EClass> m_exceptionHandler_Class = nullptr;std::shared_ptr<ecore::EClass> m_executableNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_executionEnvironment_Class = nullptr;std::shared_ptr<ecore::EClass> m_executionOccurrenceSpecification_Class = nullptr;std::shared_ptr<ecore::EClass> m_executionSpecification_Class = nullptr;std::shared_ptr<ecore::EClass> m_expansionNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_expansionRegion_Class = nullptr;std::shared_ptr<ecore::EClass> m_expression_Class = nullptr;std::shared_ptr<ecore::EClass> m_extend_Class = nullptr;std::shared_ptr<ecore::EClass> m_extension_Class = nullptr;std::shared_ptr<ecore::EClass> m_extensionEnd_Class = nullptr;std::shared_ptr<ecore::EClass> m_extensionPoint_Class = nullptr;std::shared_ptr<ecore::EClass> m_factory_Class = nullptr;std::shared_ptr<ecore::EClass> m_feature_Class = nullptr;std::shared_ptr<ecore::EClass> m_finalNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_finalState_Class = nullptr;std::shared_ptr<ecore::EClass> m_flowFinalNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_forkNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_functionBehavior_Class = nullptr;std::shared_ptr<ecore::EClass> m_gate_Class = nullptr;std::shared_ptr<ecore::EClass> m_generalOrdering_Class = nullptr;std::shared_ptr<ecore::EClass> m_generalization_Class = nullptr;std::shared_ptr<ecore::EClass> m_generalizationSet_Class = nullptr;std::shared_ptr<ecore::EClass> m_image_Class = nullptr;std::shared_ptr<ecore::EClass> m_include_Class = nullptr;std::shared_ptr<ecore::EClass> m_informationFlow_Class = nullptr;std::shared_ptr<ecore::EClass> m_informationItem_Class = nullptr;std::shared_ptr<ecore::EClass> m_initialNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_inputPin_Class = nullptr;std::shared_ptr<ecore::EClass> m_instanceSpecification_Class = nullptr;std::shared_ptr<ecore::EClass> m_instanceValue_Class = nullptr;std::shared_ptr<ecore::EClass> m_interaction_Class = nullptr;std::shared_ptr<ecore::EClass> m_interactionConstraint_Class = nullptr;std::shared_ptr<ecore::EClass> m_interactionFragment_Class = nullptr;std::shared_ptr<ecore::EClass> m_interactionOperand_Class = nullptr;std::shared_ptr<ecore::EClass> m_interactionUse_Class = nullptr;std::shared_ptr<ecore::EClass> m_interface_Class = nullptr;std::shared_ptr<ecore::EClass> m_interfaceRealization_Class = nullptr;std::shared_ptr<ecore::EClass> m_interruptibleActivityRegion_Class = nullptr;std::shared_ptr<ecore::EClass> m_interval_Class = nullptr;std::shared_ptr<ecore::EClass> m_intervalConstraint_Class = nullptr;std::shared_ptr<ecore::EClass> m_invocationAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_joinNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_lifeline_Class = nullptr;std::shared_ptr<ecore::EClass> m_linkAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_linkEndCreationData_Class = nullptr;std::shared_ptr<ecore::EClass> m_linkEndData_Class = nullptr;std::shared_ptr<ecore::EClass> m_linkEndDestructionData_Class = nullptr;std::shared_ptr<ecore::EClass> m_literalBoolean_Class = nullptr;std::shared_ptr<ecore::EClass> m_literalInteger_Class = nullptr;std::shared_ptr<ecore::EClass> m_literalNull_Class = nullptr;std::shared_ptr<ecore::EClass> m_literalReal_Class = nullptr;std::shared_ptr<ecore::EClass> m_literalSpecification_Class = nullptr;std::shared_ptr<ecore::EClass> m_literalString_Class = nullptr;std::shared_ptr<ecore::EClass> m_literalUnlimitedNatural_Class = nullptr;std::shared_ptr<ecore::EClass> m_loopNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_manifestation_Class = nullptr;std::shared_ptr<ecore::EClass> m_mergeNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_message_Class = nullptr;std::shared_ptr<ecore::EClass> m_messageEnd_Class = nullptr;std::shared_ptr<ecore::EClass> m_messageEvent_Class = nullptr;std::shared_ptr<ecore::EClass> m_messageOccurrenceSpecification_Class = nullptr;std::shared_ptr<ecore::EClass> m_model_Class = nullptr;std::shared_ptr<ecore::EClass> m_multiplicityElement_Class = nullptr;std::shared_ptr<ecore::EClass> m_namedElement_Class = nullptr;std::shared_ptr<ecore::EClass> m_namespace_Class = nullptr;std::shared_ptr<ecore::EClass> m_node_Class = nullptr;std::shared_ptr<ecore::EClass> m_object_Class = nullptr;std::shared_ptr<ecore::EClass> m_objectFlow_Class = nullptr;std::shared_ptr<ecore::EClass> m_objectNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_observation_Class = nullptr;std::shared_ptr<ecore::EClass> m_occurrenceSpecification_Class = nullptr;std::shared_ptr<ecore::EClass> m_opaqueAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_opaqueBehavior_Class = nullptr;std::shared_ptr<ecore::EClass> m_opaqueExpression_Class = nullptr;std::shared_ptr<ecore::EClass> m_operation_Class = nullptr;std::shared_ptr<ecore::EClass> m_operationTemplateParameter_Class = nullptr;std::shared_ptr<ecore::EClass> m_outputPin_Class = nullptr;std::shared_ptr<ecore::EClass> m_package_Class = nullptr;std::shared_ptr<ecore::EClass> m_packageImport_Class = nullptr;std::shared_ptr<ecore::EClass> m_packageMerge_Class = nullptr;std::shared_ptr<ecore::EClass> m_packageableElement_Class = nullptr;std::shared_ptr<ecore::EClass> m_parameter_Class = nullptr;std::shared_ptr<ecore::EClass> m_parameterSet_Class = nullptr;std::shared_ptr<ecore::EClass> m_parameterableElement_Class = nullptr;std::shared_ptr<ecore::EClass> m_partDecomposition_Class = nullptr;std::shared_ptr<ecore::EClass> m_pin_Class = nullptr;std::shared_ptr<ecore::EClass> m_port_Class = nullptr;std::shared_ptr<ecore::EClass> m_primitiveType_Class = nullptr;std::shared_ptr<ecore::EClass> m_profile_Class = nullptr;std::shared_ptr<ecore::EClass> m_profileApplication_Class = nullptr;std::shared_ptr<ecore::EClass> m_property_Class = nullptr;std::shared_ptr<ecore::EClass> m_protocolConformance_Class = nullptr;std::shared_ptr<ecore::EClass> m_protocolStateMachine_Class = nullptr;std::shared_ptr<ecore::EClass> m_protocolTransition_Class = nullptr;std::shared_ptr<ecore::EClass> m_pseudostate_Class = nullptr;std::shared_ptr<ecore::EClass> m_qualifierValue_Class = nullptr;std::shared_ptr<ecore::EClass> m_raiseExceptionAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_readExtentAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_readIsClassifiedObjectAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_readLinkAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_readLinkObjectEndAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_readLinkObjectEndQualifierAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_readSelfAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_readStructuralFeatureAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_readVariableAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_realization_Class = nullptr;std::shared_ptr<ecore::EClass> m_reception_Class = nullptr;std::shared_ptr<ecore::EClass> m_reclassifyObjectAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_redefinableElement_Class = nullptr;std::shared_ptr<ecore::EClass> m_redefinableTemplateSignature_Class = nullptr;std::shared_ptr<ecore::EClass> m_reduceAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_region_Class = nullptr;std::shared_ptr<ecore::EClass> m_relationship_Class = nullptr;std::shared_ptr<ecore::EClass> m_removeStructuralFeatureValueAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_removeVariableValueAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_replyAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_sendObjectAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_sendSignalAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_sequenceNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_signal_Class = nullptr;std::shared_ptr<ecore::EClass> m_signalEvent_Class = nullptr;std::shared_ptr<ecore::EClass> m_slot_Class = nullptr;std::shared_ptr<ecore::EClass> m_startClassifierBehaviorAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_startObjectBehaviorAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_state_Class = nullptr;std::shared_ptr<ecore::EClass> m_stateInvariant_Class = nullptr;std::shared_ptr<ecore::EClass> m_stateMachine_Class = nullptr;std::shared_ptr<ecore::EClass> m_stereotype_Class = nullptr;std::shared_ptr<ecore::EClass> m_stringExpression_Class = nullptr;std::shared_ptr<ecore::EClass> m_structuralFeature_Class = nullptr;std::shared_ptr<ecore::EClass> m_structuralFeatureAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_structuredActivityNode_Class = nullptr;std::shared_ptr<ecore::EClass> m_structuredClassifier_Class = nullptr;std::shared_ptr<ecore::EClass> m_substitution_Class = nullptr;std::shared_ptr<ecore::EClass> m_templateBinding_Class = nullptr;std::shared_ptr<ecore::EClass> m_templateParameter_Class = nullptr;std::shared_ptr<ecore::EClass> m_templateParameterSubstitution_Class = nullptr;std::shared_ptr<ecore::EClass> m_templateSignature_Class = nullptr;std::shared_ptr<ecore::EClass> m_templateableElement_Class = nullptr;std::shared_ptr<ecore::EClass> m_testIdentityAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_timeConstraint_Class = nullptr;std::shared_ptr<ecore::EClass> m_timeEvent_Class = nullptr;std::shared_ptr<ecore::EClass> m_timeExpression_Class = nullptr;std::shared_ptr<ecore::EClass> m_timeInterval_Class = nullptr;std::shared_ptr<ecore::EClass> m_timeObservation_Class = nullptr;std::shared_ptr<ecore::EClass> m_transition_Class = nullptr;std::shared_ptr<ecore::EClass> m_trigger_Class = nullptr;std::shared_ptr<ecore::EClass> m_type_Class = nullptr;std::shared_ptr<ecore::EClass> m_typedElement_Class = nullptr;std::shared_ptr<ecore::EClass> m_unmarshallAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_usage_Class = nullptr;std::shared_ptr<ecore::EClass> m_useCase_Class = nullptr;std::shared_ptr<ecore::EClass> m_valuePin_Class = nullptr;std::shared_ptr<ecore::EClass> m_valueSpecification_Class = nullptr;std::shared_ptr<ecore::EClass> m_valueSpecificationAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_variable_Class = nullptr;std::shared_ptr<ecore::EClass> m_variableAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_vertex_Class = nullptr;std::shared_ptr<ecore::EClass> m_writeLinkAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_writeStructuralFeatureAction_Class = nullptr;std::shared_ptr<ecore::EClass> m_writeVariableAction_Class = nullptr;
			std::shared_ptr<ecore::EEnum> m_aggregationKind_Class = nullptr;std::shared_ptr<ecore::EEnum> m_callConcurrencyKind_Class = nullptr;std::shared_ptr<ecore::EEnum> m_connectorKind_Class = nullptr;std::shared_ptr<ecore::EEnum> m_expansionKind_Class = nullptr;std::shared_ptr<ecore::EEnum> m_interactionOperatorKind_Class = nullptr;std::shared_ptr<ecore::EEnum> m_messageKind_Class = nullptr;std::shared_ptr<ecore::EEnum> m_messageSort_Class = nullptr;std::shared_ptr<ecore::EEnum> m_objectNodeOrderingKind_Class = nullptr;std::shared_ptr<ecore::EEnum> m_parameterDirectionKind_Class = nullptr;std::shared_ptr<ecore::EEnum> m_parameterEffectKind_Class = nullptr;std::shared_ptr<ecore::EEnum> m_pseudostateKind_Class = nullptr;std::shared_ptr<ecore::EEnum> m_transitionKind_Class = nullptr;std::shared_ptr<ecore::EEnum> m_visibilityKind_Class = nullptr;
			std::shared_ptr<ecore::EAttribute> m_package_Attribute_uRI = nullptr;std::shared_ptr<ecore::EAttribute> m_property_Attribute_aggregation = nullptr;std::shared_ptr<ecore::EAttribute> m_elementImport_Attribute_alias = nullptr;std::shared_ptr<ecore::EAttribute> m_classifierTemplateParameter_Attribute_allowSubstitutable = nullptr;std::shared_ptr<ecore::EAttribute> m_comment_Attribute_body = nullptr;std::shared_ptr<ecore::EAttribute> m_opaqueExpression_Attribute_body = nullptr;std::shared_ptr<ecore::EAttribute> m_opaqueAction_Attribute_body = nullptr;std::shared_ptr<ecore::EAttribute> m_opaqueBehavior_Attribute_body = nullptr;std::shared_ptr<ecore::EAttribute> m_behavioralFeature_Attribute_concurrency = nullptr;std::shared_ptr<ecore::EAttribute> m_image_Attribute_content = nullptr;std::shared_ptr<ecore::EAttribute> m_property_Attribute_default = nullptr;std::shared_ptr<ecore::EAttribute> m_parameter_Attribute_default = nullptr;std::shared_ptr<ecore::EAttribute> m_deploymentSpecification_Attribute_deploymentLocation = nullptr;std::shared_ptr<ecore::EAttribute> m_parameter_Attribute_direction = nullptr;std::shared_ptr<ecore::EAttribute> m_parameter_Attribute_effect = nullptr;std::shared_ptr<ecore::EAttribute> m_deploymentSpecification_Attribute_executionLocation = nullptr;std::shared_ptr<ecore::EAttribute> m_artifact_Attribute_fileName = nullptr;std::shared_ptr<ecore::EAttribute> m_durationConstraint_Attribute_firstEvent = nullptr;std::shared_ptr<ecore::EAttribute> m_durationObservation_Attribute_firstEvent = nullptr;std::shared_ptr<ecore::EAttribute> m_timeConstraint_Attribute_firstEvent = nullptr;std::shared_ptr<ecore::EAttribute> m_timeObservation_Attribute_firstEvent = nullptr;std::shared_ptr<ecore::EAttribute> m_image_Attribute_format = nullptr;std::shared_ptr<ecore::EAttribute> m_combinedFragment_Attribute_interactionOperator = nullptr;std::shared_ptr<ecore::EAttribute> m_classifier_Attribute_isAbstract = nullptr;std::shared_ptr<ecore::EAttribute> m_behavioralFeature_Attribute_isAbstract = nullptr;std::shared_ptr<ecore::EAttribute> m_class_Attribute_isActive = nullptr;std::shared_ptr<ecore::EAttribute> m_conditionalNode_Attribute_isAssured = nullptr;std::shared_ptr<ecore::EAttribute> m_port_Attribute_isBehavior = nullptr;std::shared_ptr<ecore::EAttribute> m_joinNode_Attribute_isCombineDuplicate = nullptr;std::shared_ptr<ecore::EAttribute> m_property_Attribute_isComposite = nullptr;std::shared_ptr<ecore::EAttribute> m_state_Attribute_isComposite = nullptr;std::shared_ptr<ecore::EAttribute> m_port_Attribute_isConjugated = nullptr;std::shared_ptr<ecore::EAttribute> m_pin_Attribute_isControl = nullptr;std::shared_ptr<ecore::EAttribute> m_objectNode_Attribute_isControlType = nullptr;std::shared_ptr<ecore::EAttribute> m_generalizationSet_Attribute_isCovering = nullptr;std::shared_ptr<ecore::EAttribute> m_association_Attribute_isDerived = nullptr;std::shared_ptr<ecore::EAttribute> m_property_Attribute_isDerived = nullptr;std::shared_ptr<ecore::EAttribute> m_property_Attribute_isDerivedUnion = nullptr;std::shared_ptr<ecore::EAttribute> m_linkEndDestructionData_Attribute_isDestroyDuplicates = nullptr;std::shared_ptr<ecore::EAttribute> m_destroyObjectAction_Attribute_isDestroyLinks = nullptr;std::shared_ptr<ecore::EAttribute> m_destroyObjectAction_Attribute_isDestroyOwnedObjects = nullptr;std::shared_ptr<ecore::EAttribute> m_conditionalNode_Attribute_isDeterminate = nullptr;std::shared_ptr<ecore::EAttribute> m_activityPartition_Attribute_isDimension = nullptr;std::shared_ptr<ecore::EAttribute> m_readIsClassifiedObjectAction_Attribute_isDirect = nullptr;std::shared_ptr<ecore::EAttribute> m_generalizationSet_Attribute_isDisjoint = nullptr;std::shared_ptr<ecore::EAttribute> m_parameter_Attribute_isException = nullptr;std::shared_ptr<ecore::EAttribute> m_activityPartition_Attribute_isExternal = nullptr;std::shared_ptr<ecore::EAttribute> m_classifier_Attribute_isFinalSpecialization = nullptr;std::shared_ptr<ecore::EAttribute> m_property_Attribute_isID = nullptr;std::shared_ptr<ecore::EAttribute> m_component_Attribute_isIndirectlyInstantiated = nullptr;std::shared_ptr<ecore::EAttribute> m_redefinableElement_Attribute_isLeaf = nullptr;std::shared_ptr<ecore::EAttribute> m_action_Attribute_isLocallyReentrant = nullptr;std::shared_ptr<ecore::EAttribute> m_objectFlow_Attribute_isMulticast = nullptr;std::shared_ptr<ecore::EAttribute> m_objectFlow_Attribute_isMultireceive = nullptr;std::shared_ptr<ecore::EAttribute> m_multiplicityElement_Attribute_isOrdered = nullptr;std::shared_ptr<ecore::EAttribute> m_operation_Attribute_isOrdered = nullptr;std::shared_ptr<ecore::EAttribute> m_reduceAction_Attribute_isOrdered = nullptr;std::shared_ptr<ecore::EAttribute> m_state_Attribute_isOrthogonal = nullptr;std::shared_ptr<ecore::EAttribute> m_operation_Attribute_isQuery = nullptr;std::shared_ptr<ecore::EAttribute> m_activity_Attribute_isReadOnly = nullptr;std::shared_ptr<ecore::EAttribute> m_structuralFeature_Attribute_isReadOnly = nullptr;std::shared_ptr<ecore::EAttribute> m_behavior_Attribute_isReentrant = nullptr;std::shared_ptr<ecore::EAttribute> m_timeEvent_Attribute_isRelative = nullptr;std::shared_ptr<ecore::EAttribute> m_removeStructuralFeatureValueAction_Attribute_isRemoveDuplicates = nullptr;std::shared_ptr<ecore::EAttribute> m_removeVariableValueAction_Attribute_isRemoveDuplicates = nullptr;std::shared_ptr<ecore::EAttribute> m_addStructuralFeatureValueAction_Attribute_isReplaceAll = nullptr;std::shared_ptr<ecore::EAttribute> m_addVariableValueAction_Attribute_isReplaceAll = nullptr;std::shared_ptr<ecore::EAttribute> m_linkEndCreationData_Attribute_isReplaceAll = nullptr;std::shared_ptr<ecore::EAttribute> m_reclassifyObjectAction_Attribute_isReplaceAll = nullptr;std::shared_ptr<ecore::EAttribute> m_extension_Attribute_isRequired = nullptr;std::shared_ptr<ecore::EAttribute> m_port_Attribute_isService = nullptr;std::shared_ptr<ecore::EAttribute> m_state_Attribute_isSimple = nullptr;std::shared_ptr<ecore::EAttribute> m_activity_Attribute_isSingleExecution = nullptr;std::shared_ptr<ecore::EAttribute> m_feature_Attribute_isStatic = nullptr;std::shared_ptr<ecore::EAttribute> m_parameter_Attribute_isStream = nullptr;std::shared_ptr<ecore::EAttribute> m_profileApplication_Attribute_isStrict = nullptr;std::shared_ptr<ecore::EAttribute> m_state_Attribute_isSubmachineState = nullptr;std::shared_ptr<ecore::EAttribute> m_generalization_Attribute_isSubstitutable = nullptr;std::shared_ptr<ecore::EAttribute> m_callAction_Attribute_isSynchronous = nullptr;std::shared_ptr<ecore::EAttribute> m_loopNode_Attribute_isTestedFirst = nullptr;std::shared_ptr<ecore::EAttribute> m_multiplicityElement_Attribute_isUnique = nullptr;std::shared_ptr<ecore::EAttribute> m_operation_Attribute_isUnique = nullptr;std::shared_ptr<ecore::EAttribute> m_acceptEventAction_Attribute_isUnmarshall = nullptr;std::shared_ptr<ecore::EAttribute> m_pseudostate_Attribute_kind = nullptr;std::shared_ptr<ecore::EAttribute> m_transition_Attribute_kind = nullptr;std::shared_ptr<ecore::EAttribute> m_connector_Attribute_kind = nullptr;std::shared_ptr<ecore::EAttribute> m_opaqueExpression_Attribute_language = nullptr;std::shared_ptr<ecore::EAttribute> m_opaqueAction_Attribute_language = nullptr;std::shared_ptr<ecore::EAttribute> m_opaqueBehavior_Attribute_language = nullptr;std::shared_ptr<ecore::EAttribute> m_image_Attribute_location = nullptr;std::shared_ptr<ecore::EAttribute> m_multiplicityElement_Attribute_lower = nullptr;std::shared_ptr<ecore::EAttribute> m_operation_Attribute_lower = nullptr;std::shared_ptr<ecore::EAttribute> m_message_Attribute_messageKind = nullptr;std::shared_ptr<ecore::EAttribute> m_message_Attribute_messageSort = nullptr;std::shared_ptr<ecore::EAttribute> m_expansionRegion_Attribute_mode = nullptr;std::shared_ptr<ecore::EAttribute> m_structuredActivityNode_Attribute_mustIsolate = nullptr;std::shared_ptr<ecore::EAttribute> m_namedElement_Attribute_name = nullptr;std::shared_ptr<ecore::EAttribute> m_argument_Attribute_name = nullptr;std::shared_ptr<ecore::EAttribute> m_objectNode_Attribute_ordering = nullptr;std::shared_ptr<ecore::EAttribute> m_namedElement_Attribute_qualifiedName = nullptr;std::shared_ptr<ecore::EAttribute> m_continuation_Attribute_setting = nullptr;std::shared_ptr<ecore::EAttribute> m_expression_Attribute_symbol = nullptr;std::shared_ptr<ecore::EAttribute> m_multiplicityElement_Attribute_upper = nullptr;std::shared_ptr<ecore::EAttribute> m_operation_Attribute_upper = nullptr;std::shared_ptr<ecore::EAttribute> m_literalBoolean_Attribute_value = nullptr;std::shared_ptr<ecore::EAttribute> m_literalInteger_Attribute_value = nullptr;std::shared_ptr<ecore::EAttribute> m_literalReal_Attribute_value = nullptr;std::shared_ptr<ecore::EAttribute> m_literalString_Attribute_value = nullptr;std::shared_ptr<ecore::EAttribute> m_literalUnlimitedNatural_Attribute_value = nullptr;std::shared_ptr<ecore::EAttribute> m_model_Attribute_viewpoint = nullptr;std::shared_ptr<ecore::EAttribute> m_namedElement_Attribute_visibility = nullptr;std::shared_ptr<ecore::EAttribute> m_elementImport_Attribute_visibility = nullptr;std::shared_ptr<ecore::EAttribute> m_packageImport_Attribute_visibility = nullptr;
			std::shared_ptr<ecore::EReference> m_componentRealization_Attribute_abstraction = nullptr;std::shared_ptr<ecore::EReference> m_inputPin_Attribute_action = nullptr;std::shared_ptr<ecore::EReference> m_outputPin_Attribute_action = nullptr;std::shared_ptr<ecore::EReference> m_interaction_Attribute_action = nullptr;std::shared_ptr<ecore::EReference> m_actionExecutionSpecification_Attribute_action = nullptr;std::shared_ptr<ecore::EReference> m_activityEdge_Attribute_activity = nullptr;std::shared_ptr<ecore::EReference> m_activityNode_Attribute_activity = nullptr;std::shared_ptr<ecore::EReference> m_variable_Attribute_activityScope = nullptr;std::shared_ptr<ecore::EReference> m_templateParameterSubstitution_Attribute_actual = nullptr;std::shared_ptr<ecore::EReference> m_interactionUse_Attribute_actualGate = nullptr;std::shared_ptr<ecore::EReference> m_inputPin_Attribute_addStructuralFeatureValueAction = nullptr;std::shared_ptr<ecore::EReference> m_include_Attribute_addition = nullptr;std::shared_ptr<ecore::EReference> m_generalOrdering_Attribute_after = nullptr;std::shared_ptr<ecore::EReference> m_comment_Attribute_annotatedElement = nullptr;std::shared_ptr<ecore::EReference> m_profileApplication_Attribute_appliedProfile = nullptr;std::shared_ptr<ecore::EReference> m_profileApplication_Attribute_applyingPackage = nullptr;std::shared_ptr<ecore::EReference> m_invocationAction_Attribute_argument = nullptr;std::shared_ptr<ecore::EReference> m_message_Attribute_argument = nullptr;std::shared_ptr<ecore::EReference> m_interactionUse_Attribute_argument = nullptr;std::shared_ptr<ecore::EReference> m_property_Attribute_association = nullptr;std::shared_ptr<ecore::EReference> m_clearAssociationAction_Attribute_association = nullptr;std::shared_ptr<ecore::EReference> m_property_Attribute_associationEnd = nullptr;std::shared_ptr<ecore::EReference> m_classifier_Attribute_attribute = nullptr;std::shared_ptr<ecore::EReference> m_generalOrdering_Attribute_before = nullptr;std::shared_ptr<ecore::EReference> m_opaqueExpression_Attribute_behavior = nullptr;std::shared_ptr<ecore::EReference> m_parameter_Attribute_behavior = nullptr;std::shared_ptr<ecore::EReference> m_callBehaviorAction_Attribute_behavior = nullptr;std::shared_ptr<ecore::EReference> m_behaviorExecutionSpecification_Attribute_behavior = nullptr;std::shared_ptr<ecore::EReference> m_behavior_Attribute_behavioredClassifier = nullptr;std::shared_ptr<ecore::EReference> m_clause_Attribute_body = nullptr;std::shared_ptr<ecore::EReference> m_operation_Attribute_bodyCondition = nullptr;std::shared_ptr<ecore::EReference> m_clause_Attribute_bodyOutput = nullptr;std::shared_ptr<ecore::EReference> m_loopNode_Attribute_bodyOutput = nullptr;std::shared_ptr<ecore::EReference> m_loopNode_Attribute_bodyPart = nullptr;std::shared_ptr<ecore::EReference> m_templateBinding_Attribute_boundElement = nullptr;std::shared_ptr<ecore::EReference> m_outputPin_Attribute_callAction = nullptr;std::shared_ptr<ecore::EReference> m_inputPin_Attribute_callOperationAction = nullptr;std::shared_ptr<ecore::EReference> m_combinedFragment_Attribute_cfragmentGate = nullptr;std::shared_ptr<ecore::EReference> m_changeEvent_Attribute_changeExpression = nullptr;std::shared_ptr<ecore::EReference> m_property_Attribute_class = nullptr;std::shared_ptr<ecore::EReference> m_operation_Attribute_class = nullptr;std::shared_ptr<ecore::EReference> m_instanceSpecification_Attribute_classifier = nullptr;std::shared_ptr<ecore::EReference> m_redefinableTemplateSignature_Attribute_classifier = nullptr;std::shared_ptr<ecore::EReference> m_createObjectAction_Attribute_classifier = nullptr;std::shared_ptr<ecore::EReference> m_readExtentAction_Attribute_classifier = nullptr;std::shared_ptr<ecore::EReference> m_readIsClassifiedObjectAction_Attribute_classifier = nullptr;std::shared_ptr<ecore::EReference> m_behavioredClassifier_Attribute_classifierBehavior = nullptr;std::shared_ptr<ecore::EReference> m_conditionalNode_Attribute_clause = nullptr;std::shared_ptr<ecore::EReference> m_outputPin_Attribute_clearStructuralFeatureAction = nullptr;std::shared_ptr<ecore::EReference> m_dependency_Attribute_client = nullptr;std::shared_ptr<ecore::EReference> m_namedElement_Attribute_clientDependency = nullptr;std::shared_ptr<ecore::EReference> m_collaboration_Attribute_collaborationRole = nullptr;std::shared_ptr<ecore::EReference> m_classifier_Attribute_collaborationUse = nullptr;std::shared_ptr<ecore::EReference> m_reduceAction_Attribute_collection = nullptr;std::shared_ptr<ecore::EReference> m_parameterSet_Attribute_condition = nullptr;std::shared_ptr<ecore::EReference> m_extend_Attribute_condition = nullptr;std::shared_ptr<ecore::EReference> m_deployment_Attribute_configuration = nullptr;std::shared_ptr<ecore::EReference> m_protocolStateMachine_Attribute_conformance = nullptr;std::shared_ptr<ecore::EReference> m_state_Attribute_connection = nullptr;std::shared_ptr<ecore::EReference> m_stateMachine_Attribute_connectionPoint = nullptr;std::shared_ptr<ecore::EReference> m_state_Attribute_connectionPoint = nullptr;std::shared_ptr<ecore::EReference> m_message_Attribute_connector = nullptr;std::shared_ptr<ecore::EReference> m_constraint_Attribute_constrainedElement = nullptr;std::shared_ptr<ecore::EReference> m_classifierTemplateParameter_Attribute_constrainingClassifier = nullptr;std::shared_ptr<ecore::EReference> m_activityGroup_Attribute_containedEdge = nullptr;std::shared_ptr<ecore::EReference> m_activityGroup_Attribute_containedNode = nullptr;std::shared_ptr<ecore::EReference> m_vertex_Attribute_container = nullptr;std::shared_ptr<ecore::EReference> m_transition_Attribute_container = nullptr;std::shared_ptr<ecore::EReference> m_behavior_Attribute_context = nullptr;std::shared_ptr<ecore::EReference> m_constraint_Attribute_context = nullptr;std::shared_ptr<ecore::EReference> m_action_Attribute_context = nullptr;std::shared_ptr<ecore::EReference> m_connector_Attribute_contract = nullptr;std::shared_ptr<ecore::EReference> m_substitution_Attribute_contract = nullptr;std::shared_ptr<ecore::EReference> m_interfaceRealization_Attribute_contract = nullptr;std::shared_ptr<ecore::EReference> m_informationFlow_Attribute_conveyed = nullptr;std::shared_ptr<ecore::EReference> m_interactionFragment_Attribute_covered = nullptr;std::shared_ptr<ecore::EReference> m_lifeline_Attribute_coveredBy = nullptr;std::shared_ptr<ecore::EReference> m_outputPin_Attribute_createObjectAction = nullptr;std::shared_ptr<ecore::EReference> m_property_Attribute_datatype = nullptr;std::shared_ptr<ecore::EReference> m_operation_Attribute_datatype = nullptr;std::shared_ptr<ecore::EReference> m_clause_Attribute_decider = nullptr;std::shared_ptr<ecore::EReference> m_loopNode_Attribute_decider = nullptr;std::shared_ptr<ecore::EReference> m_decisionNode_Attribute_decisionInput = nullptr;std::shared_ptr<ecore::EReference> m_decisionNode_Attribute_decisionInputFlow = nullptr;std::shared_ptr<ecore::EReference> m_lifeline_Attribute_decomposedAs = nullptr;std::shared_ptr<ecore::EReference> m_templateParameter_Attribute_default = nullptr;std::shared_ptr<ecore::EReference> m_property_Attribute_defaultValue = nullptr;std::shared_ptr<ecore::EReference> m_parameter_Attribute_defaultValue = nullptr;std::shared_ptr<ecore::EReference> m_state_Attribute_deferrableTrigger = nullptr;std::shared_ptr<ecore::EReference> m_connectorEnd_Attribute_definingEnd = nullptr;std::shared_ptr<ecore::EReference> m_slot_Attribute_definingFeature = nullptr;std::shared_ptr<ecore::EReference> m_deployment_Attribute_deployedArtifact = nullptr;std::shared_ptr<ecore::EReference> m_deploymentTarget_Attribute_deployedElement = nullptr;std::shared_ptr<ecore::EReference> m_deploymentTarget_Attribute_deployment = nullptr;std::shared_ptr<ecore::EReference> m_deploymentSpecification_Attribute_deployment = nullptr;std::shared_ptr<ecore::EReference> m_linkEndDestructionData_Attribute_destroyAt = nullptr;std::shared_ptr<ecore::EReference> m_inputPin_Attribute_destroyObjectAction = nullptr;std::shared_ptr<ecore::EReference> m_state_Attribute_doActivity = nullptr;std::shared_ptr<ecore::EReference> m_activity_Attribute_edge = nullptr;std::shared_ptr<ecore::EReference> m_activityPartition_Attribute_edge = nullptr;std::shared_ptr<ecore::EReference> m_structuredActivityNode_Attribute_edge = nullptr;std::shared_ptr<ecore::EReference> m_transition_Attribute_effect = nullptr;std::shared_ptr<ecore::EReference> m_namespace_Attribute_elementImport = nullptr;std::shared_ptr<ecore::EReference> m_interactionFragment_Attribute_enclosingInteraction = nullptr;std::shared_ptr<ecore::EReference> m_interactionFragment_Attribute_enclosingOperand = nullptr;std::shared_ptr<ecore::EReference> m_connectableElement_Attribute_end = nullptr;std::shared_ptr<ecore::EReference> m_connector_Attribute_end = nullptr;std::shared_ptr<ecore::EReference> m_linkEndData_Attribute_end = nullptr;std::shared_ptr<ecore::EReference> m_readLinkObjectEndAction_Attribute_end = nullptr;std::shared_ptr<ecore::EReference> m_linkAction_Attribute_endData = nullptr;std::shared_ptr<ecore::EReference> m_association_Attribute_endType = nullptr;std::shared_ptr<ecore::EReference> m_state_Attribute_entry = nullptr;std::shared_ptr<ecore::EReference> m_connectionPointReference_Attribute_entry = nullptr;std::shared_ptr<ecore::EReference> m_enumerationLiteral_Attribute_enumeration = nullptr;std::shared_ptr<ecore::EReference> m_trigger_Attribute_event = nullptr;std::shared_ptr<ecore::EReference> m_durationObservation_Attribute_event = nullptr;std::shared_ptr<ecore::EReference> m_timeObservation_Attribute_event = nullptr;std::shared_ptr<ecore::EReference> m_raiseExceptionAction_Attribute_exception = nullptr;std::shared_ptr<ecore::EReference> m_exceptionHandler_Attribute_exceptionInput = nullptr;std::shared_ptr<ecore::EReference> m_exceptionHandler_Attribute_exceptionType = nullptr;std::shared_ptr<ecore::EReference> m_sequenceNode_Attribute_executableNode = nullptr;std::shared_ptr<ecore::EReference> m_executionOccurrenceSpecification_Attribute_execution = nullptr;std::shared_ptr<ecore::EReference> m_state_Attribute_exit = nullptr;std::shared_ptr<ecore::EReference> m_connectionPointReference_Attribute_exit = nullptr;std::shared_ptr<ecore::EReference> m_timeExpression_Attribute_expr = nullptr;std::shared_ptr<ecore::EReference> m_duration_Attribute_expr = nullptr;std::shared_ptr<ecore::EReference> m_useCase_Attribute_extend = nullptr;std::shared_ptr<ecore::EReference> m_extend_Attribute_extendedCase = nullptr;std::shared_ptr<ecore::EReference> m_region_Attribute_extendedRegion = nullptr;std::shared_ptr<ecore::EReference> m_redefinableTemplateSignature_Attribute_extendedSignature = nullptr;std::shared_ptr<ecore::EReference> m_stateMachine_Attribute_extendedStateMachine = nullptr;std::shared_ptr<ecore::EReference> m_class_Attribute_extension = nullptr;std::shared_ptr<ecore::EReference> m_extend_Attribute_extension = nullptr;std::shared_ptr<ecore::EReference> m_extend_Attribute_extensionLocation = nullptr;std::shared_ptr<ecore::EReference> m_useCase_Attribute_extensionPoint = nullptr;std::shared_ptr<ecore::EReference> m_classifier_Attribute_feature = nullptr;std::shared_ptr<ecore::EReference> m_feature_Attribute_featuringClassifier = nullptr;std::shared_ptr<ecore::EReference> m_executionSpecification_Attribute_finish = nullptr;std::shared_ptr<ecore::EReference> m_testIdentityAction_Attribute_first = nullptr;std::shared_ptr<ecore::EReference> m_templateParameterSubstitution_Attribute_formal = nullptr;std::shared_ptr<ecore::EReference> m_interaction_Attribute_formalGate = nullptr;std::shared_ptr<ecore::EReference> m_interaction_Attribute_fragment = nullptr;std::shared_ptr<ecore::EReference> m_interactionOperand_Attribute_fragment = nullptr;std::shared_ptr<ecore::EReference> m_actionInputPin_Attribute_fromAction = nullptr;std::shared_ptr<ecore::EReference> m_classifier_Attribute_general = nullptr;std::shared_ptr<ecore::EReference> m_generalization_Attribute_general = nullptr;std::shared_ptr<ecore::EReference> m_protocolConformance_Attribute_generalMachine = nullptr;std::shared_ptr<ecore::EReference> m_interactionFragment_Attribute_generalOrdering = nullptr;std::shared_ptr<ecore::EReference> m_classifier_Attribute_generalization = nullptr;std::shared_ptr<ecore::EReference> m_generalizationSet_Attribute_generalization = nullptr;std::shared_ptr<ecore::EReference> m_generalization_Attribute_generalizationSet = nullptr;std::shared_ptr<ecore::EReference> m_activity_Attribute_group = nullptr;std::shared_ptr<ecore::EReference> m_transition_Attribute_guard = nullptr;std::shared_ptr<ecore::EReference> m_activityEdge_Attribute_guard = nullptr;std::shared_ptr<ecore::EReference> m_interactionOperand_Attribute_guard = nullptr;std::shared_ptr<ecore::EReference> m_executableNode_Attribute_handler = nullptr;std::shared_ptr<ecore::EReference> m_exceptionHandler_Attribute_handlerBody = nullptr;std::shared_ptr<ecore::EReference> m_stereotype_Attribute_icon = nullptr;std::shared_ptr<ecore::EReference> m_interfaceRealization_Attribute_implementingClassifier = nullptr;std::shared_ptr<ecore::EReference> m_elementImport_Attribute_importedElement = nullptr;std::shared_ptr<ecore::EReference> m_namespace_Attribute_importedMember = nullptr;std::shared_ptr<ecore::EReference> m_packageImport_Attribute_importedPackage = nullptr;std::shared_ptr<ecore::EReference> m_elementImport_Attribute_importingNamespace = nullptr;std::shared_ptr<ecore::EReference> m_packageImport_Attribute_importingNamespace = nullptr;std::shared_ptr<ecore::EReference> m_activityGroup_Attribute_inActivity = nullptr;std::shared_ptr<ecore::EReference> m_activityEdge_Attribute_inGroup = nullptr;std::shared_ptr<ecore::EReference> m_activityNode_Attribute_inGroup = nullptr;std::shared_ptr<ecore::EReference> m_activityNode_Attribute_inInterruptibleRegion = nullptr;std::shared_ptr<ecore::EReference> m_activityEdge_Attribute_inPartition = nullptr;std::shared_ptr<ecore::EReference> m_activityNode_Attribute_inPartition = nullptr;std::shared_ptr<ecore::EReference> m_objectNode_Attribute_inState = nullptr;std::shared_ptr<ecore::EReference> m_activityEdge_Attribute_inStructuredNode = nullptr;std::shared_ptr<ecore::EReference> m_activityNode_Attribute_inStructuredNode = nullptr;std::shared_ptr<ecore::EReference> m_useCase_Attribute_include = nullptr;std::shared_ptr<ecore::EReference> m_include_Attribute_includingCase = nullptr;std::shared_ptr<ecore::EReference> m_vertex_Attribute_incoming = nullptr;std::shared_ptr<ecore::EReference> m_activityNode_Attribute_incoming = nullptr;std::shared_ptr<ecore::EReference> m_informationFlow_Attribute_informationSource = nullptr;std::shared_ptr<ecore::EReference> m_informationFlow_Attribute_informationTarget = nullptr;std::shared_ptr<ecore::EReference> m_classifier_Attribute_inheritedMember = nullptr;std::shared_ptr<ecore::EReference> m_redefinableTemplateSignature_Attribute_inheritedParameter = nullptr;std::shared_ptr<ecore::EReference> m_action_Attribute_input = nullptr;std::shared_ptr<ecore::EReference> m_expansionRegion_Attribute_inputElement = nullptr;std::shared_ptr<ecore::EReference> m_linkAction_Attribute_inputValue = nullptr;std::shared_ptr<ecore::EReference> m_opaqueAction_Attribute_inputValue = nullptr;std::shared_ptr<ecore::EReference> m_addStructuralFeatureValueAction_Attribute_insertAt = nullptr;std::shared_ptr<ecore::EReference> m_addVariableValueAction_Attribute_insertAt = nullptr;std::shared_ptr<ecore::EReference> m_linkEndCreationData_Attribute_insertAt = nullptr;std::shared_ptr<ecore::EReference> m_instanceValue_Attribute_instance = nullptr;std::shared_ptr<ecore::EReference> m_message_Attribute_interaction = nullptr;std::shared_ptr<ecore::EReference> m_lifeline_Attribute_interaction = nullptr;std::shared_ptr<ecore::EReference> m_property_Attribute_interface = nullptr;std::shared_ptr<ecore::EReference> m_operation_Attribute_interface = nullptr;std::shared_ptr<ecore::EReference> m_behavioredClassifier_Attribute_interfaceRealization = nullptr;std::shared_ptr<ecore::EReference> m_interruptibleActivityRegion_Attribute_interruptingEdge = nullptr;std::shared_ptr<ecore::EReference> m_activityEdge_Attribute_interrupts = nullptr;std::shared_ptr<ecore::EReference> m_stateInvariant_Attribute_invariant = nullptr;std::shared_ptr<ecore::EReference> m_inputPin_Attribute_invocationAction = nullptr;std::shared_ptr<ecore::EReference> m_joinNode_Attribute_joinSpec = nullptr;std::shared_ptr<ecore::EReference> m_interaction_Attribute_lifeline = nullptr;std::shared_ptr<ecore::EReference> m_action_Attribute_localPostcondition = nullptr;std::shared_ptr<ecore::EReference> m_action_Attribute_localPrecondition = nullptr;std::shared_ptr<ecore::EReference> m_deployment_Attribute_location = nullptr;std::shared_ptr<ecore::EReference> m_loopNode_Attribute_loopVariable = nullptr;std::shared_ptr<ecore::EReference> m_loopNode_Attribute_loopVariableInput = nullptr;std::shared_ptr<ecore::EReference> m_multiplicityElement_Attribute_lowerValue = nullptr;std::shared_ptr<ecore::EReference> m_artifact_Attribute_manifestation = nullptr;std::shared_ptr<ecore::EReference> m_abstraction_Attribute_mapping = nullptr;std::shared_ptr<ecore::EReference> m_interval_Attribute_max = nullptr;std::shared_ptr<ecore::EReference> m_interactionConstraint_Attribute_maxint = nullptr;std::shared_ptr<ecore::EReference> m_namespace_Attribute_member = nullptr;std::shared_ptr<ecore::EReference> m_association_Attribute_memberEnd = nullptr;std::shared_ptr<ecore::EReference> m_packageMerge_Attribute_mergedPackage = nullptr;std::shared_ptr<ecore::EReference> m_interaction_Attribute_message = nullptr;std::shared_ptr<ecore::EReference> m_messageEnd_Attribute_message = nullptr;std::shared_ptr<ecore::EReference> m_considerIgnoreFragment_Attribute_message = nullptr;std::shared_ptr<ecore::EReference> m_extension_Attribute_metaclass = nullptr;std::shared_ptr<ecore::EReference> m_profile_Attribute_metaclassReference = nullptr;std::shared_ptr<ecore::EReference> m_profile_Attribute_metamodelReference = nullptr;std::shared_ptr<ecore::EReference> m_behavioralFeature_Attribute_method = nullptr;std::shared_ptr<ecore::EReference> m_interval_Attribute_min = nullptr;std::shared_ptr<ecore::EReference> m_interactionConstraint_Attribute_minint = nullptr;std::shared_ptr<ecore::EReference> m_namedElement_Attribute_nameExpression = nullptr;std::shared_ptr<ecore::EReference> m_namedElement_Attribute_namespace = nullptr;std::shared_ptr<ecore::EReference> m_association_Attribute_navigableOwnedEnd = nullptr;std::shared_ptr<ecore::EReference> m_artifact_Attribute_nestedArtifact = nullptr;std::shared_ptr<ecore::EReference> m_class_Attribute_nestedClassifier = nullptr;std::shared_ptr<ecore::EReference> m_interface_Attribute_nestedClassifier = nullptr;std::shared_ptr<ecore::EReference> m_node_Attribute_nestedNode = nullptr;std::shared_ptr<ecore::EReference> m_package_Attribute_nestedPackage = nullptr;std::shared_ptr<ecore::EReference> m_package_Attribute_nestingPackage = nullptr;std::shared_ptr<ecore::EReference> m_reclassifyObjectAction_Attribute_newClassifier = nullptr;std::shared_ptr<ecore::EReference> m_activity_Attribute_node = nullptr;std::shared_ptr<ecore::EReference> m_activityPartition_Attribute_node = nullptr;std::shared_ptr<ecore::EReference> m_interruptibleActivityRegion_Attribute_node = nullptr;std::shared_ptr<ecore::EReference> m_structuredActivityNode_Attribute_node = nullptr;std::shared_ptr<ecore::EReference> m_structuralFeatureAction_Attribute_object = nullptr;std::shared_ptr<ecore::EReference> m_clearAssociationAction_Attribute_object = nullptr;std::shared_ptr<ecore::EReference> m_readIsClassifiedObjectAction_Attribute_object = nullptr;std::shared_ptr<ecore::EReference> m_readLinkObjectEndAction_Attribute_object = nullptr;std::shared_ptr<ecore::EReference> m_readLinkObjectEndQualifierAction_Attribute_object = nullptr;std::shared_ptr<ecore::EReference> m_reclassifyObjectAction_Attribute_object = nullptr;std::shared_ptr<ecore::EReference> m_startClassifierBehaviorAction_Attribute_object = nullptr;std::shared_ptr<ecore::EReference> m_startObjectBehaviorAction_Attribute_object = nullptr;std::shared_ptr<ecore::EReference> m_unmarshallAction_Attribute_object = nullptr;std::shared_ptr<ecore::EReference> m_timeExpression_Attribute_observation = nullptr;std::shared_ptr<ecore::EReference> m_duration_Attribute_observation = nullptr;std::shared_ptr<ecore::EReference> m_reclassifyObjectAction_Attribute_oldClassifier = nullptr;std::shared_ptr<ecore::EReference> m_invocationAction_Attribute_onPort = nullptr;std::shared_ptr<ecore::EReference> m_expression_Attribute_operand = nullptr;std::shared_ptr<ecore::EReference> m_combinedFragment_Attribute_operand = nullptr;std::shared_ptr<ecore::EReference> m_parameter_Attribute_operation = nullptr;std::shared_ptr<ecore::EReference> m_callOperationAction_Attribute_operation = nullptr;std::shared_ptr<ecore::EReference> m_callEvent_Attribute_operation = nullptr;std::shared_ptr<ecore::EReference> m_property_Attribute_opposite = nullptr;std::shared_ptr<ecore::EReference> m_vertex_Attribute_outgoing = nullptr;std::shared_ptr<ecore::EReference> m_activityNode_Attribute_outgoing = nullptr;std::shared_ptr<ecore::EReference> m_action_Attribute_output = nullptr;std::shared_ptr<ecore::EReference> m_expansionRegion_Attribute_outputElement = nullptr;std::shared_ptr<ecore::EReference> m_opaqueAction_Attribute_outputValue = nullptr;std::shared_ptr<ecore::EReference> m_templateParameterSubstitution_Attribute_ownedActual = nullptr;std::shared_ptr<ecore::EReference> m_artifact_Attribute_ownedAttribute = nullptr;std::shared_ptr<ecore::EReference> m_dataType_Attribute_ownedAttribute = nullptr;std::shared_ptr<ecore::EReference> m_interface_Attribute_ownedAttribute = nullptr;std::shared_ptr<ecore::EReference> m_signal_Attribute_ownedAttribute = nullptr;std::shared_ptr<ecore::EReference> m_structuredClassifier_Attribute_ownedAttribute = nullptr;std::shared_ptr<ecore::EReference> m_behavioredClassifier_Attribute_ownedBehavior = nullptr;std::shared_ptr<ecore::EReference> m_element_Attribute_ownedComment = nullptr;std::shared_ptr<ecore::EReference> m_structuredClassifier_Attribute_ownedConnector = nullptr;std::shared_ptr<ecore::EReference> m_templateParameter_Attribute_ownedDefault = nullptr;std::shared_ptr<ecore::EReference> m_element_Attribute_ownedElement = nullptr;std::shared_ptr<ecore::EReference> m_association_Attribute_ownedEnd = nullptr;std::shared_ptr<ecore::EReference> m_activity_Attribute_ownedGroup = nullptr;std::shared_ptr<ecore::EReference> m_enumeration_Attribute_ownedLiteral = nullptr;std::shared_ptr<ecore::EReference> m_namespace_Attribute_ownedMember = nullptr;std::shared_ptr<ecore::EReference> m_activity_Attribute_ownedNode = nullptr;std::shared_ptr<ecore::EReference> m_class_Attribute_ownedOperation = nullptr;std::shared_ptr<ecore::EReference> m_artifact_Attribute_ownedOperation = nullptr;std::shared_ptr<ecore::EReference> m_dataType_Attribute_ownedOperation = nullptr;std::shared_ptr<ecore::EReference> m_interface_Attribute_ownedOperation = nullptr;std::shared_ptr<ecore::EReference> m_behavior_Attribute_ownedParameter = nullptr;std::shared_ptr<ecore::EReference> m_templateSignature_Attribute_ownedParameter = nullptr;std::shared_ptr<ecore::EReference> m_behavioralFeature_Attribute_ownedParameter = nullptr;std::shared_ptr<ecore::EReference> m_behavior_Attribute_ownedParameterSet = nullptr;std::shared_ptr<ecore::EReference> m_behavioralFeature_Attribute_ownedParameterSet = nullptr;std::shared_ptr<ecore::EReference> m_templateParameter_Attribute_ownedParameteredElement = nullptr;std::shared_ptr<ecore::EReference> m_encapsulatedClassifier_Attribute_ownedPort = nullptr;std::shared_ptr<ecore::EReference> m_class_Attribute_ownedReception = nullptr;std::shared_ptr<ecore::EReference> m_interface_Attribute_ownedReception = nullptr;std::shared_ptr<ecore::EReference> m_namespace_Attribute_ownedRule = nullptr;std::shared_ptr<ecore::EReference> m_package_Attribute_ownedStereotype = nullptr;std::shared_ptr<ecore::EReference> m_templateableElement_Attribute_ownedTemplateSignature = nullptr;std::shared_ptr<ecore::EReference> m_package_Attribute_ownedType = nullptr;std::shared_ptr<ecore::EReference> m_classifier_Attribute_ownedUseCase = nullptr;std::shared_ptr<ecore::EReference> m_element_Attribute_owner = nullptr;std::shared_ptr<ecore::EReference> m_property_Attribute_owningAssociation = nullptr;std::shared_ptr<ecore::EReference> m_stringExpression_Attribute_owningExpression = nullptr;std::shared_ptr<ecore::EReference> m_slot_Attribute_owningInstance = nullptr;std::shared_ptr<ecore::EReference> m_packageableElement_Attribute_owningPackage = nullptr;std::shared_ptr<ecore::EReference> m_valueSpecification_Attribute_owningSlot = nullptr;std::shared_ptr<ecore::EReference> m_parameterableElement_Attribute_owningTemplateParameter = nullptr;std::shared_ptr<ecore::EReference> m_type_Attribute_package = nullptr;std::shared_ptr<ecore::EReference> m_namespace_Attribute_packageImport = nullptr;std::shared_ptr<ecore::EReference> m_package_Attribute_packageMerge = nullptr;std::shared_ptr<ecore::EReference> m_package_Attribute_packagedElement = nullptr;std::shared_ptr<ecore::EReference> m_component_Attribute_packagedElement = nullptr;std::shared_ptr<ecore::EReference> m_templateSignature_Attribute_parameter = nullptr;std::shared_ptr<ecore::EReference> m_parameterSet_Attribute_parameter = nullptr;std::shared_ptr<ecore::EReference> m_activityParameterNode_Attribute_parameter = nullptr;std::shared_ptr<ecore::EReference> m_parameter_Attribute_parameterSet = nullptr;std::shared_ptr<ecore::EReference> m_templateBinding_Attribute_parameterSubstitution = nullptr;std::shared_ptr<ecore::EReference> m_templateParameter_Attribute_parameteredElement = nullptr;std::shared_ptr<ecore::EReference> m_structuredClassifier_Attribute_part = nullptr;std::shared_ptr<ecore::EReference> m_connectorEnd_Attribute_partWithPort = nullptr;std::shared_ptr<ecore::EReference> m_activity_Attribute_partition = nullptr;std::shared_ptr<ecore::EReference> m_trigger_Attribute_port = nullptr;std::shared_ptr<ecore::EReference> m_protocolTransition_Attribute_postCondition = nullptr;std::shared_ptr<ecore::EReference> m_behavior_Attribute_postcondition = nullptr;std::shared_ptr<ecore::EReference> m_operation_Attribute_postcondition = nullptr;std::shared_ptr<ecore::EReference> m_generalizationSet_Attribute_powertype = nullptr;std::shared_ptr<ecore::EReference> m_classifier_Attribute_powertypeExtent = nullptr;std::shared_ptr<ecore::EReference> m_protocolTransition_Attribute_preCondition = nullptr;std::shared_ptr<ecore::EReference> m_behavior_Attribute_precondition = nullptr;std::shared_ptr<ecore::EReference> m_operation_Attribute_precondition = nullptr;std::shared_ptr<ecore::EReference> m_clause_Attribute_predecessorClause = nullptr;std::shared_ptr<ecore::EReference> m_stereotype_Attribute_profile = nullptr;std::shared_ptr<ecore::EReference> m_package_Attribute_profileApplication = nullptr;std::shared_ptr<ecore::EReference> m_exceptionHandler_Attribute_protectedNode = nullptr;std::shared_ptr<ecore::EReference> m_interface_Attribute_protocol = nullptr;std::shared_ptr<ecore::EReference> m_port_Attribute_protocol = nullptr;std::shared_ptr<ecore::EReference> m_port_Attribute_provided = nullptr;std::shared_ptr<ecore::EReference> m_component_Attribute_provided = nullptr;std::shared_ptr<ecore::EReference> m_property_Attribute_qualifier = nullptr;std::shared_ptr<ecore::EReference> m_linkEndData_Attribute_qualifier = nullptr;std::shared_ptr<ecore::EReference> m_qualifierValue_Attribute_qualifier = nullptr;std::shared_ptr<ecore::EReference> m_readLinkObjectEndQualifierAction_Attribute_qualifier = nullptr;std::shared_ptr<ecore::EReference> m_behavioralFeature_Attribute_raisedException = nullptr;std::shared_ptr<ecore::EReference> m_outputPin_Attribute_readSelfAction = nullptr;std::shared_ptr<ecore::EReference> m_outputPin_Attribute_readStructuralFeatureAction = nullptr;std::shared_ptr<ecore::EReference> m_informationFlow_Attribute_realization = nullptr;std::shared_ptr<ecore::EReference> m_component_Attribute_realization = nullptr;std::shared_ptr<ecore::EReference> m_informationFlow_Attribute_realizingActivityEdge = nullptr;std::shared_ptr<ecore::EReference> m_componentRealization_Attribute_realizingClassifier = nullptr;std::shared_ptr<ecore::EReference> m_informationFlow_Attribute_realizingConnector = nullptr;std::shared_ptr<ecore::EReference> m_informationFlow_Attribute_realizingMessage = nullptr;std::shared_ptr<ecore::EReference> m_message_Attribute_receiveEvent = nullptr;std::shared_ptr<ecore::EReference> m_packageMerge_Attribute_receivingPackage = nullptr;std::shared_ptr<ecore::EReference> m_behavior_Attribute_redefinedBehavior = nullptr;std::shared_ptr<ecore::EReference> m_classifier_Attribute_redefinedClassifier = nullptr;std::shared_ptr<ecore::EReference> m_connector_Attribute_redefinedConnector = nullptr;std::shared_ptr<ecore::EReference> m_activityEdge_Attribute_redefinedEdge = nullptr;std::shared_ptr<ecore::EReference> m_redefinableElement_Attribute_redefinedElement = nullptr;std::shared_ptr<ecore::EReference> m_interface_Attribute_redefinedInterface = nullptr;std::shared_ptr<ecore::EReference> m_activityNode_Attribute_redefinedNode = nullptr;std::shared_ptr<ecore::EReference> m_operation_Attribute_redefinedOperation = nullptr;std::shared_ptr<ecore::EReference> m_port_Attribute_redefinedPort = nullptr;std::shared_ptr<ecore::EReference> m_property_Attribute_redefinedProperty = nullptr;std::shared_ptr<ecore::EReference> m_state_Attribute_redefinedState = nullptr;std::shared_ptr<ecore::EReference> m_transition_Attribute_redefinedTransition = nullptr;std::shared_ptr<ecore::EReference> m_redefinableElement_Attribute_redefinitionContext = nullptr;std::shared_ptr<ecore::EReference> m_reduceAction_Attribute_reducer = nullptr;std::shared_ptr<ecore::EReference> m_protocolTransition_Attribute_referred = nullptr;std::shared_ptr<ecore::EReference> m_interactionUse_Attribute_refersTo = nullptr;std::shared_ptr<ecore::EReference> m_stateMachine_Attribute_region = nullptr;std::shared_ptr<ecore::EReference> m_state_Attribute_region = nullptr;std::shared_ptr<ecore::EReference> m_expansionNode_Attribute_regionAsInput = nullptr;std::shared_ptr<ecore::EReference> m_expansionNode_Attribute_regionAsOutput = nullptr;std::shared_ptr<ecore::EReference> m_relationship_Attribute_relatedElement = nullptr;std::shared_ptr<ecore::EReference> m_removeStructuralFeatureValueAction_Attribute_removeAt = nullptr;std::shared_ptr<ecore::EReference> m_removeVariableValueAction_Attribute_removeAt = nullptr;std::shared_ptr<ecore::EReference> m_replyAction_Attribute_replyToCall = nullptr;std::shared_ptr<ecore::EReference> m_replyAction_Attribute_replyValue = nullptr;std::shared_ptr<ecore::EReference> m_classifier_Attribute_representation = nullptr;std::shared_ptr<ecore::EReference> m_informationItem_Attribute_represented = nullptr;std::shared_ptr<ecore::EReference> m_activityPartition_Attribute_represents = nullptr;std::shared_ptr<ecore::EReference> m_lifeline_Attribute_represents = nullptr;std::shared_ptr<ecore::EReference> m_sendObjectAction_Attribute_request = nullptr;std::shared_ptr<ecore::EReference> m_port_Attribute_required = nullptr;std::shared_ptr<ecore::EReference> m_component_Attribute_required = nullptr;std::shared_ptr<ecore::EReference> m_opaqueExpression_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_valueSpecificationAction_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_writeStructuralFeatureAction_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_acceptEventAction_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_callAction_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_clearStructuralFeatureAction_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_conditionalNode_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_createLinkObjectAction_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_createObjectAction_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_loopNode_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_readExtentAction_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_readIsClassifiedObjectAction_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_readLinkAction_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_readLinkObjectEndAction_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_readLinkObjectEndQualifierAction_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_readSelfAction_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_readStructuralFeatureAction_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_readVariableAction_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_reduceAction_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_testIdentityAction_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_unmarshallAction_Attribute_result = nullptr;std::shared_ptr<ecore::EReference> m_acceptCallAction_Attribute_returnInformation = nullptr;std::shared_ptr<ecore::EReference> m_replyAction_Attribute_returnInformation = nullptr;std::shared_ptr<ecore::EReference> m_interactionUse_Attribute_returnValue = nullptr;std::shared_ptr<ecore::EReference> m_interactionUse_Attribute_returnValueRecipient = nullptr;std::shared_ptr<ecore::EReference> m_connectorEnd_Attribute_role = nullptr;std::shared_ptr<ecore::EReference> m_structuredClassifier_Attribute_role = nullptr;std::shared_ptr<ecore::EReference> m_collaborationUse_Attribute_roleBinding = nullptr;std::shared_ptr<ecore::EReference> m_variable_Attribute_scope = nullptr;std::shared_ptr<ecore::EReference> m_testIdentityAction_Attribute_second = nullptr;std::shared_ptr<ecore::EReference> m_objectNode_Attribute_selection = nullptr;std::shared_ptr<ecore::EReference> m_objectFlow_Attribute_selection = nullptr;std::shared_ptr<ecore::EReference> m_lifeline_Attribute_selector = nullptr;std::shared_ptr<ecore::EReference> m_message_Attribute_sendEvent = nullptr;std::shared_ptr<ecore::EReference> m_loopNode_Attribute_setupPart = nullptr;std::shared_ptr<ecore::EReference> m_reception_Attribute_signal = nullptr;std::shared_ptr<ecore::EReference> m_broadcastSignalAction_Attribute_signal = nullptr;std::shared_ptr<ecore::EReference> m_sendSignalAction_Attribute_signal = nullptr;std::shared_ptr<ecore::EReference> m_signalEvent_Attribute_signal = nullptr;std::shared_ptr<ecore::EReference> m_templateParameter_Attribute_signature = nullptr;std::shared_ptr<ecore::EReference> m_templateBinding_Attribute_signature = nullptr;std::shared_ptr<ecore::EReference> m_message_Attribute_signature = nullptr;std::shared_ptr<ecore::EReference> m_instanceSpecification_Attribute_slot = nullptr;std::shared_ptr<ecore::EReference> m_directedRelationship_Attribute_source = nullptr;std::shared_ptr<ecore::EReference> m_transition_Attribute_source = nullptr;std::shared_ptr<ecore::EReference> m_activityEdge_Attribute_source = nullptr;std::shared_ptr<ecore::EReference> m_generalization_Attribute_specific = nullptr;std::shared_ptr<ecore::EReference> m_protocolConformance_Attribute_specificMachine = nullptr;std::shared_ptr<ecore::EReference> m_behavior_Attribute_specification = nullptr;std::shared_ptr<ecore::EReference> m_constraint_Attribute_specification = nullptr;std::shared_ptr<ecore::EReference> m_instanceSpecification_Attribute_specification = nullptr;std::shared_ptr<ecore::EReference> m_executionSpecification_Attribute_start = nullptr;std::shared_ptr<ecore::EReference> m_pseudostate_Attribute_state = nullptr;std::shared_ptr<ecore::EReference> m_region_Attribute_state = nullptr;std::shared_ptr<ecore::EReference> m_connectionPointReference_Attribute_state = nullptr;std::shared_ptr<ecore::EReference> m_state_Attribute_stateInvariant = nullptr;std::shared_ptr<ecore::EReference> m_pseudostate_Attribute_stateMachine = nullptr;std::shared_ptr<ecore::EReference> m_region_Attribute_stateMachine = nullptr;std::shared_ptr<ecore::EReference> m_structuralFeatureAction_Attribute_structuralFeature = nullptr;std::shared_ptr<ecore::EReference> m_inputPin_Attribute_structuralFeatureAction = nullptr;std::shared_ptr<ecore::EReference> m_activity_Attribute_structuredNode = nullptr;std::shared_ptr<ecore::EReference> m_structuredActivityNode_Attribute_structuredNodeInput = nullptr;std::shared_ptr<ecore::EReference> m_structuredActivityNode_Attribute_structuredNodeOutput = nullptr;std::shared_ptr<ecore::EReference> m_stringExpression_Attribute_subExpression = nullptr;std::shared_ptr<ecore::EReference> m_activityGroup_Attribute_subgroup = nullptr;std::shared_ptr<ecore::EReference> m_useCase_Attribute_subject = nullptr;std::shared_ptr<ecore::EReference> m_state_Attribute_submachine = nullptr;std::shared_ptr<ecore::EReference> m_stateMachine_Attribute_submachineState = nullptr;std::shared_ptr<ecore::EReference> m_activityPartition_Attribute_subpartition = nullptr;std::shared_ptr<ecore::EReference> m_property_Attribute_subsettedProperty = nullptr;std::shared_ptr<ecore::EReference> m_substitution_Attribute_substitutingClassifier = nullptr;std::shared_ptr<ecore::EReference> m_classifier_Attribute_substitution = nullptr;std::shared_ptr<ecore::EReference> m_region_Attribute_subvertex = nullptr;std::shared_ptr<ecore::EReference> m_clause_Attribute_successorClause = nullptr;std::shared_ptr<ecore::EReference> m_class_Attribute_superClass = nullptr;std::shared_ptr<ecore::EReference> m_activityGroup_Attribute_superGroup = nullptr;std::shared_ptr<ecore::EReference> m_activityPartition_Attribute_superPartition = nullptr;std::shared_ptr<ecore::EReference> m_dependency_Attribute_supplier = nullptr;std::shared_ptr<ecore::EReference> m_directedRelationship_Attribute_target = nullptr;std::shared_ptr<ecore::EReference> m_transition_Attribute_target = nullptr;std::shared_ptr<ecore::EReference> m_activityEdge_Attribute_target = nullptr;std::shared_ptr<ecore::EReference> m_callOperationAction_Attribute_target = nullptr;std::shared_ptr<ecore::EReference> m_destroyObjectAction_Attribute_target = nullptr;std::shared_ptr<ecore::EReference> m_sendObjectAction_Attribute_target = nullptr;std::shared_ptr<ecore::EReference> m_sendSignalAction_Attribute_target = nullptr;std::shared_ptr<ecore::EReference> m_templateSignature_Attribute_template = nullptr;std::shared_ptr<ecore::EReference> m_templateableElement_Attribute_templateBinding = nullptr;std::shared_ptr<ecore::EReference> m_templateParameterSubstitution_Attribute_templateBinding = nullptr;std::shared_ptr<ecore::EReference> m_parameterableElement_Attribute_templateParameter = nullptr;std::shared_ptr<ecore::EReference> m_clause_Attribute_test = nullptr;std::shared_ptr<ecore::EReference> m_loopNode_Attribute_test = nullptr;std::shared_ptr<ecore::EReference> m_occurrenceSpecification_Attribute_toAfter = nullptr;std::shared_ptr<ecore::EReference> m_occurrenceSpecification_Attribute_toBefore = nullptr;std::shared_ptr<ecore::EReference> m_objectFlow_Attribute_transformation = nullptr;std::shared_ptr<ecore::EReference> m_region_Attribute_transition = nullptr;std::shared_ptr<ecore::EReference> m_transition_Attribute_trigger = nullptr;std::shared_ptr<ecore::EReference> m_acceptEventAction_Attribute_trigger = nullptr;std::shared_ptr<ecore::EReference> m_typedElement_Attribute_type = nullptr;std::shared_ptr<ecore::EReference> m_operation_Attribute_type = nullptr;std::shared_ptr<ecore::EReference> m_collaborationUse_Attribute_type = nullptr;std::shared_ptr<ecore::EReference> m_connector_Attribute_type = nullptr;std::shared_ptr<ecore::EReference> m_unmarshallAction_Attribute_unmarshallType = nullptr;std::shared_ptr<ecore::EReference> m_objectNode_Attribute_upperBound = nullptr;std::shared_ptr<ecore::EReference> m_multiplicityElement_Attribute_upperValue = nullptr;std::shared_ptr<ecore::EReference> m_classifier_Attribute_useCase = nullptr;std::shared_ptr<ecore::EReference> m_extensionPoint_Attribute_useCase = nullptr;std::shared_ptr<ecore::EReference> m_manifestation_Attribute_utilizedElement = nullptr;std::shared_ptr<ecore::EReference> m_slot_Attribute_value = nullptr;std::shared_ptr<ecore::EReference> m_valueSpecificationAction_Attribute_value = nullptr;std::shared_ptr<ecore::EReference> m_linkEndData_Attribute_value = nullptr;std::shared_ptr<ecore::EReference> m_qualifierValue_Attribute_value = nullptr;std::shared_ptr<ecore::EReference> m_writeStructuralFeatureAction_Attribute_value = nullptr;std::shared_ptr<ecore::EReference> m_writeVariableAction_Attribute_value = nullptr;std::shared_ptr<ecore::EReference> m_valuePin_Attribute_value = nullptr;std::shared_ptr<ecore::EReference> m_argument_Attribute_value = nullptr;std::shared_ptr<ecore::EReference> m_valueSpecification_Attribute_valueSpecificationAction = nullptr;std::shared_ptr<ecore::EReference> m_outputPin_Attribute_valueSpecificationAction = nullptr;std::shared_ptr<ecore::EReference> m_activity_Attribute_variable = nullptr;std::shared_ptr<ecore::EReference> m_structuredActivityNode_Attribute_variable = nullptr;std::shared_ptr<ecore::EReference> m_variableAction_Attribute_variable = nullptr;std::shared_ptr<ecore::EReference> m_activityEdge_Attribute_weight = nullptr;std::shared_ptr<ecore::EReference> m_timeEvent_Attribute_when = nullptr;std::shared_ptr<ecore::EReference> m_inputPin_Attribute_writeStructuralFeatureAction = nullptr;std::shared_ptr<ecore::EReference> m_outputPin_Attribute_writeStructuralFeatureAction = nullptr;
			std::shared_ptr<ecore::EOperation> m_stateMachine_Operation_lCA_Vertex_Vertex = nullptr;std::shared_ptr<ecore::EOperation> m_stateMachine_Operation_lCAState_Vertex_Vertex = nullptr;std::shared_ptr<ecore::EOperation> m_behavioralFeature_Operation_abstract_no_method_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_actionExecutionSpecification_Operation_action_referenced_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_gate_Operation_actual_gate_distinguishable_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_gate_Operation_actual_gate_matched_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_classifierTemplateParameter_Operation_actual_is_classifier_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_addKeyword_String = nullptr;std::shared_ptr<ecore::EOperation> m_extensionEnd_Operation_aggregation_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_action_Operation_allActions = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_allApplicableStereotypes = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_allAttributes = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_allFeatures = nullptr;std::shared_ptr<ecore::EOperation> m_useCase_Operation_allIncludedUseCases = nullptr;std::shared_ptr<ecore::EOperation> m_namedElement_Operation_allNamespaces = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_allOwnedElements = nullptr;std::shared_ptr<ecore::EOperation> m_action_Operation_allOwnedNodes = nullptr;std::shared_ptr<ecore::EOperation> m_namedElement_Operation_allOwningPackages = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_allParents = nullptr;std::shared_ptr<ecore::EOperation> m_linkEndData_Operation_allPins = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_allRealizedInterfaces = nullptr;std::shared_ptr<ecore::EOperation> m_structuredClassifier_Operation_allRoles = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_allSlottableFeatures = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_allUsedInterfaces = nullptr;std::shared_ptr<ecore::EOperation> m_interactionUse_Operation_all_lifelines_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_writeLinkAction_Operation_allow_access_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_stateMachine_Operation_ancestor_Vertex_Vertex = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_applyProfile_Profile = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_applyStereotype_Stereotype = nullptr;std::shared_ptr<ecore::EOperation> m_callAction_Operation_argument_pins_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_message_Operation_arguments_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_interactionUse_Operation_arguments_are_constants_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_interactionUse_Operation_arguments_correspond_to_parameters_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_protocolTransition_Operation_associated_actions_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_linkAction_Operation_association = nullptr;std::shared_ptr<ecore::EOperation> m_stereotype_Operation_associationEndOwnership_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_createLinkObjectAction_Operation_association_class_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_association_Operation_association_ends_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_createLinkAction_Operation_association_not_abstract_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkObjectEndAction_Operation_association_of_association_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkObjectEndQualifierAction_Operation_association_of_association_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_actor_Operation_associations_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_partDecomposition_Operation_assume_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_operation_Operation_at_most_one_return_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_stereotype_Operation_base_property_multiplicity_multiple_extension_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_stereotype_Operation_base_property_multiplicity_single_extension_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_stereotype_Operation_base_property_upper_bound_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_port_Operation_basicProvided = nullptr;std::shared_ptr<ecore::EOperation> m_port_Operation_basicRequired = nullptr;std::shared_ptr<ecore::EOperation> m_startObjectBehaviorAction_Operation_behavior = nullptr;std::shared_ptr<ecore::EOperation> m_behavior_Operation_behavioredClassifier_Element = nullptr;std::shared_ptr<ecore::EOperation> m_region_Operation_belongsToPSM = nullptr;std::shared_ptr<ecore::EOperation> m_protocolTransition_Operation_belongs_to_psm_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_stereotype_Operation_binaryAssociationsOnly_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_association_Operation_binary_associations_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_useCase_Operation_binary_associations_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_binding_to_attribute_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_clause_Operation_body_output_pins_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_loopNode_Operation_body_output_pins_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_valueSpecification_Operation_booleanValue = nullptr;std::shared_ptr<ecore::EOperation> m_readIsClassifiedObjectAction_Operation_boolean_result_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_constraint_Operation_boolean_value_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_combinedFragment_Operation_break__EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_associationClass_Operation_cannot_be_defined_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_message_Operation_cannot_cross_boundaries_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_namespace_Operation_cannot_import_ownedMembers_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_namespace_Operation_cannot_import_self_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_useCase_Operation_cannot_include_self_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_finalState_Operation_cannot_reference_submachine_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_pseudostate_Operation_choice_vertex_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_behavioredClassifier_Operation_class_behavior_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_stateMachine_Operation_classifier_context_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_createObjectAction_Operation_classifier_not_abstract_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_reclassifyObjectAction_Operation_classifier_not_abstract_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_createObjectAction_Operation_classifier_not_association_class_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_conditionalNode_Operation_clause_no_predecessor_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_collaborationUse_Operation_client_elements_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_partDecomposition_Operation_commutativity_of_decomposition_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_multiplicityElement_Operation_compatibleWith_MultiplicityElement = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkAction_Operation_compatible_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readVariableAction_Operation_compatible_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_valueSpecificationAction_Operation_compatible_type_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_valuePin_Operation_compatible_type_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_objectFlow_Operation_compatible_types_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_state_Operation_composite_states_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_acceptEventAction_Operation_conforming_type_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_type_Operation_conformsTo_Type = nullptr;std::shared_ptr<ecore::EOperation> m_stateMachine_Operation_connection_points_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_parameter_Operation_connector_end_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_collaborationUse_Operation_connectors_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_combinedFragment_Operation_consider_and_ignore_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_considerIgnoreFragment_Operation_consider_or_ignore_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_classifierTemplateParameter_Operation_constraining_classifiers_constrain_args_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_classifierTemplateParameter_Operation_constraining_classifiers_constrain_parametered_element_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readSelfAction_Operation_contained_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_container = nullptr;std::shared_ptr<ecore::EOperation> m_activityContent_Operation_containingActivity = nullptr;std::shared_ptr<ecore::EOperation> m_action_Operation_containingBehavior = nullptr;std::shared_ptr<ecore::EOperation> m_stereotype_Operation_containingProfile = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_containingProfile = nullptr;std::shared_ptr<ecore::EOperation> m_vertex_Operation_containingStateMachine = nullptr;std::shared_ptr<ecore::EOperation> m_region_Operation_containingStateMachine = nullptr;std::shared_ptr<ecore::EOperation> m_transition_Operation_containingStateMachine = nullptr;std::shared_ptr<ecore::EOperation> m_stateMachine_Operation_context_classifier_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_initialNode_Operation_control_edges_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_pin_Operation_control_pins_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_informationFlow_Operation_convey_classifiers_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_profile_Operation_create_Classifier = nullptr;std::shared_ptr<ecore::EOperation> m_factory_Operation_create_Class = nullptr;std::shared_ptr<ecore::EOperation> m_type_Operation_createAssociation_Boolean_UnlimitedNatural = nullptr;std::shared_ptr<ecore::EOperation> m_node_Operation_createCommunicationPath_Boolean_UnlimitedNatural = nullptr;std::shared_ptr<ecore::EOperation> m_namedElement_Operation_createDependency_NamedElement = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_createEAnnotation_String = nullptr;std::shared_ptr<ecore::EOperation> m_namespace_Operation_createElementImport_PackageableElement_VisibilityKind = nullptr;std::shared_ptr<ecore::EOperation> m_stereotype_Operation_createExtension_Class_Boolean = nullptr;std::shared_ptr<ecore::EOperation> m_stereotype_Operation_createIcon_String = nullptr;std::shared_ptr<ecore::EOperation> m_stereotype_Operation_createIcon_String_String = nullptr;std::shared_ptr<ecore::EOperation> m_artifact_Operation_createOwnedAttribute_String_UnlimitedNatural = nullptr;std::shared_ptr<ecore::EOperation> m_dataType_Operation_createOwnedAttribute_String_UnlimitedNatural = nullptr;std::shared_ptr<ecore::EOperation> m_interface_Operation_createOwnedAttribute_String_UnlimitedNatural = nullptr;std::shared_ptr<ecore::EOperation> m_signal_Operation_createOwnedAttribute_String_UnlimitedNatural = nullptr;std::shared_ptr<ecore::EOperation> m_structuredClassifier_Operation_createOwnedAttribute_String_UnlimitedNatural = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_createOwnedClass_String_Boolean = nullptr;std::shared_ptr<ecore::EOperation> m_component_Operation_createOwnedClass_String_Boolean = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_createOwnedEnumeration_String = nullptr;std::shared_ptr<ecore::EOperation> m_component_Operation_createOwnedEnumeration_String = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_createOwnedInterface_String = nullptr;std::shared_ptr<ecore::EOperation> m_component_Operation_createOwnedInterface_String = nullptr;std::shared_ptr<ecore::EOperation> m_class_Operation_createOwnedOperation_String_Type = nullptr;std::shared_ptr<ecore::EOperation> m_artifact_Operation_createOwnedOperation_String_Type = nullptr;std::shared_ptr<ecore::EOperation> m_dataType_Operation_createOwnedOperation_String_Type = nullptr;std::shared_ptr<ecore::EOperation> m_interface_Operation_createOwnedOperation_String_Type = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_createOwnedPrimitiveType_String = nullptr;std::shared_ptr<ecore::EOperation> m_component_Operation_createOwnedPrimitiveType_String = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_createOwnedStereotype_String_Boolean = nullptr;std::shared_ptr<ecore::EOperation> m_namespace_Operation_createPackageImport_Package_VisibilityKind = nullptr;std::shared_ptr<ecore::EOperation> m_behavioralFeature_Operation_createReturnResult_String_Type = nullptr;std::shared_ptr<ecore::EOperation> m_namedElement_Operation_createUsage_NamedElement = nullptr;std::shared_ptr<ecore::EOperation> m_clause_Operation_decider_output_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_decisionNode_Operation_decision_input_flow_incoming_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_region_Operation_deep_history_vertex_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_protocolStateMachine_Operation_deep_or_shallow_history_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_port_Operation_default_value_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_profile_Operation_define = nullptr;std::shared_ptr<ecore::EOperation> m_profile_Operation_define_EMap_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_instanceSpecification_Operation_defining_feature_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_deploymentSpecification_Operation_deployed_elements_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_instanceSpecification_Operation_deployment_artifact_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_deployment_target_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_deploymentSpecification_Operation_deployment_target_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_instanceSpecification_Operation_deployment_target_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_derived_union_is_derived_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_derived_union_is_read_only_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_state_Operation_destinations_or_sources_of_transitions_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_destroy = nullptr;std::shared_ptr<ecore::EOperation> m_linkEndDestructionData_Operation_destroyAt_pin_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_activityPartition_Operation_dimension_not_contained_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_directlyRealizedInterfaces = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_directlyUsedInterfaces = nullptr;std::shared_ptr<ecore::EOperation> m_associationClass_Operation_disjoint_attributes_ends_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_interactionConstraint_Operation_dynamic_variables_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_exceptionHandler_Operation_edge_source_target_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_structuredActivityNode_Operation_edges_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_decisionNode_Operation_edges_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_forkNode_Operation_edges_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_mergeNode_Operation_edges_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_elements_public_or_private_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_port_Operation_encapsulated_owner_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_messageEnd_Operation_enclosingFragment = nullptr;std::shared_ptr<ecore::EOperation> m_linkEndData_Operation_end_object_input_pin_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_association_Operation_ends_must_be_typed_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkObjectEndAction_Operation_ends_of_association_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkObjectEndQualifierAction_Operation_ends_of_association_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_protocolStateMachine_Operation_entry_exit_do_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_state_Operation_entry_or_exit_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_connectionPointReference_Operation_entry_pseudostates_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_replyAction_Operation_event_on_reply_to_call_trigger_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_collaborationUse_Operation_every_role_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_exceptionHandler_Operation_exception_input_type_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_namespace_Operation_excludeCollisions_PackageableElement = nullptr;std::shared_ptr<ecore::EOperation> m_conditionalNode_Operation_executable_nodes_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_loopNode_Operation_executable_nodes_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_connectionPointReference_Operation_exit_pseudostates_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_extend_Operation_extension_points_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_behavior_Operation_feature_of_context_classifier_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_durationConstraint_Operation_first_event_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_durationObservation_Operation_first_event_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_continuation_Operation_first_or_last_interaction_fragment_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_transition_Operation_fork_segment_guards_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_transition_Operation_fork_segment_state_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_pseudostate_Operation_fork_vertex_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_gate_Operation_formal_gate_distinguishable_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_interactionUse_Operation_gates_match_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_generalizationSet_Operation_generalization_same_classifier_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_stereotype_Operation_generalize_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_object_Operation_get_Property = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_getAllAppliedProfiles = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_getAllAttributes = nullptr;std::shared_ptr<ecore::EOperation> m_stereotype_Operation_getAllExtendedMetaclasses = nullptr;std::shared_ptr<ecore::EOperation> m_behavioredClassifier_Operation_getAllImplementedInterfaces = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_getAllOperations = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_getAllProfileApplications = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_getAllUsedInterfaces = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getApplicableStereotype_String = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getApplicableStereotypes = nullptr;std::shared_ptr<ecore::EOperation> m_profileApplication_Operation_getAppliedDefinition = nullptr;std::shared_ptr<ecore::EOperation> m_profileApplication_Operation_getAppliedDefinition_NamedElement = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_getAppliedProfile_String = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_getAppliedProfile_String_Boolean = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_getAppliedProfiles = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getAppliedStereotype_String = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getAppliedStereotypes = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getAppliedSubstereotype_Stereotype_String = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getAppliedSubstereotypes_Stereotype = nullptr;std::shared_ptr<ecore::EOperation> m_type_Operation_getAssociations = nullptr;std::shared_ptr<ecore::EOperation> m_enumerationLiteral_Operation_getClassifier = nullptr;std::shared_ptr<ecore::EOperation> m_enumerationLiteral_Operation_getClassifiers = nullptr;std::shared_ptr<ecore::EOperation> m_namedElement_Operation_getClientDependencies = nullptr;std::shared_ptr<ecore::EOperation> m_node_Operation_getCommunicationPaths = nullptr;std::shared_ptr<ecore::EOperation> m_behavior_Operation_getContext = nullptr;std::shared_ptr<ecore::EOperation> m_action_Operation_getContext = nullptr;std::shared_ptr<ecore::EOperation> m_occurrenceSpecification_Operation_getCovered = nullptr;std::shared_ptr<ecore::EOperation> m_connectorEnd_Operation_getDefiningEnd = nullptr;std::shared_ptr<ecore::EOperation> m_stereotype_Operation_getDefinition = nullptr;std::shared_ptr<ecore::EOperation> m_profile_Operation_getDefinition = nullptr;std::shared_ptr<ecore::EOperation> m_profile_Operation_getDefinition_NamedElement = nullptr;std::shared_ptr<ecore::EOperation> m_deploymentTarget_Operation_getDeployedElements = nullptr;std::shared_ptr<ecore::EOperation> m_association_Operation_getEndTypes = nullptr;std::shared_ptr<ecore::EOperation> m_connectableElement_Operation_getEnds = nullptr;std::shared_ptr<ecore::EOperation> m_stereotype_Operation_getExtendedMetaclasses = nullptr;std::shared_ptr<ecore::EOperation> m_class_Operation_getExtensions = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_getGenerals = nullptr;std::shared_ptr<ecore::EOperation> m_behavioredClassifier_Operation_getImplementedInterfaces = nullptr;std::shared_ptr<ecore::EOperation> m_namespace_Operation_getImportedElements = nullptr;std::shared_ptr<ecore::EOperation> m_namespace_Operation_getImportedMembers = nullptr;std::shared_ptr<ecore::EOperation> m_namespace_Operation_getImportedPackages = nullptr;std::shared_ptr<ecore::EOperation> m_vertex_Operation_getIncomings = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_getInheritedMembers = nullptr;std::shared_ptr<ecore::EOperation> m_redefinableTemplateSignature_Operation_getInheritedParameters = nullptr;std::shared_ptr<ecore::EOperation> m_stereotype_Operation_getKeyword = nullptr;std::shared_ptr<ecore::EOperation> m_stereotype_Operation_getKeyword_Boolean = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getKeywords = nullptr;std::shared_ptr<ecore::EOperation> m_connector_Operation_getKind = nullptr;std::shared_ptr<ecore::EOperation> m_namedElement_Operation_getLabel = nullptr;std::shared_ptr<ecore::EOperation> m_namedElement_Operation_getLabel_Boolean = nullptr;std::shared_ptr<ecore::EOperation> m_operation_Operation_getLower = nullptr;std::shared_ptr<ecore::EOperation> m_message_Operation_getMessageKind = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getMetaClass = nullptr;std::shared_ptr<ecore::EOperation> m_extension_Operation_getMetaclass = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getModel = nullptr;std::shared_ptr<ecore::EOperation> m_elementImport_Operation_getName = nullptr;std::shared_ptr<ecore::EOperation> m_gate_Operation_getName = nullptr;std::shared_ptr<ecore::EOperation> m_namespace_Operation_getNamesOfMember_NamedElement = nullptr;std::shared_ptr<ecore::EOperation> m_namedElement_Operation_getNamespace = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getNearestPackage = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_getNestedPackages = nullptr;std::shared_ptr<ecore::EOperation> m_gate_Operation_getOperand = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_getOperation_String_Type = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_getOperation_String_Boolean = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_getOperations = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_getOpposite = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_getOtherEnd = nullptr;std::shared_ptr<ecore::EOperation> m_vertex_Operation_getOutgoings = nullptr;std::shared_ptr<ecore::EOperation> m_profile_Operation_getOwnedExtensions_Boolean = nullptr;std::shared_ptr<ecore::EOperation> m_namespace_Operation_getOwnedMembers = nullptr;std::shared_ptr<ecore::EOperation> m_encapsulatedClassifier_Operation_getOwnedPorts = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_getOwnedStereotypes = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_getOwnedTypes = nullptr;std::shared_ptr<ecore::EOperation> m_structuredClassifier_Operation_getParts = nullptr;std::shared_ptr<ecore::EOperation> m_stereotype_Operation_getProfile = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_getProfileApplication_Profile = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_getProfileApplication_Profile_Boolean = nullptr;std::shared_ptr<ecore::EOperation> m_port_Operation_getProvideds = nullptr;std::shared_ptr<ecore::EOperation> m_component_Operation_getProvideds = nullptr;std::shared_ptr<ecore::EOperation> m_namedElement_Operation_getQualifiedName = nullptr;std::shared_ptr<ecore::EOperation> m_profile_Operation_getReferencedMetaclasses = nullptr;std::shared_ptr<ecore::EOperation> m_profile_Operation_getReferencedMetamodels = nullptr;std::shared_ptr<ecore::EOperation> m_protocolTransition_Operation_getReferreds = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getRelationships = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getRelationships_EClass = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getRequiredStereotype_String = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getRequiredStereotypes = nullptr;std::shared_ptr<ecore::EOperation> m_port_Operation_getRequireds = nullptr;std::shared_ptr<ecore::EOperation> m_component_Operation_getRequireds = nullptr;std::shared_ptr<ecore::EOperation> m_opaqueExpression_Operation_getResult = nullptr;std::shared_ptr<ecore::EOperation> m_operation_Operation_getReturnResult = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getSourceDirectedRelationships = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getSourceDirectedRelationships_EClass = nullptr;std::shared_ptr<ecore::EOperation> m_extension_Operation_getStereotype = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getStereotypeApplication_Stereotype = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getStereotypeApplications = nullptr;std::shared_ptr<ecore::EOperation> m_extension_Operation_getStereotypeEnd = nullptr;std::shared_ptr<ecore::EOperation> m_class_Operation_getSuperClasses = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getTargetDirectedRelationships = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getTargetDirectedRelationships_EClass = nullptr;std::shared_ptr<ecore::EOperation> m_operation_Operation_getType = nullptr;std::shared_ptr<ecore::EOperation> m_operation_Operation_getUpper = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_getUsedInterfaces = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_getValue_Stereotype_String = nullptr;std::shared_ptr<ecore::EOperation> m_continuation_Operation_global_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_interactionConstraint_Operation_global_data_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_interactionOperand_Operation_guard_contain_references_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_interactionOperand_Operation_guard_directly_prior_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_exceptionHandler_Operation_handler_body_edges_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_exceptionHandler_Operation_handler_body_owner_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_functionBehavior_Operation_hasAllDataTypeAttributes_DataType = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_hasKeyword_String = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_hasValue_Stereotype_String = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_hasVisibilityOf_NamedElement = nullptr;std::shared_ptr<ecore::EOperation> m_classifierTemplateParameter_Operation_has_constraining_classifier_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_informationItem_Operation_has_no_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_namedElement_Operation_has_no_qualified_name_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_timeConstraint_Operation_has_one_constrainedElement_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_durationConstraint_Operation_has_one_or_two_constrainedElements_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_has_owner_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_activityParameterNode_Operation_has_parameters_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_namedElement_Operation_has_qualified_name_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_pseudostate_Operation_history_vertices_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_enumeration_Operation_immutable_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_namespace_Operation_importMembers_PackageableElement = nullptr;std::shared_ptr<ecore::EOperation> m_elementImport_Operation_imported_element_is_public_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_parameter_Operation_in_and_out_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_multiplicityElement_Operation_includesMultiplicity_MultiplicityElement = nullptr;std::shared_ptr<ecore::EOperation> m_decisionNode_Operation_incoming_control_one_input_parameter_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_outputPin_Operation_incoming_edges_structured_only_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_joinNode_Operation_incoming_object_flow_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_decisionNode_Operation_incoming_object_one_input_parameter_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_decisionNode_Operation_incoming_outgoing_edges_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_inherit_NamedElement = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_inheritableMembers_Classifier = nullptr;std::shared_ptr<ecore::EOperation> m_transition_Operation_initial_transition_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_pseudostate_Operation_initial_vertex_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_region_Operation_initial_vertex_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_parameterSet_Operation_input_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_behavior_Operation_inputParameters = nullptr;std::shared_ptr<ecore::EOperation> m_behavioralFeature_Operation_inputParameters = nullptr;std::shared_ptr<ecore::EOperation> m_callAction_Operation_inputParameters = nullptr;std::shared_ptr<ecore::EOperation> m_objectFlow_Operation_input_and_output_parameter_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_loopNode_Operation_input_edges_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_objectNode_Operation_input_output_parameter_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_actionInputPin_Operation_input_pin_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_reclassifyObjectAction_Operation_input_pin_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_structuredActivityNode_Operation_input_pin_edges_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_reduceAction_Operation_input_type_is_collection_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_addStructuralFeatureValueAction_Operation_insertAt_pin_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_addVariableValueAction_Operation_insertAt_pin_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_linkEndCreationData_Operation_insertAt_pin_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_gate_Operation_inside_cf_gate_distinguishable_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_gate_Operation_inside_cf_matched_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_valueSpecification_Operation_integerValue = nullptr;std::shared_ptr<ecore::EOperation> m_lifeline_Operation_interaction_uses_share_lifeline_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_node_Operation_internal_structure_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_interruptibleActivityRegion_Operation_interrupting_edges_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_object_Operation_invoke_Operation_Argument = nullptr;std::shared_ptr<ecore::EOperation> m_generalOrdering_Operation_irreflexive_transitive_closure_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_multiplicityElement_Operation_is_Integer_UnlimitedNatural = nullptr;std::shared_ptr<ecore::EOperation> m_variable_Operation_isAccessibleBy_Action = nullptr;std::shared_ptr<ecore::EOperation> m_gate_Operation_isActual = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_isAttribute = nullptr;std::shared_ptr<ecore::EOperation> m_association_Operation_isBinary = nullptr;std::shared_ptr<ecore::EOperation> m_parameterableElement_Operation_isCompatibleWith_ParameterableElement = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_isComposite = nullptr;std::shared_ptr<ecore::EOperation> m_state_Operation_isComposite = nullptr;std::shared_ptr<ecore::EOperation> m_valueSpecification_Operation_isComputable = nullptr;std::shared_ptr<ecore::EOperation> m_redefinableElement_Operation_isConsistentWith_RedefinableElement = nullptr;std::shared_ptr<ecore::EOperation> m_vertex_Operation_isContainedInRegion_Region = nullptr;std::shared_ptr<ecore::EOperation> m_vertex_Operation_isContainedInState_State = nullptr;std::shared_ptr<ecore::EOperation> m_profile_Operation_isDefined = nullptr;std::shared_ptr<ecore::EOperation> m_namedElement_Operation_isDistinguishableFrom_NamedElement_Namespace = nullptr;std::shared_ptr<ecore::EOperation> m_gate_Operation_isFormal = nullptr;std::shared_ptr<ecore::EOperation> m_gate_Operation_isInsideCF = nullptr;std::shared_ptr<ecore::EOperation> m_opaqueExpression_Operation_isIntegral = nullptr;std::shared_ptr<ecore::EOperation> m_class_Operation_isMetaclass = nullptr;std::shared_ptr<ecore::EOperation> m_model_Operation_isMetamodel = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_isModelLibrary = nullptr;std::shared_ptr<ecore::EOperation> m_multiplicityElement_Operation_isMultivalued = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_isNavigable = nullptr;std::shared_ptr<ecore::EOperation> m_opaqueExpression_Operation_isNonNegative = nullptr;std::shared_ptr<ecore::EOperation> m_valueSpecification_Operation_isNull = nullptr;std::shared_ptr<ecore::EOperation> m_operation_Operation_isOrdered = nullptr;std::shared_ptr<ecore::EOperation> m_state_Operation_isOrthogonal = nullptr;std::shared_ptr<ecore::EOperation> m_gate_Operation_isOutsideCF = nullptr;std::shared_ptr<ecore::EOperation> m_opaqueExpression_Operation_isPositive = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_isProfileApplied_Profile = nullptr;std::shared_ptr<ecore::EOperation> m_messageEnd_Operation_isReceive = nullptr;std::shared_ptr<ecore::EOperation> m_redefinableElement_Operation_isRedefinitionContextValid_RedefinableElement = nullptr;std::shared_ptr<ecore::EOperation> m_extension_Operation_isRequired = nullptr;std::shared_ptr<ecore::EOperation> m_messageEnd_Operation_isSend = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_isSetDefault = nullptr;std::shared_ptr<ecore::EOperation> m_parameter_Operation_isSetDefault = nullptr;std::shared_ptr<ecore::EOperation> m_state_Operation_isSimple = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_isStereotypeApplicable_Stereotype = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_isStereotypeApplied_Stereotype = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_isStereotypeRequired_Stereotype = nullptr;std::shared_ptr<ecore::EOperation> m_state_Operation_isSubmachineState = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_isSubstitutableFor_Classifier = nullptr;std::shared_ptr<ecore::EOperation> m_templateableElement_Operation_isTemplate = nullptr;std::shared_ptr<ecore::EOperation> m_parameterableElement_Operation_isTemplateParameter = nullptr;std::shared_ptr<ecore::EOperation> m_operation_Operation_isUnique = nullptr;std::shared_ptr<ecore::EOperation> m_extension_Operation_is_binary_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_objectFlow_Operation_is_multicast_or_is_multireceive_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_transition_Operation_join_segment_guards_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_transition_Operation_join_segment_state_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_pseudostate_Operation_join_vertex_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_pseudostate_Operation_junction_vertex_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_opaqueExpression_Operation_language_body_size_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_opaqueAction_Operation_language_body_size_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_loopNode_Operation_loop_variable_outgoing_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_multiplicityElement_Operation_lowerBound = nullptr;std::shared_ptr<ecore::EOperation> m_multiplicityElement_Operation_lower_ge_0_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_multiplicityElement_Operation_lower_is_integer_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_makesVisible_NamedElement = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_maps_to_generalization_set_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_generalizationSet_Operation_maps_to_generalization_set_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_operationTemplateParameter_Operation_match_default_signature_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_gate_Operation_matches_Gate = nullptr;std::shared_ptr<ecore::EOperation> m_classifierTemplateParameter_Operation_matching_abstract_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_loopNode_Operation_matching_loop_variables_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_conditionalNode_Operation_matching_output_pins_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_loopNode_Operation_matching_output_pins_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_loopNode_Operation_matching_result_pins_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_activity_Operation_maximum_one_parameter_node_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_activity_Operation_maximum_two_parameter_nodes_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_interactionConstraint_Operation_maxint_greater_equal_minint_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_interactionConstraint_Operation_maxint_positive_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_maySpecializeType_Classifier = nullptr;std::shared_ptr<ecore::EOperation> m_namespace_Operation_membersAreDistinguishable = nullptr;std::shared_ptr<ecore::EOperation> m_namespace_Operation_members_distinguishable_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_extension_Operation_metaclassEnd = nullptr;std::shared_ptr<ecore::EOperation> m_profile_Operation_metaclass_reference_not_specialized_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_stateMachine_Operation_method_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_interactionConstraint_Operation_minint_maxint_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_interactionConstraint_Operation_minint_non_negative_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_behavior_Operation_most_one_behavior_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_connectorEnd_Operation_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_extensionEnd_Operation_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_valueSpecificationAction_Operation_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_linkEndData_Operation_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_structuralFeatureAction_Operation_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_writeVariableAction_Operation_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_clearAssociationAction_Operation_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_createLinkObjectAction_Operation_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_createObjectAction_Operation_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_destroyObjectAction_Operation_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readSelfAction_Operation_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_reclassifyObjectAction_Operation_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_startClassifierBehaviorAction_Operation_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_testIdentityAction_Operation_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_multiplicity_of_composite_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readIsClassifiedObjectAction_Operation_multiplicity_of_input_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkObjectEndAction_Operation_multiplicity_of_object_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkObjectEndQualifierAction_Operation_multiplicity_of_object_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_startObjectBehaviorAction_Operation_multiplicity_of_object_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_unmarshallAction_Operation_multiplicity_of_object_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readIsClassifiedObjectAction_Operation_multiplicity_of_output_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_qualifierValue_Operation_multiplicity_of_qualifier_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkObjectEndQualifierAction_Operation_multiplicity_of_qualifier_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_writeStructuralFeatureAction_Operation_multiplicity_of_result_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_clearStructuralFeatureAction_Operation_multiplicity_of_result_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readExtentAction_Operation_multiplicity_of_result_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkObjectEndAction_Operation_multiplicity_of_result_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkObjectEndQualifierAction_Operation_multiplicity_of_result_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_writeStructuralFeatureAction_Operation_multiplicity_of_value_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_mustBeOwned = nullptr;std::shared_ptr<ecore::EOperation> m_templateParameter_Operation_must_be_compatible_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_templateParameterSubstitution_Operation_must_be_compatible_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_informationFlow_Operation_must_conform_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_useCase_Operation_must_have_name_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_extensionPoint_Operation_must_have_name_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_actor_Operation_must_have_name_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_stereotype_Operation_name_not_clash_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_packageableElement_Operation_namespace_needs_visibility_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkAction_Operation_navigable_open_end_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_useCase_Operation_no_association_to_use_case_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_actionInputPin_Operation_no_control_or_object_flow_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_no_cycles_in_generalization_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_activityParameterNode_Operation_no_edges_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_finalState_Operation_no_entry_behavior_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_objectFlow_Operation_no_executable_nodes_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_finalState_Operation_no_exit_behavior_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_timeExpression_Operation_no_expr_requires_observation_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_duration_Operation_no_expr_requires_observation_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_valuePin_Operation_no_incoming_edges_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_activityParameterNode_Operation_no_incoming_edges_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_initialNode_Operation_no_incoming_edges_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_acceptEventAction_Operation_no_input_pins_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_conditionalNode_Operation_no_input_pins_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_component_Operation_no_nested_classifiers_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_destructionOccurrenceSpecification_Operation_no_occurrence_specifications_below_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_broadcastSignalAction_Operation_no_onport_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_callBehaviorAction_Operation_no_onport_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_startObjectBehaviorAction_Operation_no_onport_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_finalNode_Operation_no_outgoing_edges_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_activityParameterNode_Operation_no_outgoing_edges_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_finalState_Operation_no_outgoing_transitions_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_acceptEventAction_Operation_no_output_pins_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_component_Operation_no_packaged_elements_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_finalState_Operation_no_regions_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_constraint_Operation_no_side_effects_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_finalState_Operation_no_state_behavior_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_destroyObjectAction_Operation_no_type_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readIsClassifiedObjectAction_Operation_no_type_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_testIdentityAction_Operation_no_type_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_activityGroup_Operation_nodes_and_edges_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_non_final_parents_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_redefinableElement_Operation_non_leaf_redefinition_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_extension_Operation_non_owned_end_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_constraint_Operation_not_apply_to_self_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_activityGroup_Operation_not_contained_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_interaction_Operation_not_contained_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_parameter_Operation_not_exception_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_informationItem_Operation_not_instantiable_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_not_own_self_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_linkAction_Operation_not_static_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_structuralFeatureAction_Operation_not_static_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readSelfAction_Operation_not_static_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_pin_Operation_not_unique_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_broadcastSignalAction_Operation_number_of_arguments_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_unmarshallAction_Operation_number_of_result_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_sendSignalAction_Operation_number_order_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_parameter_Operation_object_effect_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_objectNode_Operation_object_flow_edges_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_controlFlow_Operation_object_nodes_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_structuralFeatureAction_Operation_object_type_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_unmarshallAction_Operation_object_type_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_message_Operation_occurrence_specifications_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_conditionalNode_Operation_one_clause_with_executable_node_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_structuralFeatureAction_Operation_one_featuring_classifier_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_forkNode_Operation_one_incoming_edge_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_exceptionHandler_Operation_one_input_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkAction_Operation_one_open_end_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_joinNode_Operation_one_outgoing_edge_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_mergeNode_Operation_one_outgoing_edge_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_functionBehavior_Operation_one_output_parameter_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_acceptEventAction_Operation_one_output_pin_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_actionInputPin_Operation_one_output_pin_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_templateBinding_Operation_one_parameter_substitution_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_opaqueExpression_Operation_one_return_result_parameter_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_operation_Operation_only_body_for_query_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_opaqueExpression_Operation_only_return_result_parameters_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkAction_Operation_openEnd = nullptr;std::shared_ptr<ecore::EOperation> m_stringExpression_Operation_operands_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_messageEnd_Operation_oppositeEnd = nullptr;std::shared_ptr<ecore::EOperation> m_combinedFragment_Operation_opt_loop_break_neg_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_inputPin_Operation_outgoing_edges_structured_only_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_pseudostate_Operation_outgoing_from_initial_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_transition_Operation_outgoing_pseudostates_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_behavior_Operation_outputParameters = nullptr;std::shared_ptr<ecore::EOperation> m_behavioralFeature_Operation_outputParameters = nullptr;std::shared_ptr<ecore::EOperation> m_callAction_Operation_outputParameters = nullptr;std::shared_ptr<ecore::EOperation> m_structuredActivityNode_Operation_output_pin_edges_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_exceptionHandler_Operation_output_pins_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_reduceAction_Operation_output_types_are_compatible_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_gate_Operation_outside_cf_gate_distinguishable_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_gate_Operation_outside_cf_matched_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_templateSignature_Operation_own_elements_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_region_Operation_owned_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_templateBinding_Operation_parameter_substitution_formal_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_templateableElement_Operation_parameterableElements = nullptr;std::shared_ptr<ecore::EOperation> m_classifierTemplateParameter_Operation_parametered_element_no_features_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_decisionNode_Operation_parameters_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_behavior_Operation_parameters_match_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_parents = nullptr;std::shared_ptr<ecore::EOperation> m_connectorEnd_Operation_part_with_port_empty_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_partDecomposition_Operation_parts_of_internal_structures_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_class_Operation_passive_class_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_replyAction_Operation_pins_match_parameter_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_port_Operation_port_aggregation_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkObjectEndAction_Operation_property_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_linkEndData_Operation_property_is_association_end_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_protocolStateMachine_Operation_protocol_transitions_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_packageImport_Operation_public_or_private_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_qualified_is_association_end_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_qualifierValue_Operation_qualifier_attribute_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkObjectEndQualifierAction_Operation_qualifier_attribute_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_linkEndData_Operation_qualifiers_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_valueSpecification_Operation_realValue = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_redefined_property_inherited_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_redefinableTemplateSignature_Operation_redefines_parents_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_region_Operation_redefinitionContext = nullptr;std::shared_ptr<ecore::EOperation> m_state_Operation_redefinitionContext = nullptr;std::shared_ptr<ecore::EOperation> m_transition_Operation_redefinitionContext = nullptr;std::shared_ptr<ecore::EOperation> m_redefinableElement_Operation_redefinition_consistent_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_redefinableElement_Operation_redefinition_context_valid_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_reduceAction_Operation_reducer_inputs_output_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_parameter_Operation_reentrant_behaviors_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_profile_Operation_references_same_metamodel_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_protocolTransition_Operation_refers_to_operation_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_expansionNode_Operation_region_as_input_or_output_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_removeStructuralFeatureValueAction_Operation_removeAt_and_value_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_removeVariableValueAction_Operation_removeAt_and_value_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_removeKeyword_String = nullptr;std::shared_ptr<ecore::EOperation> m_activityPartition_Operation_represents_classifier_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_activityPartition_Operation_represents_property_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_activityPartition_Operation_represents_property_and_is_contained_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_addStructuralFeatureValueAction_Operation_required_value_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_addVariableValueAction_Operation_required_value_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_testIdentityAction_Operation_result_is_boolean_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_conditionalNode_Operation_result_no_incoming_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_loopNode_Operation_result_no_incoming_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_acceptCallAction_Operation_result_pins_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_callAction_Operation_result_pins_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_operation_Operation_returnResult = nullptr;std::shared_ptr<ecore::EOperation> m_interactionUse_Operation_returnValueRecipient_coverage_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_interactionUse_Operation_returnValue_type_recipient_correspondence_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_connectorEnd_Operation_role_and_part_with_port_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_connector_Operation_roles_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_linkAction_Operation_same_association_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_lifeline_Operation_same_classifier_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_executionSpecification_Operation_same_lifeline_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_continuation_Operation_same_name_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_reception_Operation_same_name_as_signal_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_parameterSet_Operation_same_parameterized_entity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_linkAction_Operation_same_pins_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_reception_Operation_same_structure_as_signal_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_linkEndData_Operation_same_type_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_clearAssociationAction_Operation_same_type_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_createObjectAction_Operation_same_type_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkObjectEndQualifierAction_Operation_same_type_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_activityParameterNode_Operation_same_type_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_objectFlow_Operation_same_upper_bounds_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_variableAction_Operation_scope_of_variable_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_objectNode_Operation_selection_behavior_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_objectFlow_Operation_selection_behavior_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_lifeline_Operation_selector_int_or_string_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_lifeline_Operation_selector_specified_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_connectorEnd_Operation_self_part_with_port_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_message_Operation_sending_receiving_message_event_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_namedElement_Operation_separator = nullptr;std::shared_ptr<ecore::EOperation> m_object_Operation_set_Property_EJavaObject = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_setBooleanDefaultValue_Boolean = nullptr;std::shared_ptr<ecore::EOperation> m_parameter_Operation_setBooleanDefaultValue_Boolean = nullptr;std::shared_ptr<ecore::EOperation> m_occurrenceSpecification_Operation_setCovered_Lifeline = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_setIntegerDefaultValue_Integer = nullptr;std::shared_ptr<ecore::EOperation> m_parameter_Operation_setIntegerDefaultValue_Integer = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_setIsNavigable_Boolean = nullptr;std::shared_ptr<ecore::EOperation> m_operation_Operation_setIsOrdered_Boolean = nullptr;std::shared_ptr<ecore::EOperation> m_operation_Operation_setIsUnique_Boolean = nullptr;std::shared_ptr<ecore::EOperation> m_operation_Operation_setLower_Integer = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_setNullDefaultValue = nullptr;std::shared_ptr<ecore::EOperation> m_parameter_Operation_setNullDefaultValue = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_setRealDefaultValue_Real = nullptr;std::shared_ptr<ecore::EOperation> m_parameter_Operation_setRealDefaultValue_Real = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_setStringDefaultValue_String = nullptr;std::shared_ptr<ecore::EOperation> m_parameter_Operation_setStringDefaultValue_String = nullptr;std::shared_ptr<ecore::EOperation> m_operation_Operation_setType_Type = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_setUnlimitedNaturalDefaultValue_UnlimitedNatural = nullptr;std::shared_ptr<ecore::EOperation> m_parameter_Operation_setUnlimitedNaturalDefaultValue_UnlimitedNatural = nullptr;std::shared_ptr<ecore::EOperation> m_operation_Operation_setUpper_UnlimitedNatural = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_setValue_Stereotype_EJavaObject = nullptr;std::shared_ptr<ecore::EOperation> m_loopNode_Operation_setup_test_and_body_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_region_Operation_shallow_history_vertex_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_message_Operation_signature_is_operation_reply_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_message_Operation_signature_is_operation_request_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_message_Operation_signature_is_signal_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_message_Operation_signature_refer_to_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_structuredActivityNode_Operation_sourceNodes = nullptr;std::shared_ptr<ecore::EOperation> m_activityEdge_Operation_source_and_target_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_informationItem_Operation_sources_and_targets_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_informationFlow_Operation_sources_and_targets_kind_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_classifier_Operation_specialize_type_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_association_Operation_specialized_end_number_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_association_Operation_specialized_end_types_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_transition_Operation_state_is_external_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_transition_Operation_state_is_internal_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_transition_Operation_state_is_local_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_parameter_Operation_stream_and_exception_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_valueSpecification_Operation_stringValue = nullptr;std::shared_ptr<ecore::EOperation> m_instanceSpecification_Operation_structural_feature_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_unmarshallAction_Operation_structural_feature_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_stringExpression_Operation_subexpressions_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_state_Operation_submachine_or_regions_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_state_Operation_submachine_states_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_subsetted_property_names_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_subsettingContext = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_subsetting_context_conforms_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_subsetting_rules_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_callAction_Operation_synchronous_call_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_objectFlow_Operation_target_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_structuredActivityNode_Operation_targetNodes = nullptr;std::shared_ptr<ecore::EOperation> m_clause_Operation_test_and_body_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_objectFlow_Operation_transformation_behavior_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_pseudostate_Operation_transitions_incoming_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_pseudostate_Operation_transitions_outgoing_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_acceptCallAction_Operation_trigger_call_event_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_trigger_Operation_trigger_with_ports_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_decisionNode_Operation_two_input_parameters_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_parameterSet_Operation_two_parameter_sets_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readSelfAction_Operation_type_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_considerIgnoreFragment_Operation_type_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkAction_Operation_type_and_ordering_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readStructuralFeatureAction_Operation_type_and_ordering_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readVariableAction_Operation_type_and_ordering_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_startClassifierBehaviorAction_Operation_type_has_classifier_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readExtentAction_Operation_type_is_classifier_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkObjectEndAction_Operation_type_of_object_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkObjectEndQualifierAction_Operation_type_of_object_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_startObjectBehaviorAction_Operation_type_of_object_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_type_of_opposite_end_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_qualifierValue_Operation_type_of_qualifier_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_writeStructuralFeatureAction_Operation_type_of_result_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_clearStructuralFeatureAction_Operation_type_of_result_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_createLinkObjectAction_Operation_type_of_result_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkObjectEndAction_Operation_type_of_result_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_writeStructuralFeatureAction_Operation_type_of_value_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_unmarshallAction_Operation_type_ordering_and_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_broadcastSignalAction_Operation_type_ordering_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_sendSignalAction_Operation_type_ordering_multiplicity_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_callOperationAction_Operation_type_target_pin_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_sendObjectAction_Operation_type_target_pin_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_sendSignalAction_Operation_type_target_pin_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_connector_Operation_types_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_functionBehavior_Operation_types_of_parameters_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_unapplyProfile_Profile = nullptr;std::shared_ptr<ecore::EOperation> m_element_Operation_unapplyStereotype_Stereotype = nullptr;std::shared_ptr<ecore::EOperation> m_templateSignature_Operation_unique_parameters_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_valueSpecification_Operation_unlimitedValue = nullptr;std::shared_ptr<ecore::EOperation> m_acceptCallAction_Operation_unmarshall_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_acceptEventAction_Operation_unmarshall_signal_events_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_object_Operation_unset_Property = nullptr;std::shared_ptr<ecore::EOperation> m_property_Operation_unsetDefault = nullptr;std::shared_ptr<ecore::EOperation> m_parameter_Operation_unsetDefault = nullptr;std::shared_ptr<ecore::EOperation> m_multiplicityElement_Operation_upperBound = nullptr;std::shared_ptr<ecore::EOperation> m_multiplicityElement_Operation_upper_ge_lower_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_multiplicityElement_Operation_upper_is_unlimitedNatural_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_opaqueExpression_Operation_value = nullptr;std::shared_ptr<ecore::EOperation> m_multiplicityElement_Operation_value_specification_constant_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_multiplicityElement_Operation_value_specification_no_side_effects_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_writeVariableAction_Operation_value_type_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_interface_Operation_visibility_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_structuralFeatureAction_Operation_visibility_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_readLinkAction_Operation_visibility_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_namedElement_Operation_visibility_needs_ownership_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_elementImport_Operation_visibility_public_or_private_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_package_Operation_visibleMembers = nullptr;std::shared_ptr<ecore::EOperation> m_timeEvent_Operation_when_non_negative_EDiagnosticChain_EMap = nullptr;std::shared_ptr<ecore::EOperation> m_decisionNode_Operation_zero_input_parameters_EDiagnosticChain_EMap = nullptr;

			friend class UmlPackage;

			static bool isInited;
			static UmlPackage* create();
			bool isInitialized = false;
 			bool isCreated = false;

			virtual void init(std::shared_ptr<ecore::EPackage> package);

		public:
			void createPackageContents(std::shared_ptr<ecore::EPackage> package);
			void initializePackageContents();

		private:
			void createAbstractionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createAcceptCallActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createAcceptEventActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createActionExecutionSpecificationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createActionInputPinContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createActivityContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createActivityContentContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createActivityEdgeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createActivityFinalNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createActivityGroupContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createActivityNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createActivityParameterNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createActivityPartitionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createActorContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createAddStructuralFeatureValueActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createAddVariableValueActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createAnyReceiveEventContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createArgumentContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createArtifactContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createAssociationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createAssociationClassContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createBehaviorContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createBehaviorExecutionSpecificationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createBehavioralFeatureContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createBehavioredClassifierContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createBroadcastSignalActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCallActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCallBehaviorActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCallEventContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCallOperationActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCentralBufferNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createChangeEventContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createClassContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createClassifierContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createClassifierTemplateParameterContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createClauseContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createClearAssociationActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createClearStructuralFeatureActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createClearVariableActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCollaborationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCollaborationUseContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCombinedFragmentContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCommentContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCommunicationPathContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createComponentContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createComponentRealizationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createConditionalNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createConnectableElementContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createConnectableElementTemplateParameterContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createConnectionPointReferenceContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createConnectorContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createConnectorEndContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createConsiderIgnoreFragmentContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createConstraintContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createContinuationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createControlFlowContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createControlNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCreateLinkActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCreateLinkObjectActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createCreateObjectActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDataStoreNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDataTypeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDecisionNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDependencyContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDeployedArtifactContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDeploymentContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDeploymentSpecificationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDeploymentTargetContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDestroyLinkActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDestroyObjectActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDestructionOccurrenceSpecificationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDeviceContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDirectedRelationshipContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDurationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDurationConstraintContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDurationIntervalContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createDurationObservationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createElementContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createElementImportContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createEncapsulatedClassifierContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createEnumerationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createEnumerationLiteralContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createEventContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExceptionHandlerContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExecutableNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExecutionEnvironmentContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExecutionOccurrenceSpecificationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExecutionSpecificationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExpansionNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExpansionRegionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExpressionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExtendContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExtensionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExtensionEndContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createExtensionPointContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createFactoryContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createFeatureContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createFinalNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createFinalStateContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createFlowFinalNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createForkNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createFunctionBehaviorContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createGateContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createGeneralOrderingContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createGeneralizationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createGeneralizationSetContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createImageContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createIncludeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInformationFlowContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInformationItemContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInitialNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInputPinContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInstanceSpecificationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInstanceValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInteractionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInteractionConstraintContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInteractionFragmentContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInteractionOperandContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInteractionUseContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInterfaceContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInterfaceRealizationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInterruptibleActivityRegionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createIntervalContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createIntervalConstraintContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createInvocationActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createJoinNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLifelineContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLinkActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLinkEndCreationDataContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLinkEndDataContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLinkEndDestructionDataContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLiteralBooleanContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLiteralIntegerContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLiteralNullContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLiteralRealContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLiteralSpecificationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLiteralStringContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLiteralUnlimitedNaturalContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createLoopNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createManifestationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createMergeNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createMessageContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createMessageEndContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createMessageEventContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createMessageOccurrenceSpecificationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createModelContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createMultiplicityElementContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createNamedElementContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createNamespaceContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createObjectContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createObjectFlowContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createObjectNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createObservationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createOccurrenceSpecificationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createOpaqueActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createOpaqueBehaviorContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createOpaqueExpressionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createOperationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createOperationTemplateParameterContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createOutputPinContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createPackageContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createPackageImportContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createPackageMergeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createPackageableElementContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createParameterContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createParameterSetContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createParameterableElementContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createPartDecompositionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createPinContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createPortContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createPrimitiveTypeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createProfileContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createProfileApplicationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createPropertyContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createProtocolConformanceContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createProtocolStateMachineContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createProtocolTransitionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createPseudostateContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createQualifierValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createRaiseExceptionActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReadExtentActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReadIsClassifiedObjectActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReadLinkActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReadLinkObjectEndActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReadLinkObjectEndQualifierActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReadSelfActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReadStructuralFeatureActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReadVariableActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createRealizationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReceptionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReclassifyObjectActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createRedefinableElementContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createRedefinableTemplateSignatureContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReduceActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createRegionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createRelationshipContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createRemoveStructuralFeatureValueActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createRemoveVariableValueActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createReplyActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createSendObjectActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createSendSignalActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createSequenceNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createSignalContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createSignalEventContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createSlotContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStartClassifierBehaviorActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStartObjectBehaviorActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStateContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStateInvariantContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStateMachineContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStereotypeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStringExpressionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStructuralFeatureContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStructuralFeatureActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStructuredActivityNodeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createStructuredClassifierContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createSubstitutionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTemplateBindingContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTemplateParameterContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTemplateParameterSubstitutionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTemplateSignatureContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTemplateableElementContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTestIdentityActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTimeConstraintContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTimeEventContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTimeExpressionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTimeIntervalContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTimeObservationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTransitionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTriggerContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTypeContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createTypedElementContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createUnmarshallActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createUsageContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createUseCaseContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createValuePinContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createValueSpecificationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createValueSpecificationActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createVariableContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createVariableActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createVertexContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createWriteLinkActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createWriteStructuralFeatureActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createWriteVariableActionContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createPackageEDataTypes(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);

			void initializeAbstractionContent();
			void initializeAcceptCallActionContent();
			void initializeAcceptEventActionContent();
			void initializeActionContent();
			void initializeActionExecutionSpecificationContent();
			void initializeActionInputPinContent();
			void initializeActivityContent();
			void initializeActivityContentContent();
			void initializeActivityEdgeContent();
			void initializeActivityFinalNodeContent();
			void initializeActivityGroupContent();
			void initializeActivityNodeContent();
			void initializeActivityParameterNodeContent();
			void initializeActivityPartitionContent();
			void initializeActorContent();
			void initializeAddStructuralFeatureValueActionContent();
			void initializeAddVariableValueActionContent();
			void initializeAnyReceiveEventContent();
			void initializeArgumentContent();
			void initializeArtifactContent();
			void initializeAssociationContent();
			void initializeAssociationClassContent();
			void initializeBehaviorContent();
			void initializeBehaviorExecutionSpecificationContent();
			void initializeBehavioralFeatureContent();
			void initializeBehavioredClassifierContent();
			void initializeBroadcastSignalActionContent();
			void initializeCallActionContent();
			void initializeCallBehaviorActionContent();
			void initializeCallEventContent();
			void initializeCallOperationActionContent();
			void initializeCentralBufferNodeContent();
			void initializeChangeEventContent();
			void initializeClassContent();
			void initializeClassifierContent();
			void initializeClassifierTemplateParameterContent();
			void initializeClauseContent();
			void initializeClearAssociationActionContent();
			void initializeClearStructuralFeatureActionContent();
			void initializeClearVariableActionContent();
			void initializeCollaborationContent();
			void initializeCollaborationUseContent();
			void initializeCombinedFragmentContent();
			void initializeCommentContent();
			void initializeCommunicationPathContent();
			void initializeComponentContent();
			void initializeComponentRealizationContent();
			void initializeConditionalNodeContent();
			void initializeConnectableElementContent();
			void initializeConnectableElementTemplateParameterContent();
			void initializeConnectionPointReferenceContent();
			void initializeConnectorContent();
			void initializeConnectorEndContent();
			void initializeConsiderIgnoreFragmentContent();
			void initializeConstraintContent();
			void initializeContinuationContent();
			void initializeControlFlowContent();
			void initializeControlNodeContent();
			void initializeCreateLinkActionContent();
			void initializeCreateLinkObjectActionContent();
			void initializeCreateObjectActionContent();
			void initializeDataStoreNodeContent();
			void initializeDataTypeContent();
			void initializeDecisionNodeContent();
			void initializeDependencyContent();
			void initializeDeployedArtifactContent();
			void initializeDeploymentContent();
			void initializeDeploymentSpecificationContent();
			void initializeDeploymentTargetContent();
			void initializeDestroyLinkActionContent();
			void initializeDestroyObjectActionContent();
			void initializeDestructionOccurrenceSpecificationContent();
			void initializeDeviceContent();
			void initializeDirectedRelationshipContent();
			void initializeDurationContent();
			void initializeDurationConstraintContent();
			void initializeDurationIntervalContent();
			void initializeDurationObservationContent();
			void initializeElementContent();
			void initializeElementImportContent();
			void initializeEncapsulatedClassifierContent();
			void initializeEnumerationContent();
			void initializeEnumerationLiteralContent();
			void initializeEventContent();
			void initializeExceptionHandlerContent();
			void initializeExecutableNodeContent();
			void initializeExecutionEnvironmentContent();
			void initializeExecutionOccurrenceSpecificationContent();
			void initializeExecutionSpecificationContent();
			void initializeExpansionNodeContent();
			void initializeExpansionRegionContent();
			void initializeExpressionContent();
			void initializeExtendContent();
			void initializeExtensionContent();
			void initializeExtensionEndContent();
			void initializeExtensionPointContent();
			void initializeFactoryContent();
			void initializeFeatureContent();
			void initializeFinalNodeContent();
			void initializeFinalStateContent();
			void initializeFlowFinalNodeContent();
			void initializeForkNodeContent();
			void initializeFunctionBehaviorContent();
			void initializeGateContent();
			void initializeGeneralOrderingContent();
			void initializeGeneralizationContent();
			void initializeGeneralizationSetContent();
			void initializeImageContent();
			void initializeIncludeContent();
			void initializeInformationFlowContent();
			void initializeInformationItemContent();
			void initializeInitialNodeContent();
			void initializeInputPinContent();
			void initializeInstanceSpecificationContent();
			void initializeInstanceValueContent();
			void initializeInteractionContent();
			void initializeInteractionConstraintContent();
			void initializeInteractionFragmentContent();
			void initializeInteractionOperandContent();
			void initializeInteractionUseContent();
			void initializeInterfaceContent();
			void initializeInterfaceRealizationContent();
			void initializeInterruptibleActivityRegionContent();
			void initializeIntervalContent();
			void initializeIntervalConstraintContent();
			void initializeInvocationActionContent();
			void initializeJoinNodeContent();
			void initializeLifelineContent();
			void initializeLinkActionContent();
			void initializeLinkEndCreationDataContent();
			void initializeLinkEndDataContent();
			void initializeLinkEndDestructionDataContent();
			void initializeLiteralBooleanContent();
			void initializeLiteralIntegerContent();
			void initializeLiteralNullContent();
			void initializeLiteralRealContent();
			void initializeLiteralSpecificationContent();
			void initializeLiteralStringContent();
			void initializeLiteralUnlimitedNaturalContent();
			void initializeLoopNodeContent();
			void initializeManifestationContent();
			void initializeMergeNodeContent();
			void initializeMessageContent();
			void initializeMessageEndContent();
			void initializeMessageEventContent();
			void initializeMessageOccurrenceSpecificationContent();
			void initializeModelContent();
			void initializeMultiplicityElementContent();
			void initializeNamedElementContent();
			void initializeNamespaceContent();
			void initializeNodeContent();
			void initializeObjectContent();
			void initializeObjectFlowContent();
			void initializeObjectNodeContent();
			void initializeObservationContent();
			void initializeOccurrenceSpecificationContent();
			void initializeOpaqueActionContent();
			void initializeOpaqueBehaviorContent();
			void initializeOpaqueExpressionContent();
			void initializeOperationContent();
			void initializeOperationTemplateParameterContent();
			void initializeOutputPinContent();
			void initializePackageContent();
			void initializePackageImportContent();
			void initializePackageMergeContent();
			void initializePackageableElementContent();
			void initializeParameterContent();
			void initializeParameterSetContent();
			void initializeParameterableElementContent();
			void initializePartDecompositionContent();
			void initializePinContent();
			void initializePortContent();
			void initializePrimitiveTypeContent();
			void initializeProfileContent();
			void initializeProfileApplicationContent();
			void initializePropertyContent();
			void initializeProtocolConformanceContent();
			void initializeProtocolStateMachineContent();
			void initializeProtocolTransitionContent();
			void initializePseudostateContent();
			void initializeQualifierValueContent();
			void initializeRaiseExceptionActionContent();
			void initializeReadExtentActionContent();
			void initializeReadIsClassifiedObjectActionContent();
			void initializeReadLinkActionContent();
			void initializeReadLinkObjectEndActionContent();
			void initializeReadLinkObjectEndQualifierActionContent();
			void initializeReadSelfActionContent();
			void initializeReadStructuralFeatureActionContent();
			void initializeReadVariableActionContent();
			void initializeRealizationContent();
			void initializeReceptionContent();
			void initializeReclassifyObjectActionContent();
			void initializeRedefinableElementContent();
			void initializeRedefinableTemplateSignatureContent();
			void initializeReduceActionContent();
			void initializeRegionContent();
			void initializeRelationshipContent();
			void initializeRemoveStructuralFeatureValueActionContent();
			void initializeRemoveVariableValueActionContent();
			void initializeReplyActionContent();
			void initializeSendObjectActionContent();
			void initializeSendSignalActionContent();
			void initializeSequenceNodeContent();
			void initializeSignalContent();
			void initializeSignalEventContent();
			void initializeSlotContent();
			void initializeStartClassifierBehaviorActionContent();
			void initializeStartObjectBehaviorActionContent();
			void initializeStateContent();
			void initializeStateInvariantContent();
			void initializeStateMachineContent();
			void initializeStereotypeContent();
			void initializeStringExpressionContent();
			void initializeStructuralFeatureContent();
			void initializeStructuralFeatureActionContent();
			void initializeStructuredActivityNodeContent();
			void initializeStructuredClassifierContent();
			void initializeSubstitutionContent();
			void initializeTemplateBindingContent();
			void initializeTemplateParameterContent();
			void initializeTemplateParameterSubstitutionContent();
			void initializeTemplateSignatureContent();
			void initializeTemplateableElementContent();
			void initializeTestIdentityActionContent();
			void initializeTimeConstraintContent();
			void initializeTimeEventContent();
			void initializeTimeExpressionContent();
			void initializeTimeIntervalContent();
			void initializeTimeObservationContent();
			void initializeTransitionContent();
			void initializeTriggerContent();
			void initializeTypeContent();
			void initializeTypedElementContent();
			void initializeUnmarshallActionContent();
			void initializeUsageContent();
			void initializeUseCaseContent();
			void initializeValuePinContent();
			void initializeValueSpecificationContent();
			void initializeValueSpecificationActionContent();
			void initializeVariableContent();
			void initializeVariableActionContent();
			void initializeVertexContent();
			void initializeWriteLinkActionContent();
			void initializeWriteStructuralFeatureActionContent();
			void initializeWriteVariableActionContent();
			void initializePackageEDataTypes();



	};
}
#endif /* end of include guard: UMLPACKAGEIMPL_HPP */

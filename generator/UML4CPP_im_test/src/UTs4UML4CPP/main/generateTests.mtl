[comment encoding = UTF-8 /]
[module generateTests('http://www.eclipse.org/uml2/5.0.0/UML')]

[import UTs4UML4CPP::main::helper::helper/]
[import UTs4UML4CPP::main::helper::classHelper/]
[import UTs4UML4CPP::main::helper::operationHelper/]
[import UTs4UML4CPP::main::helper::packageHelper/]
[import UTs4UML4CPP::main::generateTestApplication]
[import UTs4UML4CPP::main::generateTimeHelper]
[import UTs4UML4CPP::main::generateMemoryHelper]
[import UTs4UML4CPP::main::test_package::generateTestPackageImplementationHeader/]
[import UTs4UML4CPP::main::test_package::generateTestPackageImplementationSource/]
[import UTs4UML4CPP::main::test_class::generateTestClassImplementationHeader/]
[import UTs4UML4CPP::main::test_class::generateTestClassImplementationSource/]
[import UTs4UML4CPP::main::test_operation::generateTestOperationImplementationHeader/]
[import UTs4UML4CPP::main::test_operation::generateTestOperationImplementationSource/]

[template public generateTests( aPackage : Package )]
[comment @main/]
	[printlnToStdout( 'Starting test generation for '.concat( aPackage.getPackageName() ) )/]
	[printlnToStdout( 'Has package prepareTests annotation: '.concat( aPackage.prepareTests().toString() ) )/]
	[if( aPackage.prepareTests() )]
		[printlnToStdout( 'Generate TestApplication' )/]
		[aPackage.generateTestApplication()/]
		[printlnToStdout( 'Generate TimeHelper' )/]
		[aPackage.generateTimeHelper()/]
		[printlnToStdout( 'Generate MemoryHelper' )/]
		[aPackage.generateMemoryHelper()/]
		[for( forPackage : Package | aPackage.getAllPackages() )]
			[printlnToStdout( 'Generate package test suite: '.concat( forPackage.getPackageTestSuiteName() ) )/]
			[forPackage.generatePackageTest()/]
			[for( forClass : Class | forPackage.getAllOwnClasses() )]
				[printlnToStdout( 'Generate class test suite: '.concat( forClass.getClassTestSuiteName() ) )/]
				[forClass.generateClassTest()/]
				[for( forOperation : Operation | forClass.getAllOwnOperations() )]
					[printlnToStdout( 'Generate operation test suite: '.concat( forOperation.getOperationTestSuiteName() ) )/]
					[forOperation.generateOperationTest()/]
				[/for]
			[/for]
		[/for]
	[/if]
	[printlnToStdout( 'Finished test generation for '.concat( aPackage.getPackageName() ) )/]
[/template]

[template private generatePackageTest( aPackage : Package )]
	[aPackage.generateTestPackageImplementationHeader()/]
	[aPackage.generateTestPackageImplementationSource()/]
[/template]

[template private generateClassTest( aClass : Class )]
	[aClass.generateTestClassImplementationHeader()/]
	[aClass.generateTestClassImplementationSource()/]
[/template]

[template private generateOperationTest( anOperation : Operation )]
	[anOperation.generateTestOperationImplementationHeader()/]
	[anOperation.generateTestOperationImplementationSource()/]
[/template]
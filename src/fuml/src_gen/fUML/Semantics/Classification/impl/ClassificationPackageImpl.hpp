//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_SEMANTICS_CLASSIFICATIONPACKAGEIMPL_HPP
#define FUML_SEMANTICS_CLASSIFICATIONPACKAGEIMPL_HPP

#include "ecore/EcorePackage.hpp"
#include "ecore/impl/EPackageImpl.hpp"

#include "fUML/Semantics/Classification/ClassificationPackage.hpp" 


namespace fUML::Semantics::Classification 
{
	class InstanceValueEvaluation;}

namespace ecore
{
	class EcoreFactory;
}

namespace fUML::Semantics::Classification
{
	class ClassificationPackageImpl : public ecore::EPackageImpl ,virtual public ClassificationPackage
	{
		private:    
			ClassificationPackageImpl(ClassificationPackageImpl const&) = delete;
			ClassificationPackageImpl& operator=(ClassificationPackageImpl const&) = delete;

		protected:
			ClassificationPackageImpl();

		public:
			virtual ~ClassificationPackageImpl();

			// Begin Class InstanceValueEvaluation
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInstanceValueEvaluation_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getInstanceValueEvaluation_Operation_evaluate() const ;
			
			// End Class InstanceValueEvaluation

			
			// SubPackages Getters
			

		private:
			std::shared_ptr<ecore::EClass> m_instanceValueEvaluation_Class = nullptr;
			
			
			
			std::shared_ptr<ecore::EOperation> m_instanceValueEvaluation_Operation_evaluate = nullptr;

			friend class ClassificationPackage;

			static bool isInited;
			static ClassificationPackage* create();
			bool isInitialized = false;
 			bool isCreated = false;

			virtual void init(std::shared_ptr<ecore::EPackage> package);

		public:
			void createPackageContents(std::shared_ptr<ecore::EPackage> package);
			void initializePackageContents();

		private:
			void createInstanceValueEvaluationContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createPackageEDataTypes(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);

			void initializeInstanceValueEvaluationContent();
			void initializePackageEDataTypes();



	};
}
#endif /* end of include guard: FUML_SEMANTICS_CLASSIFICATIONPACKAGEIMPL_HPP */

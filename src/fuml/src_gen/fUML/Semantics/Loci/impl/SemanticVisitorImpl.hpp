//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_SEMANTICS_LOCI_SEMANTICVISITORSEMANTICVISITORIMPL_HPP
#define FUML_SEMANTICS_LOCI_SEMANTICVISITORSEMANTICVISITORIMPL_HPP

//*********************************
// generated Includes

// namespace macro header include
#include "fUML/fUML.hpp" 

// model includes
#include "../SemanticVisitor.hpp"

#include "fUML/Semantics/Loci/impl/LociFactoryImpl.hpp"

#include "ecore/impl/EModelElementImpl.hpp"

//*********************************
namespace fUML::Semantics::Loci 
{
	class FUML_API SemanticVisitorImpl : virtual public ecore::EModelElementImpl,
virtual public SemanticVisitor 
	{
		public: 
			SemanticVisitorImpl(const SemanticVisitorImpl & obj);
			virtual std::shared_ptr<ecore::EObject> copy() const = 0;
			SemanticVisitorImpl& operator=(SemanticVisitorImpl const&); 

		protected:
			friend class fUML::Semantics::Loci::LociFactoryImpl;
			SemanticVisitorImpl();
			virtual std::shared_ptr<fUML::Semantics::Loci::SemanticVisitor> getThisSemanticVisitorPtr() const;
			virtual void setThisSemanticVisitorPtr(std::weak_ptr<fUML::Semantics::Loci::SemanticVisitor> thisSemanticVisitorPtr);


		public:
			//destructor
			virtual ~SemanticVisitorImpl() = 0;
			
			//*********************************
			// Operations
			//*********************************
			virtual void _beginIsolation() ;
			virtual void _endIsolation() ;
			
			//*********************************
			// Attribute Getters & Setters
			//*********************************
			
			//*********************************
			// Reference Getters & Setters
			//*********************************
			
			//*********************************
			// Union Reference Getters
			//*********************************
			
			//*********************************
			// Container Getter
			//*********************************
			virtual std::shared_ptr<ecore::EObject> eContainer() const ; 

		protected:
			virtual std::shared_ptr<ecore::EClass> eStaticClass() const;

			//*********************************
			// EStructuralFeature Get/Set/IsSet
			//*********************************
			virtual std::shared_ptr<Any> eGet(int featureID, bool resolve, bool coreType) const ;
			virtual bool eSet(int featureID, std::shared_ptr<Any> newValue) ;
			virtual bool internalEIsSet(int featureID) const ;

			//*********************************
			// EOperation Invoke
			//*********************************
			virtual std::shared_ptr<Any> eInvoke(int operationID, std::shared_ptr<Bag<Any>> arguments) ;

		private:
			std::weak_ptr<fUML::Semantics::Loci::SemanticVisitor> m_thisSemanticVisitorPtr;
	};
}
#endif /* end of include guard: FUML_SEMANTICS_LOCI_SEMANTICVISITORSEMANTICVISITORIMPL_HPP */

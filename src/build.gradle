description 'Models and generated source code collection'

task buildEcoreModels() {
	group 'Source'
	description 'generate and compile all ecore models'
	
	dependsOn 'ecore:ecore:buildEcore'
	dependsOn 'ecore:types:buildTypes'
	dependsOn 'uml:buildUml'
	dependsOn 'fuml:buildFUML'
	dependsOn 'pscs:buildPSCS'
}

task buildReflectionModels() {
	group 'Source'
	description 'generate and compile reflection models'
	
	dependsOn 'common:ecoreReflection:buildEcoreReflection'
	dependsOn 'common:primitivetypesReflection:buildPrimitivetypesReflection'
	dependsOn 'common:umlReflection:buildUmlReflection'
}

task buildUMLProfiles() {
	group 'Source'
	description 'generate and compile uml profile models'
	
	dependsOn 'common:standardProfile:buildStandardProfile'
}

// Compile all without generating the models
task compileEcoreModels() {
	group 'Source'
	description 'compile all ecore models'
	
	dependsOn 'ecore:ecore:src_gen:compileEcore'
	dependsOn 'ecore:types:src_gen:compileTypes'
	dependsOn 'uml:src_gen:compileUml'
	dependsOn 'fuml:src_gen:compileFUML'
	dependsOn 'pscs:src_gen:compilePSCS'
}

// Compile all without generating the models
task compileReflectionModels() {
	group 'Source'
	description 'compile all reflection models'
	
	dependsOn 'common:ecoreReflection:src_gen:compileEcoreReflection'
	dependsOn 'common:primitivetypesReflection:src_gen:compilePrimitivetypesReflection'
	dependsOn 'common:umlReflection:src_gen:compileUmlReflection'
}

task compileUMLProfiles() {
	group 'Source'
	description 'compile all uml profile models'
	
	dependsOn 'common:standardProfile:compileStandardProfile'
}

task generateEcoreModels() {
	group 'Source'
	description 'generate all ecore models'
	
	dependsOn 'ecore:ecore:model:generateEcore'
	dependsOn 'ecore:types:model:generateTypes'
	dependsOn 'uml:model:generateUml'
	dependsOn 'fuml:model:generateFUML'
	dependsOn 'pscs:model:generatePSCS'
}

task generateReflectionModels() {
	group 'Source'
	description 'generate all reflection models'
	
	dependsOn 'common:ecoreReflection:model:generateEcoreReflection'
	dependsOn 'common:primitivetypesReflection:model:generatePrimitivetypesReflection'
	dependsOn 'common:umlReflection:model:generateUmlReflection'
}

task generateUMLProfiles() {
	group 'Source'
	description 'generate all uml profile models'
	
	dependsOn 'common:standardProfile:generateStandardProfile'
}

task deliverBasicInterfaces() {
	group 'Basic interfaces'
	description 'deliver abstractDataTypes, util, persistence and pluginFramework interfaces'
	
	dependsOn 'common:abstractDataTypes:deliverAbstractDataTypes'
	dependsOn 'common:pluginFramework:deliverPluginFrameworkInterface'
	dependsOn 'common:persistence:deliverPersistenceInterface'
	dependsOn 'util:deliverUtil'
}
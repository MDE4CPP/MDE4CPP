#############################################################################
#																	        #
#		 			CMakeList created by ecore4CPP Generator				# 
#																	        #
#############################################################################

# C++ project of model PSCS.ecore, generated by Ecore4CPP

CMAKE_MINIMUM_REQUIRED(VERSION 3.9)

PROJECT(PSCS)

IF(NOT CMAKE_BUILD_TYPE) 
    SET(CMAKE_BUILD_TYPE Debug)
ENDIF(NOT CMAKE_BUILD_TYPE)
SET(CMAKE_DEBUG_POSTFIX d)

SET(CMAKE_CXX_STANDARD 14)

IF(("$ENV{DEBUG_MESSAGE_PSCS}" EQUAL "1") AND (CMAKE_BUILD_TYPE MATCHES Debug))
	SET(ENABLED_DEBUG_MESSAGE " ")
ELSE()
	SET(ENABLED_DEBUG_MESSAGE " -DNDEBUG")
ENDIF()
IF("$ENV{DEBUG_MESSAGE_ACTIVITY_DEBUGGER}" EQUAL "1")
	SET(ENABLED_DEBUG_MESSAGE "${ENABLED_DEBUG_MESSAGE} -DACTIVITY_DEBUG_ON")
ENDIF()

SET(CMAKE_CXX_FLAGS "-Wall -Wno-overloaded-virtual -Wdeprecated-declarations -fmax-errors=5")
SET(CMAKE_CXX_FLAGS_DEBUG " -Og -ggdb ${ENABLED_DEBUG_MESSAGE}")
SET(CMAKE_CXX_FLAGS_RELEASE " -O3  ${ENABLED_DEBUG_MESSAGE}")

string(REPLACE "\\" "/" MDE4CPP_HOME $ENV{MDE4CPP_HOME})

SET(SOURCE_FILES
# Factories and packages
	PSCSFactory.cpp
	impl/PSCSFactoryImpl.cpp
	PSCSPackage.cpp
	impl/PSCSPackageImpl.cpp
	impl/PSCSPackageImpl_Creation.cpp
	impl/PSCSPackageImpl_Initialization.cpp
	Semantics/SemanticsFactory.cpp
	Semantics/impl/SemanticsFactoryImpl.cpp
	Semantics/SemanticsPackage.cpp
	Semantics/impl/SemanticsPackageImpl.cpp
	Semantics/impl/SemanticsPackageImpl_Creation.cpp
	Semantics/impl/SemanticsPackageImpl_Initialization.cpp
	Semantics/Actions/ActionsFactory.cpp
	Semantics/Actions/impl/ActionsFactoryImpl.cpp
	Semantics/Actions/ActionsPackage.cpp
	Semantics/Actions/impl/ActionsPackageImpl.cpp
	Semantics/Actions/impl/ActionsPackageImpl_Creation.cpp
	Semantics/Actions/impl/ActionsPackageImpl_Initialization.cpp
	Semantics/StructuredClassifiers/StructuredClassifiersFactory.cpp
	Semantics/StructuredClassifiers/impl/StructuredClassifiersFactoryImpl.cpp
	Semantics/StructuredClassifiers/StructuredClassifiersPackage.cpp
	Semantics/StructuredClassifiers/impl/StructuredClassifiersPackageImpl.cpp
	Semantics/StructuredClassifiers/impl/StructuredClassifiersPackageImpl_Creation.cpp
	Semantics/StructuredClassifiers/impl/StructuredClassifiersPackageImpl_Initialization.cpp
	Semantics/Loci/LociFactory.cpp
	Semantics/Loci/impl/LociFactoryImpl.cpp
	Semantics/Loci/LociPackage.cpp
	Semantics/Loci/impl/LociPackageImpl.cpp
	Semantics/Loci/impl/LociPackageImpl_Creation.cpp
	Semantics/Loci/impl/LociPackageImpl_Initialization.cpp
	Semantics/CommonBehavior/CommonBehaviorFactory.cpp
	Semantics/CommonBehavior/impl/CommonBehaviorFactoryImpl.cpp
	Semantics/CommonBehavior/CommonBehaviorPackage.cpp
	Semantics/CommonBehavior/impl/CommonBehaviorPackageImpl.cpp
	Semantics/CommonBehavior/impl/CommonBehaviorPackageImpl_Creation.cpp
	Semantics/CommonBehavior/impl/CommonBehaviorPackageImpl_Initialization.cpp
	Semantics/Values/ValuesFactory.cpp
	Semantics/Values/impl/ValuesFactoryImpl.cpp
	Semantics/Values/ValuesPackage.cpp
	Semantics/Values/impl/ValuesPackageImpl.cpp
	Semantics/Values/impl/ValuesPackageImpl_Creation.cpp
	Semantics/Values/impl/ValuesPackageImpl_Initialization.cpp
	Semantics/Classification/ClassificationFactory.cpp
	Semantics/Classification/impl/ClassificationFactoryImpl.cpp
	Semantics/Classification/ClassificationPackage.cpp
	Semantics/Classification/impl/ClassificationPackageImpl.cpp
	Semantics/Classification/impl/ClassificationPackageImpl_Creation.cpp
	Semantics/Classification/impl/ClassificationPackageImpl_Initialization.cpp
	
# Package plugin
	impl/PSCSPluginImpl.cpp
	PSCSPlugin.cpp
# Package content
	Semantics/Actions/impl/CS_AcceptCallActionActivationImpl.cpp
	Semantics/Actions/impl/CS_AcceptEventActionActivationImpl.cpp
	Semantics/Actions/impl/CS_AddStructuralFeatureValueActionActivationImpl.cpp
	Semantics/CommonBehavior/impl/CS_CallEventExecutionImpl.cpp
	Semantics/Actions/impl/CS_CallOperationActionActivationImpl.cpp
	Semantics/Actions/impl/CS_ClearStructuralFeatureActionActivationImpl.cpp
	Semantics/Actions/impl/CS_ConstructStrategyImpl.cpp
	Semantics/Actions/impl/CS_CreateLinkActionActivationImpl.cpp
	Semantics/Actions/impl/CS_CreateObjectActionActivationImpl.cpp
	Semantics/Actions/impl/CS_DefaultConstructStrategyImpl.cpp
	Semantics/StructuredClassifiers/impl/CS_DefaultRequestPropagationStrategyImpl.cpp
	Semantics/StructuredClassifiers/impl/CS_DispatchOperationOfInterfaceStrategyImpl.cpp
	Semantics/CommonBehavior/impl/CS_EventOccurrenceImpl.cpp
	Semantics/Loci/impl/CS_ExecutionFactoryImpl.cpp
	Semantics/Loci/impl/CS_ExecutorImpl.cpp
	Semantics/Classification/impl/CS_InstanceValueEvaluationImpl.cpp
	Semantics/StructuredClassifiers/impl/CS_InteractionPointImpl.cpp
	Semantics/StructuredClassifiers/impl/CS_LinkImpl.cpp
	Semantics/Loci/impl/CS_LocusImpl.cpp
	Semantics/StructuredClassifiers/impl/CS_NameBased_StructuralFeatureOfInterfaceAccessStrategyImpl.cpp
	Semantics/StructuredClassifiers/impl/CS_ObjectImpl.cpp
	Semantics/Values/impl/CS_OpaqueExpressionEvaluationImpl.cpp
	Semantics/Actions/impl/CS_ReadExtentActionActivationImpl.cpp
	Semantics/Actions/impl/CS_ReadSelfActionActivationImpl.cpp
	Semantics/StructuredClassifiers/impl/CS_ReferenceImpl.cpp
	Semantics/Actions/impl/CS_RemoveStructuralFeatureValueActionActivationImpl.cpp
	Semantics/StructuredClassifiers/impl/CS_RequestPropagationStrategyImpl.cpp
	Semantics/Actions/impl/CS_SendSignalActionActivationImpl.cpp
	Semantics/StructuredClassifiers/impl/CS_StructuralFeatureOfInterfaceAccessStrategyImpl.cpp
	#${MDE4CPP_HOME}/application/include/util/ProfileCallCount.cpp
)

INCLUDE_DIRECTORIES(
	../
	${MDE4CPP_HOME}/application/include
)

# Apple specific stuff
if(APPLE)
  set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -undefined dynamic_lookup")
  set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} -undefined dynamic_lookup")
endif(APPLE)

IF(UNIX AND NOT APPLE)
    # for Linux, BSD, Solaris, Minix
	IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
		FIND_LIBRARY(ECORE_DEBUG ecored.so ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(FUML_DEBUG fUMLd.so ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(TYPES_DEBUG typesd.so ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(UML_DEBUG umld.so ${MDE4CPP_HOME}/application/bin)
		
	ELSE()
		FIND_LIBRARY(ECORE_RELEASE ecore.so ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(FUML_RELEASE fUML.so ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(TYPES_RELEASE types.so ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(UML_RELEASE uml.so ${MDE4CPP_HOME}/application/bin)
		
	ENDIF()
ELSEIF(APPLE)
	IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
		FIND_LIBRARY(ECORE_DEBUG ecored.dylib ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(FUML_DEBUG fUMLd.dylib ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(TYPES_DEBUG typesd.dylib ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(UML_DEBUG umld.dylib ${MDE4CPP_HOME}/application/bin)
		
	ELSE()
		FIND_LIBRARY(ECORE_RELEASE ecore.dylib ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(FUML_RELEASE fUML.dylib ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(TYPES_RELEASE types.dylib ${MDE4CPP_HOME}/application/bin)
		FIND_LIBRARY(UML_RELEASE uml.dylib ${MDE4CPP_HOME}/application/bin)
		
	ENDIF()
ELSE()
	IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
		FIND_LIBRARY(ECORE_DEBUG ecored ${MDE4CPP_HOME}/application/lib)
		FIND_LIBRARY(FUML_DEBUG fUMLd ${MDE4CPP_HOME}/application/lib)
		FIND_LIBRARY(TYPES_DEBUG typesd ${MDE4CPP_HOME}/application/lib)
		FIND_LIBRARY(UML_DEBUG umld ${MDE4CPP_HOME}/application/lib)
		
	ELSE()
		FIND_LIBRARY(ECORE_RELEASE ecore ${MDE4CPP_HOME}/application/lib)
		FIND_LIBRARY(FUML_RELEASE fUML ${MDE4CPP_HOME}/application/lib)
		FIND_LIBRARY(TYPES_RELEASE types ${MDE4CPP_HOME}/application/lib)
		FIND_LIBRARY(UML_RELEASE uml ${MDE4CPP_HOME}/application/lib)
		
	ENDIF()
ENDIF()

ADD_LIBRARY(${PROJECT_NAME} SHARED ${SOURCE_FILES})
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES PREFIX "")

IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
	TARGET_LINK_LIBRARIES(${PROJECT_NAME}
		debug ${ECORE_DEBUG}
		debug ${FUML_DEBUG}
		debug ${TYPES_DEBUG}
		debug ${UML_DEBUG}
	)
ELSE()
	TARGET_LINK_LIBRARIES(${PROJECT_NAME}
		optimized ${ECORE_RELEASE}
		optimized ${FUML_RELEASE}
		optimized ${TYPES_RELEASE}
		optimized ${UML_RELEASE}
	)
ENDIF()

#-----------------------------------------------------
# DELIVERING binaries and header to ${MDE4CPP_HOME}
#-----------------------------------------------------

INSTALL(TARGETS ${PROJECT_NAME}
	RUNTIME DESTINATION ${MDE4CPP_HOME}/application/bin
    LIBRARY DESTINATION ${MDE4CPP_HOME}/application/bin
    ARCHIVE DESTINATION ${MDE4CPP_HOME}/application/lib
)

INSTALL(DIRECTORY . DESTINATION ${MDE4CPP_HOME}/application/include/${PROJECT_NAME}
	FILES_MATCHING PATTERN "*.hpp"
	PATTERN ".cmake" EXCLUDE
)

//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef PSSM_SEMANTICS_ACTIONSFACTORYIMPL_HPP
#define PSSM_SEMANTICS_ACTIONSFACTORYIMPL_HPP

// namespace macro header include
#include "PSSM/PSSM.hpp"

#include "ecore/impl/EFactoryImpl.hpp"

#include "PSSM/Semantics/Actions/ActionsFactory.hpp"

namespace Actions 
{	class SM_ReadSelfActionActivation;
}

namespace PSSM::Semantics::Actions 
{
	class PSSM_API ActionsFactoryImpl : virtual public ecore::EFactoryImpl , virtual public ActionsFactory 
	{
		private:    
			ActionsFactoryImpl(ActionsFactoryImpl const&) = delete;
			ActionsFactoryImpl& operator=(ActionsFactoryImpl const&) = delete;

		protected:
			friend class ActionsFactory;
			// Constructor
			ActionsFactoryImpl();

		public:
			virtual ~ActionsFactoryImpl();
			virtual std::shared_ptr<ecore::EObject> create(std::string _className,  std::shared_ptr<ecore::EObject> container=nullptr, const int referenceID = -1) const;
			virtual std::shared_ptr<ecore::EObject> create(const int classID,  std::shared_ptr<ecore::EObject> container = nullptr, const int referenceID = -1) const;
			virtual std::shared_ptr<ecore::EObject> create(std::shared_ptr<ecore::EClass> _class, std::shared_ptr<EObject> _container=nullptr, const int referenceID = -1) const;

			//Creator functions
			 virtual std::shared_ptr<PSSM::Semantics::Actions::SM_ReadSelfActionActivation> createSM_ReadSelfActionActivation(const int metaElementID = ActionsPackage::SM_READSELFACTIONACTIVATION_CLASS) const ;
			 

		private:
			static ActionsFactory* create();
            std::map<std::string,int> m_idMap;
	};
}
#endif /* end of include guard: PSSM_SEMANTICS_ACTIONSFACTORYIMPL_HPP */

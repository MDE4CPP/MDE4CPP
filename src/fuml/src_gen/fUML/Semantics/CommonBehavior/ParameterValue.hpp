//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_SEMANTICS_COMMONBEHAVIOR_PARAMETERVALUE_HPP
#define FUML_SEMANTICS_COMMONBEHAVIOR_PARAMETERVALUE_HPP


#include <memory>
#include <string>
#include "abstractDataTypes/Any.hpp"
// forward declarations


//*********************************
// generated Includes

//Forward Declaration for used types 
namespace uml 
{
	class Parameter;
}

// namespace macro header include
#include "fUML/fUML.hpp"



#include "ecore/EModelElement.hpp"


//*********************************
namespace fUML::Semantics::CommonBehavior 
{
	
	class FUML_API ParameterValue : virtual public ecore::EModelElement
	{
		public:
 			ParameterValue(const ParameterValue &) {}

		protected:
			ParameterValue(){}

		public:
			virtual std::shared_ptr<ecore::EObject> copy() const = 0;

			//destructor
			virtual ~ParameterValue() {}

			//*********************************
			// Operations
			//*********************************
			virtual std::shared_ptr<fUML::Semantics::CommonBehavior::ParameterValue> _copy() = 0;

			//*********************************
			// Attribute Getters & Setters
			//*********************************
			virtual std::shared_ptr<Bag<Any>> getValues() const = 0;

			//*********************************
			// Reference Getters & Setters
			//*********************************
			virtual std::shared_ptr<uml::Parameter> getParameter() const = 0;
			virtual void setParameter(std::shared_ptr<uml::Parameter>) = 0;

			//*********************************
			// Union Reference Getters
			//*********************************

			//*********************************
			// Container Getter
			//*********************************
			virtual std::shared_ptr<ecore::EObject> eContainer() const = 0; 

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			mutable std::shared_ptr<Bag<Any>> m_values;
			
			//*********************************
			// Reference Members
			//*********************************
			std::shared_ptr<uml::Parameter> m_parameter;
	};
}
#endif /* end of include guard: FUML_SEMANTICS_COMMONBEHAVIOR_PARAMETERVALUE_HPP */

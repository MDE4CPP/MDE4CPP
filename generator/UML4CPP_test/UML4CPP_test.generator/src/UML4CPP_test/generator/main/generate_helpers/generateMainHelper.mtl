[comment encoding = UTF-8 /]
[module generateMainHelper('http://www.eclipse.org/uml2/5.0.0/UML')]

[import UML4CPP::generator::main::helpers::generalHelper /]

[template public generateMainHelper( aPackage : Package ) {
	className : String = 'TestSuiteMainHelper';
} ]
[file( 'helper/'.concat( className ).concat( '.hpp' ), false, 'UTF-8' )]
[startGuard( className )/]

#include <iostream>
#include <iomanip>

#include "helper/TestSuiteCountHelper.hpp"
#include "helper/TestSuiteMemoryHelper.hpp"
#include "helper/TestSuiteTimeHelper.hpp"

class [className/] {
	public:
		static void CollectTestStartStatistics() {
			TestSuiteCountHelper::IncNumOfStartedTests();
			TestSuiteMemoryHelper::SetProcessSizeAtTestBegin();
			TestSuiteTimeHelper::SetTimeAtTestBegin();
		}

		static void CollectTestEndStatistics() {
			TestSuiteTimeHelper::SetTimeAtTestEnd();
			TestSuiteMemoryHelper::SetProcessSizeAtTestEnd();
		}

		static void PrintTestsStatistics() {
			std::cout << "memory difference: " << std::setw( 7 ) << TestSuiteMemoryHelper::GetProcessSizeDifferenzInKB() << " kb"<< std::endl
				      << "run time:          " << std::setw( 7 ) << (long)TestSuiteTimeHelper::GetTestRuntimeInMS() << " ms" << std::endl;
		}
		static void PrintTestsCountStatistic() {
			int barLength = 80;
			int passed = TestSuiteCountHelper::GetNumOfPassedTests() * barLength / TestSuiteCountHelper::GetNumOfStartedTests();
			std::cout << std::endl << "Tests passed/executed: " << TestSuiteCountHelper::GetNumOfPassedTests() << "/" << TestSuiteCountHelper::GetNumOfStartedTests()
					<< " ['['/]" << std::setfill( '-' ) << std::setw( passed ) << "" << std::setfill( '#' ) << std::setw( barLength - passed ) << "" << "]"
					<< std::endl  << std::setfill( ' ' )
					<< "Tests executed: " << std::setw( 4 ) << TestSuiteCountHelper::GetNumOfStartedTests()  << std::endl
					<< "Tests passed:   " << std::setw( 4 )  << TestSuiteCountHelper::GetNumOfPassedTests()  << std::endl
					<< "Tests failed:   " << std::setw( 4 )  << TestSuiteCountHelper::GetNumOfFailedTests()  << std::endl;
		}
};

[endGuard( className )/]
[/file]
[/template]

# DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN
# @generator: ecore4cpp::generator::main::generateBuildFile

# C++ project of model ecore.ecore, generated by Ecore4CPP

CMAKE_MINIMUM_REQUIRED(VERSION 3.9)


PROJECT(ecore_Interface)
set(ecore_Interface_VERSION 0.1)

IF(NOT CMAKE_BUILD_TYPE) 
    SET(CMAKE_BUILD_TYPE Debug)
ENDIF(NOT CMAKE_BUILD_TYPE)
SET(CMAKE_DEBUG_POSTFIX d)

SET(CMAKE_CXX_STANDARD 17)

SET(SOURCE_FILES_Interface
# Factories and packages
	ecoreFactory.hpp
	ecorePackage.hpp
# Package plugin
	ecorePlugin.hpp
# Package content
	EAnnotation.hpp
	EAttribute.hpp
	EClass.hpp
	EClassifier.hpp
	EDataType.hpp
	EEnum.hpp
	EEnumLiteral.hpp
	EFactory.hpp
	EGenericType.hpp
	EModelElement.hpp
	ENamedElement.hpp
	EObject.hpp
	EObjectAny.hpp
	EObjectContainer.hpp
	EOperation.hpp
	EPackage.hpp
	EParameter.hpp
	EReference.hpp
	EStringToStringMapEntry.hpp
	EStructuralFeature.hpp
	ETypeParameter.hpp
	ETypedElement.hpp
)

ADD_LIBRARY(ecore_Interface INTERFACE ${SOURCE_FILES_Interface})
TARGET_LINK_LIBRARIES(${PROJECT_NAME}
)
ADD_LIBRARY(ecore::ecore_Interface ALIAS ecore_Interface)



PROJECT(ecore)
set(ecore_VERSION 0.1)

#list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}")
#list(APPEND CMAKE_MODULE_PATH ${MDE4CPP_HOME}/application/lib/cmake/})
#list(APPEND CMAKE_MODULE_PATH ${MDE4CPP_HOME}/application/lib/cmake/ecore})

IF(NOT CMAKE_BUILD_TYPE) 
    SET(CMAKE_BUILD_TYPE Debug)
ENDIF(NOT CMAKE_BUILD_TYPE)
SET(CMAKE_DEBUG_POSTFIX d)

SET(CMAKE_CXX_STANDARD 17)
				

IF(("$ENV{DEBUG_MESSAGE_ECORE}" EQUAL "1") AND (CMAKE_BUILD_TYPE MATCHES Debug))
	SET(ENABLED_DEBUG_MESSAGE " ")
ELSE()
	SET(ENABLED_DEBUG_MESSAGE " -DNDEBUG")
ENDIF()
IF("$ENV{DEBUG_MESSAGE_ACTIVITY_DEBUGGER}" EQUAL "1")
	SET(ENABLED_DEBUG_MESSAGE "${ENABLED_DEBUG_MESSAGE} -DACTIVITY_DEBUG_ON")
ENDIF()

SET(CMAKE_CXX_FLAGS "-Wall -Wno-overloaded-virtual -Wdeprecated-declarations -fmax-errors=5")
IF(APPLE)
  string(APPEND CMAKE_CXX_FLAGS " -Qunused-arguments")
ENDIF(APPLE)
SET(CMAKE_CXX_FLAGS_DEBUG " -Og -ggdb ${ENABLED_DEBUG_MESSAGE}")
SET(CMAKE_CXX_FLAGS_RELEASE " -O3  ${ENABLED_DEBUG_MESSAGE}")

string(REPLACE "\\" "/" MDE4CPP_HOME $ENV{MDE4CPP_HOME})

ADD_LIBRARY(${PROJECT_NAME} SHARED )
target_sources(ecore
PRIVATE
# Factories and packages
	impl/ecoreFactoryImpl.cpp
	impl/ecorePackageImpl.cpp
	impl/ecorePackageImpl_Creation.cpp
	impl/ecorePackageImpl_Initialization.cpp
# Package plugin
	impl/ecorePluginImpl.cpp
# Package content
	impl/EAnnotationImpl.cpp
	impl/EAttributeImpl.cpp
	impl/EClassImpl.cpp
	impl/EClassifierImpl.cpp
	impl/EDataTypeImpl.cpp
	impl/EEnumImpl.cpp
	impl/EEnumLiteralImpl.cpp
	impl/EFactoryImpl.cpp
	impl/EGenericTypeImpl.cpp
	impl/EModelElementImpl.cpp
	impl/ENamedElementImpl.cpp
	impl/EObjectImpl.cpp
	impl/EObjectAnyImpl.cpp
	impl/EObjectContainerImpl.cpp
	impl/EOperationImpl.cpp
	impl/EPackageImpl.cpp
	impl/EParameterImpl.cpp
	impl/EReferenceImpl.cpp
	impl/EStringToStringMapEntryImpl.cpp
	impl/EStructuralFeatureImpl.cpp
	impl/ETypeParameterImpl.cpp
	impl/ETypedElementImpl.cpp
	#${MDE4CPP_HOME}/application/include/util/ProfileCallCount.cpp
)


# Apple specific stuff
if(APPLE)
  set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -undefined dynamic_lookup")
  set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} -undefined dynamic_lookup")
endif(APPLE)


#--------------------------------------------




TARGET_LINK_LIBRARIES(${PROJECT_NAME}
)
#create an alias lib for ecore
add_library(ecore::ecore ALIAS ecore)

ADD_DEFINITIONS(-DBUILD_ECORE=1)

TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME}
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
        $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
    PRIVATE
		${MDE4CPP_HOME}/application/include        
		${CMAKE_SOURCE_DIR}/.. 
		${MDE4CPP_HOME}/src/ecore/src_gen
)

SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES PREFIX "")

#-----------------------------------------------------
# DELIVERING binaries and header to ${MDE4CPP_HOME} 
#-----------------------------------------------------

INSTALL(TARGETS ecore EXPORT ecoreTargets
	RUNTIME DESTINATION ${MDE4CPP_HOME}/application/bin
    LIBRARY DESTINATION ${MDE4CPP_HOME}/application/bin
    ARCHIVE DESTINATION ${MDE4CPP_HOME}/application/lib
  	INCLUDES DESTINATION ${MDE4CPP_HOME}/application/include
)

#-----------------------------------------------------
# DELIVERING binaries and header to ${MDE4CPP_HOME} 
#-----------------------------------------------------

INSTALL(TARGETS ecore_Interface EXPORT ecore_InterfaceTargets
	RUNTIME DESTINATION ${MDE4CPP_HOME}/application/bin
    LIBRARY DESTINATION ${MDE4CPP_HOME}/application/bin
    ARCHIVE DESTINATION ${MDE4CPP_HOME}/application/lib
  	INCLUDES DESTINATION ${MDE4CPP_HOME}/application/include
)


INSTALL(DIRECTORY . DESTINATION ${MDE4CPP_HOME}/application/include/ecore
	FILES_MATCHING PATTERN "*.hpp"
	PATTERN ".cmake" EXCLUDE
)

#-----------------------------------------------------------------------
# CREATE, Configure and DELIVER cmake package targets to ${MDE4CPP_HOME} 
#-----------------------------------------------------------------------

INSTALL(
  EXPORT ecoreTargets
  FILE ecoreTargets.cmake
  DESTINATION ${MDE4CPP_HOME}/application/lib/cmake/ecore
  NAMESPACE ecore::
)

INCLUDE(CMakePackageConfigHelpers)
CONFIGURE_PACKAGE_CONFIG_FILE(
    "ecore.cmake.in"
    "${CMAKE_CURRENT_BINARY_DIR}/ecore-config.cmake"
    INSTALL_DESTINATION ${MDE4CPP_HOME}/application/lib/cmake/ecore
)

SET_PROPERTY(TARGET ecore PROPERTY VERSION ${ecore_VERSION})
WRITE_BASIC_PACKAGE_VERSION_FILE(
  "${CMAKE_CURRENT_BINARY_DIR}/ecore-configVersion.cmake"
  VERSION ${ecore_VERSION}
  COMPATIBILITY AnyNewerVersion
)
#-----------------------------------------------------------------------
# CREATE, Configure and DELIVER cmake package targets to ${MDE4CPP_HOME} 
#-----------------------------------------------------------------------

INSTALL(
  EXPORT ecore_InterfaceTargets
  FILE ecore_InterfaceTargets.cmake
  DESTINATION ${MDE4CPP_HOME}/application/lib/cmake/ecore
  NAMESPACE ecore::
)

INCLUDE(CMakePackageConfigHelpers)
CONFIGURE_PACKAGE_CONFIG_FILE(
    "ecore_Interface.cmake.in"
    "${CMAKE_CURRENT_BINARY_DIR}/ecore_Interface-config.cmake"
    INSTALL_DESTINATION ${MDE4CPP_HOME}/application/lib/cmake/ecore
)

SET_PROPERTY(TARGET ecore_Interface PROPERTY VERSION ${ecore_Interface_VERSION})
WRITE_BASIC_PACKAGE_VERSION_FILE(
  "${CMAKE_CURRENT_BINARY_DIR}/ecore_Interface-configVersion.cmake"
  VERSION ${ecore_Interface_VERSION}
  COMPATIBILITY AnyNewerVersion
)

INSTALL(
  FILES
     "${CMAKE_CURRENT_BINARY_DIR}/ecore-config.cmake"
 	 "${CMAKE_CURRENT_BINARY_DIR}/ecore-configVersion.cmake"
     "${CMAKE_CURRENT_BINARY_DIR}/ecore_Interface-config.cmake"
 	 "${CMAKE_CURRENT_BINARY_DIR}/ecore_Interface-configVersion.cmake"
  DESTINATION
   "${MDE4CPP_HOME}/application/lib/cmake/ecore"
)
INCLUDE(GenerateExportHeader)
GENERATE_EXPORT_HEADER(${PROJECT_NAME})



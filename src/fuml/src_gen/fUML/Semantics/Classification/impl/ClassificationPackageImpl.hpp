//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_SEMANTICS_CLASSIFICATIONPACKAGEIMPL_HPP
#define FUML_SEMANTICS_CLASSIFICATIONPACKAGEIMPL_HPP

// namespace macro header include
#include "fUML/fUML.hpp"

#include "ecore/ecorePackage.hpp"
#include "ecore/impl/EPackageImpl.hpp"

#include "fUML/Semantics/Classification/ClassificationPackage.hpp" 


namespace fUML::Semantics::Classification 
{
}

namespace ecore
{
	class ecoreFactory;
}

namespace fUML::Semantics::Classification
{
	class FUML_API ClassificationPackageImpl : public ecore::EPackageImpl ,virtual public ClassificationPackage
	{
		private:    
			ClassificationPackageImpl(ClassificationPackageImpl const&) = delete;
			ClassificationPackageImpl& operator=(ClassificationPackageImpl const&) = delete;

		protected:
			ClassificationPackageImpl();

		public:
			virtual ~ClassificationPackageImpl();


			
			// SubPackages Getters
			

		private:
			
			
			
			
			

			friend class ClassificationPackage;

			static bool isInited;
			static ClassificationPackage* create();
			bool isInitialized = false;
 			bool isCreated = false;

			virtual void init(std::shared_ptr<ecore::EPackage> package);

		public:
			void createPackageContents(std::shared_ptr<ecore::EPackage> package);
			void initializePackageContents();

		private:
			void createPackageEDataTypes(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);

			void initializePackageEDataTypes();



	};
}
#endif /* end of include guard: FUML_SEMANTICS_CLASSIFICATIONPACKAGEIMPL_HPP */

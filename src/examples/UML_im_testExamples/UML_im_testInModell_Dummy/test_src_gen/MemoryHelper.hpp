//********************************************************************
//*    	
//* Warning: This file was generated by MDE4CPP Generator
//*
//********************************************************************

#ifndef MEMORYHELPER_HPP
#define MEMORYHELPER_HPP

#ifdef _WIN32

#include "windows.h"
#include "psapi.h"

unsigned long getCurrentMemoryUsageInKB() {

	PROCESS_MEMORY_COUNTERS_EX pmc;

	memset( &pmc, 0, sizeof( pmc ) );
	if( GetProcessMemoryInfo( GetCurrentProcess(), (PROCESS_MEMORY_COUNTERS*)&pmc, sizeof( pmc ) ) ) {
		return pmc.PrivateUsage / 1024;
	}
	return 0;
}

#elif __linux__

#include "stdlib.h"
#include "stdio.h"
#include "string.h"

unsigned long parseLine( char* line ) {

    // This assumes that a digit will be found and the line ends in " Kb".
    unsigned long i = strlen( line );
    const char* p = line;
    while( *p <'0' || *p > '9' ) p++;
    line[i-3] = '\0';
    i = atoi( p );
    return i;
}

unsigned long getCurrentMemoryUsageInKB() { //Note: this value is in KB!

    FILE* file = fopen( "/proc/self/status", "r" );
    unsigned long result = 0;
    char line[128];

    while( fgets( line, 128, file ) != NULL ) {
        if ( strncmp( line, "VmSize:", 7 ) == 0 ) {
            result = parseLine( line );
            break;
        }
    }
    fclose( file );
    return result;
}

#else

#error "getCurrentMemoryUsage not implemented"

#endif

unsigned long getMemoryDiff( unsigned long memory1, unsigned long memory2 ) {

	return memory2 - memory1;
}

#endif /* end of include guard: MEMORYHELPER_HPP */

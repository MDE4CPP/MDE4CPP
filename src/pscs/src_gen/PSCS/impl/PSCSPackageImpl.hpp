//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef PSCSPACKAGEIMPL_HPP
#define PSCSPACKAGEIMPL_HPP

#include "ecore/EcorePackage.hpp"
#include "ecore/impl/EPackageImpl.hpp"

#include "PSCS/PSCSPackage.hpp" 


namespace PSCS 
{
	namespace Semantics 
	{
		class SemanticsPackage;
	}
}

namespace ecore
{
	class EcoreFactory;
}

namespace PSCS
{
	class PSCSPackageImpl : public ecore::EPackageImpl ,virtual public PSCSPackage
	{
		private:    
			PSCSPackageImpl(PSCSPackageImpl const&) = delete;
			PSCSPackageImpl& operator=(PSCSPackageImpl const&) = delete;

		protected:
			PSCSPackageImpl();

		public:
			virtual ~PSCSPackageImpl();


			
			// SubPackages Getters
			virtual std::shared_ptr<Semantics::SemanticsPackage> getSemantics_Package() const ;
			

		private:
			
			
			
			
			

			friend class PSCSPackage;

			static bool isInited;
			static PSCSPackage* create();
			bool isInitialized = false;
 			bool isCreated = false;

			virtual void init(std::shared_ptr<ecore::EPackage> package);

		public:
			void createPackageContents(std::shared_ptr<ecore::EPackage> package);
			void initializePackageContents();

		private:
			void createPackageEDataTypes(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);

			void initializePackageEDataTypes();



	};
}
#endif /* end of include guard: PSCSPACKAGEIMPL_HPP */

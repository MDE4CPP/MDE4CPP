//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef UML_PROTOCOLCONFORMANCEPROTOCOLCONFORMANCEIMPL_HPP
#define UML_PROTOCOLCONFORMANCEPROTOCOLCONFORMANCEIMPL_HPP

//*********************************
// generated Includes

// namespace macro header include
#include "uml/uml.hpp" 

// model includes
#include "../ProtocolConformance.hpp"

#include "uml/impl/DirectedRelationshipImpl.hpp"

//*********************************
namespace uml 
{
	class UML_API ProtocolConformanceImpl : virtual public DirectedRelationshipImpl, virtual public ProtocolConformance 
	{
		public: 
			ProtocolConformanceImpl(const ProtocolConformanceImpl & obj);
			virtual std::shared_ptr<ecore::EObject> copy() const;
			ProtocolConformanceImpl& operator=(ProtocolConformanceImpl const&); 

		protected:
			friend class umlFactoryImpl;
			ProtocolConformanceImpl();
			virtual std::shared_ptr<uml::ProtocolConformance> getThisProtocolConformancePtr() const;
			virtual void setThisProtocolConformancePtr(std::weak_ptr<uml::ProtocolConformance> thisProtocolConformancePtr);

			//Additional constructors for the containments back reference
			ProtocolConformanceImpl(std::weak_ptr<uml::Element> par_owner);
			//Additional constructors for the containments back reference
			ProtocolConformanceImpl(std::weak_ptr<uml::ProtocolStateMachine> par_specificMachine);

		public:
			//destructor
			virtual ~ProtocolConformanceImpl();
			
			//*********************************
			// Operations
			//*********************************
			
			//*********************************
			// Attribute Getters & Setters
			//*********************************
			
			//*********************************
			// Reference Getters & Setters
			//*********************************
			/*!
			Specifies the ProtocolStateMachine to which the specific ProtocolStateMachine conforms.
			<p>From package UML::StateMachines.</p>
			*/
			
			virtual std::shared_ptr<uml::ProtocolStateMachine> getGeneralMachine() const ;
			/*!
			Specifies the ProtocolStateMachine to which the specific ProtocolStateMachine conforms.
			<p>From package UML::StateMachines.</p>
			*/
			
			virtual void setGeneralMachine(std::shared_ptr<uml::ProtocolStateMachine>) ;
			/*!
			Specifies the ProtocolStateMachine which conforms to the general ProtocolStateMachine.
			<p>From package UML::StateMachines.</p>
			*/
			
			virtual std::weak_ptr<uml::ProtocolStateMachine> getSpecificMachine() const ;
			/*!
			Specifies the ProtocolStateMachine which conforms to the general ProtocolStateMachine.
			<p>From package UML::StateMachines.</p>
			*/
			
			virtual void setSpecificMachine(std::weak_ptr<uml::ProtocolStateMachine>) ;
			
			//*********************************
			// Union Reference Getters
			//*********************************
			
			//*********************************
			// Container Getter
			//*********************************
			virtual std::shared_ptr<ecore::EObject> eContainer() const ; 

		protected:
			virtual std::shared_ptr<ecore::EClass> eStaticClass() const;

			//*********************************
			// EStructuralFeature Get/Set/IsSet
			//*********************************
			virtual std::shared_ptr<Any> eGet(int featureID, bool resolve, bool coreType) const ;
			virtual bool eSet(int featureID, std::shared_ptr<Any> newValue) ;
			virtual bool internalEIsSet(int featureID) const ;

			//*********************************
			// EOperation Invoke
			//*********************************
			virtual std::shared_ptr<Any> eInvoke(int operationID, std::shared_ptr<Bag<Any>> arguments) ;

		private:
			std::weak_ptr<uml::ProtocolConformance> m_thisProtocolConformancePtr;
	};
}
#endif /* end of include guard: UML_PROTOCOLCONFORMANCEPROTOCOLCONFORMANCEIMPL_HPP */

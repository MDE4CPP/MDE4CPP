[comment encoding = UTF-8 /]
[module helper('http://www.eclipse.org/uml2/5.0.0/UML','http://www.eclipse.org/emf/2002/Ecore')]

[template public printlnToStdout( text : String )]
[file ('stdout', false)]
[text/]
[/file]
[/template]

[query public buildHeaderPath( path : String ) : String = 'test_src_gen/'.concat( path ).concat( '.hpp' )/]

[query public buildSourcePath( path : String ) : String = 'test_src_gen/'.concat( path ).concat( '.cpp' )/]

[query public buildTestSuiteName( name : String ) : String = name.concat( '_TestSuite' )/]

[template public startGuard( name : String )]
//********************************************************************
//*    	
//* Warning: This file was generated by MDE4CPP Generator
//*
//********************************************************************

#ifndef [name.concat( '_hpp' ).toUpperCase()/]
#define [name.concat( '_hpp' ).toUpperCase()/]

[/template]

[template public endGuard( name : String )]

#endif /* end of include guard: [name.concat( '_hpp' ).toUpperCase()/] */
[/template]

[query public getTestCodeDetails( annotations : EAnnotation ) : Bag(EStringToStringMapEntry) = annotations->select( source = 'testCodeGen' ).details->select( not key.matches( 'includes' ) )/]

[template public generateTestOperations( annotations : EAnnotation, elementName : String )]
[for( detail : EStringToStringMapEntry | annotations.getTestCodeDetails() ) separator ('\n')]
void [detail.key/]_[elementName/]Test() {

[detail.value/]
}	
[/for]
[/template]

[template public generateMakeSuite( annotations : OrderedSet(EAnnotation), elementName : String )]
cute::suite make_suite_[elementName.buildTestSuiteName()/]() {

	cute::suite s { };

[for( detail : EStringToStringMapEntry | annotations.getTestCodeDetails() )]
	s += CUTE( [detail.key/]_[elementName/]Test );
[/for]
	return s;
}
[/template]

[query public getIncludes( annotations : EAnnotation ) : Bag(EStringToStringMapEntry) = annotations->select( source = 'testCodeGen' ).details->select( key.matches( 'includes' ) )/]

[template public generateIncludes( annotations : EAnnotation )]
[annotations.getIncludes().value/]
[/template]

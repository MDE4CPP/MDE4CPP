# DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN
# @generator: ecore4cpp::generator::main::generateBuildFile

# C++ project of model fUML/Semantics/Activities.ecore, generated by Ecore4CPP

CMAKE_MINIMUM_REQUIRED(VERSION 3.9)


PROJECT(fUML_Semantics_Activities_Interface)
set(fUML_Semantics_Activities_Interface_VERSION 0.0.1) #No Version codegen annotation defined in model fUML. Use default version. 

IF(NOT CMAKE_BUILD_TYPE) 
    SET(CMAKE_BUILD_TYPE Debug)
ENDIF(NOT CMAKE_BUILD_TYPE)
SET(CMAKE_DEBUG_POSTFIX d)

SET(CMAKE_CXX_STANDARD 17)

SET(SOURCE_FILES_Interface
# Factories and packages
	ActivitiesFactory.hpp
	ActivitiesPackage.hpp
# Package content
	ActivityEdgeInstance.hpp
	ActivityExecution.hpp
	ActivityFinalNodeActivation.hpp
	ActivityNodeActivation.hpp
	ActivityNodeActivationGroup.hpp
	ActivityParameterNodeActivation.hpp
	CentralBufferNodeActivation.hpp
	ClassifierBehaviorExecutionActivity.hpp
	ClassifierBehaviorExecutionActivity_OwnedBehaviorActivity1.hpp
	ControlNodeActivation.hpp
	ControlToken.hpp
	DataStoreNodeActivation.hpp
	DecisionNodeActivation.hpp
	ExpansionActivationGroup.hpp
	ExpansionNodeActivation.hpp
	ExpansionRegionActivation.hpp
	FlowFinalNodeActivation.hpp
	ForkNodeActivation.hpp
	ForkedToken.hpp
	InitialNodeActivation.hpp
	JoinNodeActivation.hpp
	MergeNodeActivation.hpp
	ObjectNodeActivation.hpp
	ObjectToken.hpp
	Offer.hpp
	Token.hpp
	TokenSet.hpp
)

ADD_LIBRARY(fUML_Semantics_Activities_Interface INTERFACE ${SOURCE_FILES_Interface})
TARGET_LINK_LIBRARIES(${PROJECT_NAME}
	INTERFACE fUML::Semantics::CommonBehavior::fUML_Semantics_CommonBehavior
	INTERFACE uml::uml
	INTERFACE fUML::Semantics::Actions::fUML_Semantics_Actions
	INTERFACE fUML::Semantics::Values::fUML_Semantics_Values
	INTERFACE ecore::ecore
	INTERFACE types::types
)
ADD_LIBRARY(fUML::Semantics::Activities::fUML_Semantics_Activities_Interface ALIAS fUML_Semantics_Activities_Interface)



PROJECT(fUML_Semantics_Activities)
set(fUML_Semantics_Activities_VERSION 0.0.1) #No Version codegen annotation defined in model fUML. Use default version. 

#list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}")
#list(APPEND CMAKE_MODULE_PATH ${MDE4CPP_HOME}/application/lib/cmake/})
#list(APPEND CMAKE_MODULE_PATH ${MDE4CPP_HOME}/application/lib/cmake/fUML_Semantics_Activities})

IF(NOT CMAKE_BUILD_TYPE) 
    SET(CMAKE_BUILD_TYPE Debug)
ENDIF(NOT CMAKE_BUILD_TYPE)
SET(CMAKE_DEBUG_POSTFIX d)

SET(CMAKE_CXX_STANDARD 17)
				

IF(("$ENV{DEBUG_MESSAGE_FUML_SEMANTICS_ACTIVITIES}" EQUAL "1") AND (CMAKE_BUILD_TYPE MATCHES Debug))
	SET(ENABLED_DEBUG_MESSAGE " ")
ELSE()
	SET(ENABLED_DEBUG_MESSAGE " -DNDEBUG")
ENDIF()
IF("$ENV{DEBUG_MESSAGE_ACTIVITY_DEBUGGER}" EQUAL "1")
	SET(ENABLED_DEBUG_MESSAGE "${ENABLED_DEBUG_MESSAGE} -DACTIVITY_DEBUG_ON")
ENDIF()

SET(CMAKE_CXX_FLAGS "-Wall -Wno-overloaded-virtual -Wdeprecated-declarations -fmax-errors=5")
IF(APPLE)
  string(APPEND CMAKE_CXX_FLAGS " -Qunused-arguments")
ENDIF(APPLE)
SET(CMAKE_CXX_FLAGS_DEBUG " -Og -ggdb ${ENABLED_DEBUG_MESSAGE}")
SET(CMAKE_CXX_FLAGS_RELEASE " -O3  ${ENABLED_DEBUG_MESSAGE}")

string(REPLACE "\\" "/" MDE4CPP_HOME $ENV{MDE4CPP_HOME})

SET(SOURCE_FILES
# Factories and packages
	impl/ActivitiesFactoryImpl.cpp
	impl/ActivitiesPackageImpl.cpp
	impl/ActivitiesPackageImpl_Creation.cpp
	impl/ActivitiesPackageImpl_Initialization.cpp
# Package content
	impl/ActivityEdgeInstanceImpl.cpp
	impl/ActivityExecutionImpl.cpp
	impl/ActivityFinalNodeActivationImpl.cpp
	impl/ActivityNodeActivationImpl.cpp
	impl/ActivityNodeActivationGroupImpl.cpp
	impl/ActivityParameterNodeActivationImpl.cpp
	impl/CentralBufferNodeActivationImpl.cpp
	impl/ClassifierBehaviorExecutionActivityImpl.cpp
	impl/ClassifierBehaviorExecutionActivity_OwnedBehaviorActivity1Impl.cpp
	impl/ControlNodeActivationImpl.cpp
	impl/ControlTokenImpl.cpp
	impl/DataStoreNodeActivationImpl.cpp
	impl/DecisionNodeActivationImpl.cpp
	impl/ExpansionActivationGroupImpl.cpp
	impl/ExpansionNodeActivationImpl.cpp
	impl/ExpansionRegionActivationImpl.cpp
	impl/FlowFinalNodeActivationImpl.cpp
	impl/ForkNodeActivationImpl.cpp
	impl/ForkedTokenImpl.cpp
	impl/InitialNodeActivationImpl.cpp
	impl/JoinNodeActivationImpl.cpp
	impl/MergeNodeActivationImpl.cpp
	impl/ObjectNodeActivationImpl.cpp
	impl/ObjectTokenImpl.cpp
	impl/OfferImpl.cpp
	impl/TokenImpl.cpp
	impl/TokenSetImpl.cpp
	#${MDE4CPP_HOME}/application/include/util/ProfileCallCount.cpp
)


# Apple specific stuff
if(APPLE)
  set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -undefined dynamic_lookup")
  set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} -undefined dynamic_lookup")
endif(APPLE)


#--------------------------------------------


set(uml_DIR "${MDE4CPP_HOME}/application/lib/cmake/uml")
set(uml_Interface_DIR "${MDE4CPP_HOME}/application/lib/cmake/uml")
set(ecore_DIR "${MDE4CPP_HOME}/application/lib/cmake/ecore")
set(ecore_Interface_DIR "${MDE4CPP_HOME}/application/lib/cmake/ecore")
set(types_DIR "${MDE4CPP_HOME}/application/lib/cmake/types")
set(types_Interface_DIR "${MDE4CPP_HOME}/application/lib/cmake/types")
find_package(fUML_Semantics_CommonBehavior CONFIG)
find_package(fUML_Semantics_CommonBehavior_Interface CONFIG)
find_package(uml CONFIG)
find_package(uml_Interface CONFIG)
find_package(fUML_Semantics_Actions CONFIG)
find_package(fUML_Semantics_Actions_Interface CONFIG)
find_package(fUML_Semantics_Values CONFIG)
find_package(fUML_Semantics_Values_Interface CONFIG)
find_package(ecore CONFIG)
find_package(ecore_Interface CONFIG)
find_package(types CONFIG)
find_package(types_Interface CONFIG)
find_package(fUML CONFIG)
find_package(fUML_Interface CONFIG)
message("Dir_Name: ${fUML_Semantics_CommonBehavior_DIR}")
message("Interface_Dir_Name: ${fUML_Semantics_CommonBehavior_Interface_DIR}") 
message("CommonBehaviorLibrarry fUML_Semantics_CommonBehavior: ${fUML_Semantics_CommonBehavior_FOUND} (Version ${fUML_Semantics_CommonBehavior_VERSION})
         fUML_Semantics_CommonBehavior libs: ${fUML_Semantics_CommonBehavior_LIBRARIES}
         fUML_Semantics_CommonBehavior includes: ${fUML_Semantics_CommonBehavior_INCLUDE_DIRS}
Librarry fUML_Semantics_CommonBehavior_Interface: ${fUML_Semantics_CommonBehavior_Interface_FOUND} (Version ${fUML_Semantics_CommonBehavior_Interface_VERSION})
         fUML_Semantics_CommonBehavior libs_Interface: ${fUML_Semantics_CommonBehavior_Interface_LIBRARIES}
         fUML_Semantics_CommonBehavior includes_Interface: ${fUML_Semantics_CommonBehavior_Interface_INCLUDE_DIRS}
")
message("Dir_Name: ${uml_DIR}")
message("Interface_Dir_Name: ${uml_Interface_DIR}") 
message("umlLibrarry uml: ${uml_FOUND} (Version ${uml_VERSION})
         uml libs: ${uml_LIBRARIES}
         uml includes: ${uml_INCLUDE_DIRS}
Librarry uml_Interface: ${uml_Interface_FOUND} (Version ${uml_Interface_VERSION})
         uml libs_Interface: ${uml_Interface_LIBRARIES}
         uml includes_Interface: ${uml_Interface_INCLUDE_DIRS}
")
message("Dir_Name: ${fUML_Semantics_Actions_DIR}")
message("Interface_Dir_Name: ${fUML_Semantics_Actions_Interface_DIR}") 
message("ActionsLibrarry fUML_Semantics_Actions: ${fUML_Semantics_Actions_FOUND} (Version ${fUML_Semantics_Actions_VERSION})
         fUML_Semantics_Actions libs: ${fUML_Semantics_Actions_LIBRARIES}
         fUML_Semantics_Actions includes: ${fUML_Semantics_Actions_INCLUDE_DIRS}
Librarry fUML_Semantics_Actions_Interface: ${fUML_Semantics_Actions_Interface_FOUND} (Version ${fUML_Semantics_Actions_Interface_VERSION})
         fUML_Semantics_Actions libs_Interface: ${fUML_Semantics_Actions_Interface_LIBRARIES}
         fUML_Semantics_Actions includes_Interface: ${fUML_Semantics_Actions_Interface_INCLUDE_DIRS}
")
message("Dir_Name: ${fUML_Semantics_Values_DIR}")
message("Interface_Dir_Name: ${fUML_Semantics_Values_Interface_DIR}") 
message("ValuesLibrarry fUML_Semantics_Values: ${fUML_Semantics_Values_FOUND} (Version ${fUML_Semantics_Values_VERSION})
         fUML_Semantics_Values libs: ${fUML_Semantics_Values_LIBRARIES}
         fUML_Semantics_Values includes: ${fUML_Semantics_Values_INCLUDE_DIRS}
Librarry fUML_Semantics_Values_Interface: ${fUML_Semantics_Values_Interface_FOUND} (Version ${fUML_Semantics_Values_Interface_VERSION})
         fUML_Semantics_Values libs_Interface: ${fUML_Semantics_Values_Interface_LIBRARIES}
         fUML_Semantics_Values includes_Interface: ${fUML_Semantics_Values_Interface_INCLUDE_DIRS}
")
message("Dir_Name: ${ecore_DIR}")
message("Interface_Dir_Name: ${ecore_Interface_DIR}") 
message("ecoreLibrarry ecore: ${ecore_FOUND} (Version ${ecore_VERSION})
         ecore libs: ${ecore_LIBRARIES}
         ecore includes: ${ecore_INCLUDE_DIRS}
Librarry ecore_Interface: ${ecore_Interface_FOUND} (Version ${ecore_Interface_VERSION})
         ecore libs_Interface: ${ecore_Interface_LIBRARIES}
         ecore includes_Interface: ${ecore_Interface_INCLUDE_DIRS}
")
message("Dir_Name: ${types_DIR}")
message("Interface_Dir_Name: ${types_Interface_DIR}") 
message("typesLibrarry types: ${types_FOUND} (Version ${types_VERSION})
         types libs: ${types_LIBRARIES}
         types includes: ${types_INCLUDE_DIRS}
Librarry types_Interface: ${types_Interface_FOUND} (Version ${types_Interface_VERSION})
         types libs_Interface: ${types_Interface_LIBRARIES}
         types includes_Interface: ${types_Interface_INCLUDE_DIRS}
")
message("Dir_Name: ${fUML_DIR}")
message("Interface_Dir_Name: ${fUML_Interface_DIR}") 
message("fUMLLibrarry fUML: ${fUML_FOUND} (Version ${fUML_VERSION})
         fUML libs: ${fUML_LIBRARIES}
         fUML includes: ${fUML_INCLUDE_DIRS}
Librarry fUML_Interface: ${fUML_Interface_FOUND} (Version ${fUML_Interface_VERSION})
         fUML libs_Interface: ${fUML_Interface_LIBRARIES}
         fUML includes_Interface: ${fUML_Interface_INCLUDE_DIRS}
")



ADD_LIBRARY(${PROJECT_NAME} SHARED ${SOURCE_FILES})
TARGET_LINK_LIBRARIES(${PROJECT_NAME}
	PRIVATE fUML::Semantics::CommonBehavior::fUML_Semantics_CommonBehavior
	PRIVATE uml::uml
	PRIVATE fUML::Semantics::Actions::fUML_Semantics_Actions
	PRIVATE fUML::Semantics::Values::fUML_Semantics_Values
	PRIVATE ecore::ecore
	PRIVATE types::types
)
#create an alias lib for fUML_Semantics_Activities
add_library(fUML::Semantics::Activities::fUML_Semantics_Activities ALIAS fUML_Semantics_Activities)

ADD_DEFINITIONS(-DBUILD_FUML=1)

TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME}
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
        $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
    PRIVATE
		${MDE4CPP_HOME}/application/include        
		${CMAKE_SOURCE_DIR}/.. 
		${MDE4CPP_HOME}/src/fUML/Semantics/Activities/src_gen
)

SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES PREFIX "")

#-----------------------------------------------------
# DELIVERING binaries and header to ${MDE4CPP_HOME} 
#-----------------------------------------------------

INSTALL(TARGETS fUML_Semantics_Activities EXPORT fUML_Semantics_ActivitiesTargets
	RUNTIME DESTINATION ${MDE4CPP_HOME}/application/bin
    LIBRARY DESTINATION ${MDE4CPP_HOME}/application/bin
    ARCHIVE DESTINATION ${MDE4CPP_HOME}/application/lib
  	INCLUDES DESTINATION ${MDE4CPP_HOME}/application/include
)

#-----------------------------------------------------
# DELIVERING binaries and header to ${MDE4CPP_HOME} 
#-----------------------------------------------------

INSTALL(TARGETS fUML_Semantics_Activities_Interface EXPORT fUML_Semantics_Activities_InterfaceTargets
	RUNTIME DESTINATION ${MDE4CPP_HOME}/application/bin
    LIBRARY DESTINATION ${MDE4CPP_HOME}/application/bin
    ARCHIVE DESTINATION ${MDE4CPP_HOME}/application/lib
  	INCLUDES DESTINATION ${MDE4CPP_HOME}/application/include
)


INSTALL(DIRECTORY . DESTINATION ${MDE4CPP_HOME}/application/include/fUML/Semantics/Activities
	FILES_MATCHING PATTERN "*.hpp"
	PATTERN ".cmake" EXCLUDE
)

#-----------------------------------------------------------------------
# CREATE, Configure and DELIVER cmake package targets to ${MDE4CPP_HOME} 
#-----------------------------------------------------------------------

INSTALL(
  EXPORT fUML_Semantics_ActivitiesTargets
  FILE fUML_Semantics_ActivitiesTargets.cmake
  DESTINATION ${MDE4CPP_HOME}/application/lib/cmake/fUML
  NAMESPACE fUML::Semantics::Activities::
)

INCLUDE(CMakePackageConfigHelpers)
CONFIGURE_PACKAGE_CONFIG_FILE(
    "fUML_Semantics_Activities.cmake.in"
    "${CMAKE_CURRENT_BINARY_DIR}/fUML_Semantics_Activities-config.cmake"
    INSTALL_DESTINATION ${MDE4CPP_HOME}/application/lib/cmake/fUML
)

SET_PROPERTY(TARGET fUML_Semantics_Activities PROPERTY VERSION ${fUML_Semantics_Activities_VERSION})
WRITE_BASIC_PACKAGE_VERSION_FILE(
  "${CMAKE_CURRENT_BINARY_DIR}/fUML_Semantics_Activities-configVersion.cmake"
  VERSION ${fUML_Semantics_Activities_VERSION}
  COMPATIBILITY AnyNewerVersion
)
#-----------------------------------------------------------------------
# CREATE, Configure and DELIVER cmake package targets to ${MDE4CPP_HOME} 
#-----------------------------------------------------------------------

INSTALL(
  EXPORT fUML_Semantics_Activities_InterfaceTargets
  FILE fUML_Semantics_Activities_InterfaceTargets.cmake
  DESTINATION ${MDE4CPP_HOME}/application/lib/cmake/fUML
  NAMESPACE fUML::Semantics::Activities::
)

INCLUDE(CMakePackageConfigHelpers)
CONFIGURE_PACKAGE_CONFIG_FILE(
    "fUML_Semantics_Activities_Interface.cmake.in"
    "${CMAKE_CURRENT_BINARY_DIR}/fUML_Semantics_Activities_Interface-config.cmake"
    INSTALL_DESTINATION ${MDE4CPP_HOME}/application/lib/cmake/fUML
)

SET_PROPERTY(TARGET fUML_Semantics_Activities_Interface PROPERTY VERSION ${fUML_Semantics_Activities_Interface_VERSION})
WRITE_BASIC_PACKAGE_VERSION_FILE(
  "${CMAKE_CURRENT_BINARY_DIR}/fUML_Semantics_Activities_Interface-configVersion.cmake"
  VERSION ${fUML_Semantics_Activities_Interface_VERSION}
  COMPATIBILITY AnyNewerVersion
)

INSTALL(
  FILES
     "${CMAKE_CURRENT_BINARY_DIR}/fUML_Semantics_Activities-config.cmake"
 	 "${CMAKE_CURRENT_BINARY_DIR}/fUML_Semantics_Activities-configVersion.cmake"
     "${CMAKE_CURRENT_BINARY_DIR}/fUML_Semantics_Activities_Interface-config.cmake"
 	 "${CMAKE_CURRENT_BINARY_DIR}/fUML_Semantics_Activities_Interface-configVersion.cmake"
  DESTINATION
   "${MDE4CPP_HOME}/application/lib/cmake/fUML"
)
INCLUDE(GenerateExportHeader)
GENERATE_EXPORT_HEADER(${PROJECT_NAME})

export(TARGETS ${PROJECT_NAME} NAMESPACE fUML::Semantics::Activities:: FILE ${CMAKE_BINARY_DIR}/Activities/fUML_Semantics_Activities-config.cmake)
#create an alias lib for fUML_Semantics_Activities
add_library(fUML::Semantics::Activities::fUML_Semantics_Activities ALIAS fUML_Semantics_Activities)
file(WRITE ${CMAKE_BINARY_DIR}/Activities/fUML_Semantics_Activities-config.cmake "")


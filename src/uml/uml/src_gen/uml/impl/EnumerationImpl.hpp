//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef UML_ENUMERATIONENUMERATIONIMPL_HPP
#define UML_ENUMERATIONENUMERATIONIMPL_HPP

//*********************************
// generated Includes

// namespace macro header include
#include "uml/uml.hpp" 

// model includes
#include "../Enumeration.hpp"

#include "uml/impl/DataTypeImpl.hpp"

//*********************************
namespace uml 
{
	class UML_API EnumerationImpl : virtual public DataTypeImpl, virtual public Enumeration 
	{
		public: 
			EnumerationImpl(const EnumerationImpl & obj);
			virtual std::shared_ptr<ecore::EObject> copy() const;
			EnumerationImpl& operator=(EnumerationImpl const&); 

		protected:
			friend class umlFactoryImpl;
			EnumerationImpl();
			virtual std::shared_ptr<uml::Enumeration> getThisEnumerationPtr() const;
			virtual void setThisEnumerationPtr(std::weak_ptr<uml::Enumeration> thisEnumerationPtr);

			//Additional constructors for the containments back reference
			EnumerationImpl(std::weak_ptr<uml::Namespace> par_namespace);
			//Additional constructors for the containments back reference
			EnumerationImpl(std::weak_ptr<uml::Element> par_owner);
			//Additional constructors for the containments back reference
			EnumerationImpl(std::weak_ptr<uml::Package> par_Package, const int reference_id);
			//Additional constructors for the containments back reference
			EnumerationImpl(std::weak_ptr<uml::TemplateParameter> par_owningTemplateParameter);
			//Additional constructors for the containments back reference

		public:
			//destructor
			virtual ~EnumerationImpl();
			
			//*********************************
			// Operations
			//*********************************
			
			//*********************************
			// Attribute Getters & Setters
			//*********************************
			
			//*********************************
			// Reference Getters & Setters
			//*********************************
			/*!
			The ordered set of literals owned by this Enumeration.
			<p>From package UML::SimpleClassifiers.</p>
			*/
			
			virtual std::shared_ptr<Subset<uml::EnumerationLiteral, uml::NamedElement>> getOwnedLiteral() const ;
			
			//*********************************
			// Union Reference Getters
			//*********************************
			
			//*********************************
			// Container Getter
			//*********************************
			virtual std::shared_ptr<ecore::EObject> eContainer() const ; 

		protected:
			virtual std::shared_ptr<ecore::EClass> eStaticClass() const;

			//*********************************
			// EStructuralFeature Get/Set/IsSet
			//*********************************
			virtual std::shared_ptr<Any> eGet(int featureID, bool resolve, bool coreType) const ;
			virtual bool eSet(int featureID, std::shared_ptr<Any> newValue) ;
			virtual bool internalEIsSet(int featureID) const ;

			//*********************************
			// EOperation Invoke
			//*********************************
			virtual std::shared_ptr<Any> eInvoke(int operationID, std::shared_ptr<Bag<Any>> arguments) ;

		private:
			std::weak_ptr<uml::Enumeration> m_thisEnumerationPtr;
	};
}
#endif /* end of include guard: UML_ENUMERATIONENUMERATIONIMPL_HPP */

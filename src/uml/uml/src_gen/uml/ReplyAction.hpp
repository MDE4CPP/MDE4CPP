//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef UML_REPLYACTION_HPP
#define UML_REPLYACTION_HPP


#include <memory>
#include <string>
// forward declarations
template<class T, class ... U> class Subset;


//*********************************
// generated Includes

//Forward Declaration for used types 
namespace uml 
{
	class Activity;
	class ActivityEdge;
	class ActivityGroup;
	class ActivityPartition;
	class Classifier;
	class Comment;
	class Constraint;
	class Dependency;
	class ExceptionHandler;
	class InputPin;
	class InterruptibleActivityRegion;
	class Namespace;
	class OutputPin;
	class StringExpression;
	class StructuredActivityNode;
	class Trigger;
}

// namespace macro header include
#include "uml/uml.hpp"

// base class includes
#include "uml/Action.hpp"

// enum includes
#include "uml/VisibilityKind.hpp"



//*********************************
namespace uml 
{
	/*!
	A ReplyAction is an Action that accepts a set of reply values and a value containing return information produced by a previous AcceptCallAction. The ReplyAction returns the values to the caller of the previous call, completing execution of the call.
	<p>From package UML::Actions.</p>
	*/
	
	class UML_API ReplyAction : virtual public Action
	{
		public:
 			ReplyAction(const ReplyAction &) {}

		protected:
			ReplyAction(){}

		public:
			virtual std::shared_ptr<ecore::EObject> copy() const = 0;

			//destructor
			virtual ~ReplyAction() {}

			//*********************************
			// Operations
			//*********************************

			//*********************************
			// Attribute Getters & Setters
			//*********************************

			//*********************************
			// Reference Getters & Setters
			//*********************************
			/*!
			The Trigger specifying the Operation whose call is being replied to.
			<p>From package UML::Actions.</p>
			*/
			
			virtual std::shared_ptr<uml::Trigger> getReplyToCall() const = 0;
			/*!
			The Trigger specifying the Operation whose call is being replied to.
			<p>From package UML::Actions.</p>
			*/
			
			virtual void setReplyToCall(std::shared_ptr<uml::Trigger>) = 0;
			/*!
			A list of InputPins providing the values for the output (inout, out, and return) Parameters of the Operation. These values are returned to the caller.
			<p>From package UML::Actions.</p>
			*/
			
			virtual std::shared_ptr<Subset<uml::InputPin, uml::InputPin>> getReplyValue() const = 0;
			/*!
			An InputPin that holds the return information value produced by an earlier AcceptCallAction.
			<p>From package UML::Actions.</p>
			*/
			
			virtual std::shared_ptr<uml::InputPin> getReturnInformation() const = 0;
			/*!
			An InputPin that holds the return information value produced by an earlier AcceptCallAction.
			<p>From package UML::Actions.</p>
			*/
			
			virtual void setReturnInformation(std::shared_ptr<uml::InputPin>) = 0;

			//*********************************
			// Union Reference Getters
			//*********************************

			//*********************************
			// Container Getter
			//*********************************
			virtual std::shared_ptr<ecore::EObject> eContainer() const = 0; 

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			
			//*********************************
			// Reference Members
			//*********************************
			/*!
			The Trigger specifying the Operation whose call is being replied to.
			<p>From package UML::Actions.</p>
			*/
			
			std::shared_ptr<uml::Trigger> m_replyToCall;
			/*!
			A list of InputPins providing the values for the output (inout, out, and return) Parameters of the Operation. These values are returned to the caller.
			<p>From package UML::Actions.</p>
			*/
			
			mutable std::shared_ptr<Subset<uml::InputPin, uml::InputPin>> m_replyValue;
			/*!
			An InputPin that holds the return information value produced by an earlier AcceptCallAction.
			<p>From package UML::Actions.</p>
			*/
			
			std::shared_ptr<uml::InputPin> m_returnInformation;
	};
}
#endif /* end of include guard: UML_REPLYACTION_HPP */

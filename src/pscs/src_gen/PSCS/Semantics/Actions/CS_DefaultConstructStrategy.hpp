//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef PSCS_SEMANTICS_ACTIONS_CS_DEFAULTCONSTRUCTSTRATEGY_HPP
#define PSCS_SEMANTICS_ACTIONS_CS_DEFAULTCONSTRUCTSTRATEGY_HPP

#include <list>
#include <memory>
#include <string>


// forward declarations
template<class T> class Bag; 



//*********************************
// generated Includes

#include <map>

namespace persistence
{
	namespace interfaces
	{
		class XLoadHandler; // used for Persistence
		class XSaveHandler; // used for Persistence
	}
}

namespace PSCS
{
	class PSCSFactory;
}

//Forward Declaration for used types
namespace uml 
{
	class Association;
}

namespace PSCS::Semantics::Actions 
{
	class CS_ConstructStrategy;
}

namespace PSCS::Semantics::StructuredClassifiers 
{
	class CS_Object;
}

namespace PSCS::Semantics::StructuredClassifiers 
{
	class CS_Reference;
}

namespace uml 
{
	class Class;
}

namespace uml 
{
	class Connector;
}

namespace uml 
{
	class ConnectorEnd;
}

namespace uml 
{
	class Interface;
}

namespace fUML::Semantics::Loci 
{
	class Locus;
}

namespace fUML::Semantics::StructuredClassifiers 
{
	class Object;
}

namespace uml 
{
	class Operation;
}

namespace uml 
{
	class Property;
}

namespace fUML::Semantics::Values 
{
	class Value;
}

// base class includes
#include "PSCS/Semantics/Actions/CS_ConstructStrategy.hpp"

// enum includes


//*********************************
namespace PSCS::Semantics::Actions 
{
	/*!
	 */
	class CS_DefaultConstructStrategy:virtual public CS_ConstructStrategy
	{
		public:
 			CS_DefaultConstructStrategy(const CS_DefaultConstructStrategy &) {}
			CS_DefaultConstructStrategy& operator=(CS_DefaultConstructStrategy const&) = delete;

		protected:
			CS_DefaultConstructStrategy(){}


		public:
			virtual std::shared_ptr<ecore::EObject> copy() const = 0;

			//destructor
			virtual ~CS_DefaultConstructStrategy() {}

			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual void addStructuralFeatureValue(std::shared_ptr<PSCS::Semantics::StructuredClassifiers::CS_Reference>  context,std::shared_ptr<uml::Property>  feature,std::shared_ptr<fUML::Semantics::Values::Value>  value) = 0;
			
			/*!
			 */ 
			virtual bool canInstantiate(std::shared_ptr<uml::Property>  p) = 0;
			
			/*!
			 */ 
			virtual std::shared_ptr<fUML::Semantics::StructuredClassifiers::Object> construct(std::shared_ptr<uml::Operation>  constructor,std::shared_ptr<PSCS::Semantics::StructuredClassifiers::CS_Object>  context) = 0;
			
			/*!
			 */ 
			virtual std::shared_ptr<fUML::Semantics::StructuredClassifiers::Object> constructObject(std::shared_ptr<PSCS::Semantics::StructuredClassifiers::CS_Object>  context,std::shared_ptr<uml::Class>  type) = 0;
			
			/*!
			 */ 
			virtual void generateArrayPattern(std::shared_ptr<PSCS::Semantics::StructuredClassifiers::CS_Reference>  context,std::shared_ptr<uml::Connector>  connector) = 0;
			
			/*!
			 */ 
			virtual std::shared_ptr<uml::Class> generateRealizingClass(std::shared_ptr<uml::Interface>  interface_,std::string className) = 0;
			
			/*!
			 */ 
			virtual void generateStarPattern(std::shared_ptr<PSCS::Semantics::StructuredClassifiers::CS_Reference>  context,std::shared_ptr<uml::Connector>  connector) = 0;
			
			/*!
			 */ 
			virtual int getCardinality(std::shared_ptr<uml::ConnectorEnd>  end) = 0;
			
			/*!
			 */ 
			virtual std::shared_ptr<uml::Association> getDefaultAssociation() = 0;
			
			/*!
			 */ 
			virtual std::shared_ptr<uml::Class> getRealizingClass(std::shared_ptr<uml::Interface>  interface_) = 0;
			
			/*!
			 */ 
			virtual std::shared_ptr<Bag<fUML::Semantics::Values::Value> > getValuesFromConnectorEnd(std::shared_ptr<PSCS::Semantics::StructuredClassifiers::CS_Reference>  context,std::shared_ptr<uml::ConnectorEnd>  end) = 0;
			
			/*!
			 */ 
			virtual std::shared_ptr<fUML::Semantics::StructuredClassifiers::Object> instantiateInterface(std::shared_ptr<uml::Interface>  interface,std::shared_ptr<fUML::Semantics::Loci::Locus>  locus) = 0;
			
			/*!
			 */ 
			virtual bool isArrayPattern(std::shared_ptr<uml::Connector>  c) = 0;
			
			/*!
			 */ 
			virtual bool isStarPattern(std::shared_ptr<uml::Connector>  c) = 0;
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 */
			virtual std::shared_ptr<uml::Association > getDefaultAssociation() const = 0;
			
			/*!
			 */
			virtual void setDefaultAssociation(std::shared_ptr<uml::Association> _defaultAssociation_defaultAssociation) = 0;
			/*!
			 */
			virtual std::shared_ptr<Bag<uml::Class>> getGeneratedRealizingClasses() const = 0;
			
			/*!
			 */
			virtual std::shared_ptr<fUML::Semantics::Loci::Locus > getLocus() const = 0;
			
			/*!
			 */
			virtual void setLocus(std::shared_ptr<fUML::Semantics::Loci::Locus> _locus_locus) = 0;
			

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			
			
			//*********************************
			// Reference Members
			//*********************************
			/*!
			 */
			std::shared_ptr<uml::Association > m_defaultAssociation;
			/*!
			 */
			std::shared_ptr<Bag<uml::Class>> m_generatedRealizingClasses;
			/*!
			 */
			std::shared_ptr<fUML::Semantics::Loci::Locus > m_locus;
			

		public:
			//*********************************
			// Union Getter
			//*********************************
			

			virtual std::shared_ptr<ecore::EObject> eContainer() const = 0; 
			
			//*********************************
			// Persistence Functions
			//*********************************
			virtual void load(std::shared_ptr<persistence::interfaces::XLoadHandler> loadHandler) = 0;
			
			virtual void resolveReferences(const int featureID, std::list<std::shared_ptr<ecore::EObject> > references) = 0;
			virtual void save(std::shared_ptr<persistence::interfaces::XSaveHandler> saveHandler) const = 0;
			
	};

}
#endif /* end of include guard: PSCS_SEMANTICS_ACTIONS_CS_DEFAULTCONSTRUCTSTRATEGY_HPP */

//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef PSSM_SEMANTICS_COMMONBEHAVIOR_SM_OBJECTACTIVATIONSM_OBJECTACTIVATIONIMPL_HPP
#define PSSM_SEMANTICS_COMMONBEHAVIOR_SM_OBJECTACTIVATIONSM_OBJECTACTIVATIONIMPL_HPP

//*********************************
// generated Includes

// namespace macro header include
#include "PSSM/PSSM.hpp" 

// model includes
#include "../SM_ObjectActivation.hpp"

#include "PSSM/Semantics/CommonBehavior/impl/CommonBehaviorFactoryImpl.hpp"
#include "fUML/Semantics/CommonBehavior/impl/ObjectActivationImpl.hpp"

//*********************************
namespace PSSM::Semantics::CommonBehavior 
{
	class PSSM_API SM_ObjectActivationImpl : virtual public fUML::Semantics::CommonBehavior::ObjectActivationImpl, virtual public SM_ObjectActivation 
	{
		public: 
			SM_ObjectActivationImpl(const SM_ObjectActivationImpl & obj);
			virtual std::shared_ptr<ecore::EObject> copy() const;
			SM_ObjectActivationImpl& operator=(SM_ObjectActivationImpl const&); 

		protected:
			friend class PSSM::Semantics::CommonBehavior::CommonBehaviorFactoryImpl;
			SM_ObjectActivationImpl();
			virtual std::shared_ptr<PSSM::Semantics::CommonBehavior::SM_ObjectActivation> getThisSM_ObjectActivationPtr() const;
			virtual void setThisSM_ObjectActivationPtr(std::weak_ptr<PSSM::Semantics::CommonBehavior::SM_ObjectActivation> thisSM_ObjectActivationPtr);


		public:
			//destructor
			virtual ~SM_ObjectActivationImpl();
			
			//*********************************
			// Operations
			//*********************************
			virtual int getDeferredEventInsertionIndex() ;
			virtual std::shared_ptr<PSSM::Semantics::StateMachines::CompletionEventOccurrence> getNextCompletionEvent() ;
			virtual void registerCompletionEvent(const std::shared_ptr<PSSM::Semantics::StateMachines::StateActivation>& stateActivation) ;
			virtual void registerDeferredEvent(const std::shared_ptr<fUML::Semantics::CommonBehavior::EventOccurrence>& eventOccurrence, const std::shared_ptr<PSSM::Semantics::StateMachines::StateActivation>& stateActivation) ;
			virtual void releaseDeferredEvents(const std::shared_ptr<PSSM::Semantics::StateMachines::StateActivation>& deferringState) ;
			virtual std::shared_ptr<fUML::Semantics::CommonBehavior::EventOccurrence> retrieveNextEvent() ;
			
			//*********************************
			// Attribute Getters & Setters
			//*********************************
			
			//*********************************
			// Reference Getters & Setters
			//*********************************
			virtual const std::shared_ptr<Bag<PSSM::Semantics::StateMachines::DeferredEventOccurrence>>& getDeferredEventPool() const ;
			
			//*********************************
			// Union Reference Getters
			//*********************************
			
			//*********************************
			// Container Getter
			//*********************************
			virtual std::shared_ptr<ecore::EObject> eContainer() const ; 

			//*********************************
			// Persistence Functions
			//*********************************
			virtual void load(std::shared_ptr<persistence::interfaces::XLoadHandler> loadHandler) ;
			virtual void loadAttributes(std::shared_ptr<persistence::interfaces::XLoadHandler> loadHandler, std::map<std::string, std::string> attr_list);
			virtual void loadNode(std::string nodeName, std::shared_ptr<persistence::interfaces::XLoadHandler> loadHandler);
			virtual void resolveReferences(const int featureID, std::vector<std::shared_ptr<ecore::EObject>> references) ;
			virtual void save(std::shared_ptr<persistence::interfaces::XSaveHandler> saveHandler) const ;
			virtual void saveContent(std::shared_ptr<persistence::interfaces::XSaveHandler> saveHandler) const;

		protected:
			virtual const std::shared_ptr<ecore::EClass>& eStaticClass() const;

			//*********************************
			// EStructuralFeature Get/Set/IsSet
			//*********************************
			virtual std::shared_ptr<Any> eGet(int featureID, bool resolve, bool coreType) const ;
			virtual bool eSet(int featureID, const std::shared_ptr<Any>& newValue) ;
			virtual bool internalEIsSet(int featureID) const ;

			//*********************************
			// EOperation Invoke
			//*********************************
			virtual std::shared_ptr<Any> eInvoke(int operationID,const std::shared_ptr<Bag<Any>>& arguments) ;

		private:
			std::weak_ptr<PSSM::Semantics::CommonBehavior::SM_ObjectActivation> m_thisSM_ObjectActivationPtr;
	};
}
#endif /* end of include guard: PSSM_SEMANTICS_COMMONBEHAVIOR_SM_OBJECTACTIVATIONSM_OBJECTACTIVATIONIMPL_HPP */

plugins {
    id 'net.robyf.jarinjar' version '1.0.9'
}

apply plugin: 'java'

description 'ecore4CPP compiler, usable to compile standalone version of ecore4CPP generator outside of eclipse'

dependencies {
    runtime fileTree(dir: System.getenv('MDE4CPP_ECLIPSE_HOME') + '/plugins', include: [
		
		'org.eclipse.acceleo.common_*.jar',
		'org.eclipse.acceleo.engine_*.jar',
		'org.eclipse.acceleo.model_*.jar',
		'org.eclipse.acceleo.parser_*.jar',
		
		'com.google.guava_*.jar',
		'lpg.runtime.java_*.jar',
		
		'org.eclipse.equinox.app_*.jar',
		'org.eclipse.equinox.common_*.jar',
		'org.eclipse.equinox.preferences_*.jar',
		'org.eclipse.equinox.registry_*.jar',
		
		'org.eclipse.ocl_*.jar',
		'org.eclipse.ocl.common_*.jar',
		'org.eclipse.ocl.ecore_*.jar',
		
		'org.eclipse.emf.common_*.jar',
		'org.eclipse.emf.ecore_*.jar',
		'org.eclipse.emf.ecore.xmi_*.jar'

	])
	
    implementation fileTree(dir: System.getenv('MDE4CPP_ECLIPSE_HOME') + '/plugins', include: [

		'org.eclipse.acceleo.common_*.jar',
		'org.eclipse.acceleo.engine_*.jar',
		'org.eclipse.acceleo.model_*.jar',
		'org.eclipse.acceleo.parser_*.jar',
		
		'org.eclipse.emf.common_*.jar',
		'org.eclipse.emf.ecore_*.jar',
		'org.eclipse.emf.ecore.xmi_*.jar'

	])
}

sourceSets {
	main {
		java {
			srcDir 'src'
		}
	}
}

executableJar {
   mainClass 'ecore4CPP.generator.compiler.CompileAcceleoGenerator'
}
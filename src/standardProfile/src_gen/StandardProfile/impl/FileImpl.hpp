//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef STANDARDPROFILE_FILEFILEIMPL_HPP
#define STANDARDPROFILE_FILEFILEIMPL_HPP

//*********************************
// generated Includes

//Model includes
#include "../File.hpp"


#include "ecore/impl/EObjectImpl.hpp"

//*********************************
namespace StandardProfile 
{
	class FileImpl :virtual public ecore::EObjectImpl,
virtual public File 
	{
		public: 
			FileImpl(const FileImpl & obj);
			virtual std::shared_ptr<ecore::EObject> copy() const;

		private:    
			FileImpl& operator=(FileImpl const&) = delete;

		protected:
			friend class StandardProfileFactoryImpl;
			FileImpl();
			virtual std::shared_ptr<File> getThisFilePtr() const;
			virtual void setThisFilePtr(std::weak_ptr<File> thisFilePtr);



		public:
			//destructor
			virtual ~FileImpl();
			
			//*********************************
			// Operations
			//*********************************
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 */
			virtual std::shared_ptr<uml::Artifact > getBase_Artifact() const ;
			
			/*!
			 */
			virtual void setBase_Artifact(std::shared_ptr<uml::Artifact> _base_Artifact_base_Artifact) ;
							
			
			//*********************************
			// Union Getter
			//*********************************
			 
			 
			//*********************************
			// Structural Feature Getter/Setter
			//*********************************

			virtual std::shared_ptr<ecore::EObject> eContainer() const ; 
			
			//*********************************
			// Persistence Functions
			//*********************************
			virtual void load(std::shared_ptr<persistence::interfaces::XLoadHandler> loadHandler) ;
			virtual void loadAttributes(std::shared_ptr<persistence::interfaces::XLoadHandler> loadHandler, std::map<std::string, std::string> attr_list);
			virtual void loadNode(std::string nodeName, std::shared_ptr<persistence::interfaces::XLoadHandler> loadHandler, std::shared_ptr<StandardProfile::StandardProfileFactory> modelFactory);
			
			virtual void resolveReferences(const int featureID, std::list<std::shared_ptr<ecore::EObject> > references) ;
			virtual void save(std::shared_ptr<persistence::interfaces::XSaveHandler> saveHandler) const ;
			virtual void saveContent(std::shared_ptr<persistence::interfaces::XSaveHandler> saveHandler) const;
			

		protected:
			virtual std::shared_ptr<ecore::EClass> eStaticClass() const;
			virtual Any eGet(int featureID, bool resolve, bool coreType) const ;
			virtual bool internalEIsSet(int featureID) const ;
			virtual bool eSet(int featureID, Any newValue) ;

		private:
			std::weak_ptr<File> m_thisFilePtr;
	};
}
#endif /* end of include guard: STANDARDPROFILE_FILEFILEIMPL_HPP */

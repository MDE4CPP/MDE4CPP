//********************************************************************
//*    	
//* Warning: This file was generated by MDE4CPP Generator
//*
//********************************************************************

#ifndef FOUNDATIONALMODELLIBRARY_BASICINPUTOUTPUT_FACTORYIMPL_HPP
#define FOUNDATIONALMODELLIBRARY_BASICINPUTOUTPUT_FACTORYIMPL_HPP

#include <functional>
#include <map>

#include "uml/impl/FactoryImpl.hpp"
#include "FoundationalModelLibrary/BasicInputOutput/BasicInputOutputFactory.hpp"

namespace FoundationalModelLibrary::BasicInputOutput 
{
	class BasicInputOutputFactoryImpl : virtual public uml::FactoryImpl , virtual public BasicInputOutputFactory 
	{
		protected:
			friend class BasicInputOutputFactory;
			// Constructor
			BasicInputOutputFactoryImpl();

		public:
			virtual ~BasicInputOutputFactoryImpl();
			virtual std::shared_ptr<uml::Element> create(const unsigned int _metaClassId,  std::shared_ptr<uml::Element> container= nullptr, const unsigned int referenceID = -1) const;
			virtual std::shared_ptr<uml::Element> create(const std::shared_ptr<uml::Class> _class,  std::shared_ptr<uml::Element> container= nullptr, const unsigned int referenceID = -1) const;
			virtual std::shared_ptr<uml::Element> create(const std::string _className,  std::shared_ptr<uml::Element> container= nullptr, const unsigned int referenceID = -1) const;

			//Creator functions
			//START Create methods for class StandardInputChannel
			virtual std::shared_ptr<FoundationalModelLibrary::BasicInputOutput::StandardInputChannel> createStandardInputChannel(const int metaElementID = BasicInputOutputPackage::STANDARDINPUTCHANNEL_CLASS) const ;
			//END Create methods for class StandardInputChannel
			
			//START Create methods for class StandardOutputChannel
			virtual std::shared_ptr<FoundationalModelLibrary::BasicInputOutput::StandardOutputChannel> createStandardOutputChannel(const int metaElementID = BasicInputOutputPackage::STANDARDOUTPUTCHANNEL_CLASS) const ;
			//END Create methods for class StandardOutputChannel
			
			

			//Package
			virtual std::shared_ptr<BasicInputOutputPackage> getBasicInputOutputPackage();

		private:
			static BasicInputOutputFactory * create();
			std::map<std::string,unsigned int> m_idMap;
			virtual void init() {}
	};
}
#endif /* end of include guard: FOUNDATIONALMODELLIBRARY_BASICINPUTOUTPUT_FACTORYIMPL_HPP */

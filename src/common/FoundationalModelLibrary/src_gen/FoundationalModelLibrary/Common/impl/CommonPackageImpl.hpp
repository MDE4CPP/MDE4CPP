//********************************************************************
//*    	
//* Warning: This file was generated by MDE4CPP Generator
//*
//********************************************************************

#ifndef FOUNDATIONALMODELLIBRARY_COMMON_METAMODELPACKAGEIMPL_HPP
#define FOUNDATIONALMODELLIBRARY_COMMON_METAMODELPACKAGEIMPL_HPP

#include "FoundationalModelLibrary/Common/CommonPackage.hpp"
#include "uml/impl/PackageImpl.hpp"

namespace uml
{
	class umlFactory;
}


namespace FoundationalModelLibrary::Common
{
	class CommonPackageImpl : virtual public uml::PackageImpl, virtual public CommonPackage
	{
			friend class CommonPackage;
			// Constructor
			CommonPackageImpl();

		public:
			// destructor
			virtual ~CommonPackageImpl();

			//getter for the ownedMember
			virtual const std::shared_ptr<uml::Class>& get_FoundationalModelLibrary_Common_Listener();  
			virtual const std::shared_ptr<uml::DataType>& get_FoundationalModelLibrary_Common_Status();  
			virtual const std::shared_ptr<uml::Property>& get_FoundationalModelLibrary_Common_Status_code();  
			virtual const std::shared_ptr<uml::Property>& get_FoundationalModelLibrary_Common_Status_context();  
			virtual const std::shared_ptr<uml::Property>& get_FoundationalModelLibrary_Common_Status_description();  
			
			

			//getter for subPackages

		private:
			//private variables for ownedMember of the metamodel package
			std::shared_ptr<uml::Class> foundationalModelLibrary_Common_Listener = nullptr;
			std::shared_ptr<uml::DataType> foundationalModelLibrary_Common_Status = nullptr;
			std::shared_ptr<uml::Property> foundationalModelLibrary_Common_Status_code = nullptr;
			std::shared_ptr<uml::Property> foundationalModelLibrary_Common_Status_context = nullptr;
			std::shared_ptr<uml::Property> foundationalModelLibrary_Common_Status_description = nullptr;
			
			

			static CommonPackage* create();
			static bool isInited;
			bool isInitialized = false;
			bool isCreated = false;

			void initMetaModel();
			virtual void init(std::shared_ptr<uml::Package> package);

		public:
 			void initializePackageContents(std::shared_ptr<uml::Package> foundationalModelLibrary_Common);
			void createPackageContents(std::shared_ptr<uml::Package> foundationalModelLibrary_Common);

		private:
			void createPackageActivities(std::shared_ptr<uml::Package> foundationalModelLibrary_Common, std::shared_ptr<uml::umlFactory> factory);
			void createPackageClasses(std::shared_ptr<uml::Package> foundationalModelLibrary_Common, std::shared_ptr<uml::umlFactory> factory);
			void createPackageDataTypes(std::shared_ptr<uml::Package> foundationalModelLibrary_Common, std::shared_ptr<uml::umlFactory> factory);
			void createPackageAssociations(std::shared_ptr<uml::Package> foundationalModelLibrary_Common, std::shared_ptr<uml::umlFactory> factory);
			void createPackageDependencies(std::shared_ptr<uml::Package> foundationalModelLibrary_Common, std::shared_ptr<uml::umlFactory> factory);
			void createPackageEnumerationLiterals(std::shared_ptr<uml::Package> foundationalModelLibrary_Common, std::shared_ptr<uml::umlFactory> factory);
			void createPackageInstanceSpecifications(std::shared_ptr<uml::Package> foundationalModelLibrary_Common, std::shared_ptr<uml::umlFactory> factory);
			void createPackageInterfaceRealizations(std::shared_ptr<uml::Package> foundationalModelLibrary_Common, std::shared_ptr<uml::umlFactory> factory);
			void createPackageInterfaces(std::shared_ptr<uml::Package> foundationalModelLibrary_Common, std::shared_ptr<uml::umlFactory> factory);
			void createPackagePrimitiveTypes(std::shared_ptr<uml::Package> foundationalModelLibrary_Common, std::shared_ptr<uml::umlFactory> factory);
			void createPackageStereotypes(std::shared_ptr<uml::Package> foundationalModelLibrary_Common, std::shared_ptr<uml::umlFactory> factory);
			void createPackageValueSpecifications(std::shared_ptr<uml::Package> foundationalModelLibrary_Common, std::shared_ptr<uml::umlFactory> factory);

			void initializePackageActivities();
			void initializePackageClasses();
			void initializePackageDataTypes();
			void initializePackageAssociations();
			void initializePackageDependencies();
			void initializePackageInstanceSpecifications();
			void initializePackageInterfaceRealizations();
			void initializePackageInterfaces();
			void initializePackageNestedPackages();
			void initializePackageStereotypes();
			void initializePackageValueSpecifications();
	};
}
#endif /* end of include guard: FOUNDATIONALMODELLIBRARY_COMMON_METAMODELPACKAGEIMPL_HPP */

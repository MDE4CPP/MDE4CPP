//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_SEMANTICS_STRUCTUREDCLASSIFIERSFACTORYIMPL_HPP
#define FUML_SEMANTICS_STRUCTUREDCLASSIFIERSFACTORYIMPL_HPP

#include "ecore/impl/EFactoryImpl.hpp"

#include "fUML/Semantics/StructuredClassifiers/StructuredClassifiersFactory.hpp"

namespace StructuredClassifiers 
{	class DispatchStrategy;
	class ExtensionalValue;
	class ExtensionalValueList;
	class Link;
	class Object;
	class RedefinitionBasedDispatchStrategy;
	class Reference;
}

namespace fUML::Semantics::StructuredClassifiers 
{
	class StructuredClassifiersFactoryImpl : virtual public ecore::EFactoryImpl , virtual public StructuredClassifiersFactory 
	{
		private:    
			StructuredClassifiersFactoryImpl(StructuredClassifiersFactoryImpl const&) = delete;
			StructuredClassifiersFactoryImpl& operator=(StructuredClassifiersFactoryImpl const&) = delete;

		protected:
			friend class StructuredClassifiersFactory;
			// Constructor
			StructuredClassifiersFactoryImpl();

		public:
			virtual ~StructuredClassifiersFactoryImpl();
			virtual std::shared_ptr<ecore::EObject> create(std::string _className,  std::shared_ptr<ecore::EObject> container=nullptr, const int referenceID = -1) const;
			virtual std::shared_ptr<ecore::EObject> create(const int classID,  std::shared_ptr<ecore::EObject> container = nullptr, const int referenceID = -1) const;
			virtual std::shared_ptr<ecore::EObject> create(std::shared_ptr<ecore::EClass> _class, std::shared_ptr<EObject> _container=nullptr, const int referenceID = -1) const;

			//Creator functions
			 virtual std::shared_ptr<fUML::Semantics::StructuredClassifiers::DispatchStrategy> createDispatchStrategy(const int metaElementID=-1) const ;
			 
			 virtual std::shared_ptr<fUML::Semantics::StructuredClassifiers::ExtensionalValueList> createExtensionalValueList(const int metaElementID=-1) const ;
			 
			 virtual std::shared_ptr<fUML::Semantics::StructuredClassifiers::Link> createLink(const int metaElementID=-1) const ;
			 
			 virtual std::shared_ptr<fUML::Semantics::StructuredClassifiers::Object> createObject(const int metaElementID=-1) const ;
			 
			 virtual std::shared_ptr<fUML::Semantics::StructuredClassifiers::RedefinitionBasedDispatchStrategy> createRedefinitionBasedDispatchStrategy(const int metaElementID=-1) const ;
			 
			 virtual std::shared_ptr<fUML::Semantics::StructuredClassifiers::Reference> createReference(const int metaElementID=-1) const ;
			 
			 

		private:
			static StructuredClassifiersFactory* create();
            std::map<std::string,int> m_idMap;
	};
}
#endif /* end of include guard: FUML_SEMANTICS_STRUCTUREDCLASSIFIERSFACTORYIMPL_HPP */

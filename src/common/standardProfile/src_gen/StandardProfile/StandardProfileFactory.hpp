//********************************************************************
//*    	
//* Warning: This file was generated by MDE4CPP Generator
//*
//********************************************************************

#ifndef STANDARDPROFILE_FACTORY_HPP
#define STANDARDPROFILE_FACTORY_HPP

#include "uml/Factory.hpp"

namespace StandardProfile 
{
	class Auxiliary;
	class BuildComponent;
	class Call;
	class Create;
	class Derive;
	class Destroy;
	class Document;
	class Entity;
	class Executable;
	class File;
	class Focus;
	class Framework;
	class Implement;
	class ImplementationClass;
	class Instantiate;
	class Library;
	class Metaclass;
	class Metamodel;
	class ModelLibrary;
	class Process;
	class Realization;
	class Refine;
	class Responsibility;
	class Script;
	class Send;
	class Service;
	class Source;
	class Specification;
	class Subsystem;
	class SystemModel;
	class Trace;
	class Type;
	class Utility;
	class StandardProfilePackage;
	class StandardProfileFactory;

	class StandardProfileFactory : virtual public uml::Factory 
	{ 
		protected:
			//protected default construcotr
			StandardProfileFactory(){}

			//Singleton Instance and Getter
			
			private:
				static std::shared_ptr<StandardProfileFactory> instance;
			public:
				static std::shared_ptr<StandardProfileFactory> eInstance();

			//Creator functions
			virtual std::shared_ptr<uml::Element> create(const unsigned int _metaClassId,  std::shared_ptr<uml::Element> container= nullptr, const unsigned int referenceID = -1) const = 0;
			virtual std::shared_ptr<uml::Element> create(const std::shared_ptr<uml::Class> _class,  std::shared_ptr<uml::Element> container= nullptr, const unsigned int referenceID = -1) const = 0;
			virtual std::shared_ptr<uml::Element> create(const std::string _className,  std::shared_ptr<uml::Element> container= nullptr, const unsigned int referenceID = -1) const = 0;

			virtual std::shared_ptr<StandardProfile::Auxiliary> createAuxiliary(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::BuildComponent> createBuildComponent(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Call> createCall(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Create> createCreate(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Derive> createDerive(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Destroy> createDestroy(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Document> createDocument(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Entity> createEntity(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Executable> createExecutable(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::File> createFile(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Focus> createFocus(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Framework> createFramework(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Implement> createImplement(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::ImplementationClass> createImplementationClass(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Instantiate> createInstantiate(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Library> createLibrary(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Metaclass> createMetaclass(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Metamodel> createMetamodel(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::ModelLibrary> createModelLibrary(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Process> createProcess(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Realization> createRealization(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Refine> createRefine(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Responsibility> createResponsibility(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Script> createScript(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Send> createSend(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Service> createService(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Source> createSource(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Specification> createSpecification(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Subsystem> createSubsystem(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::SystemModel> createSystemModel(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Trace> createTrace(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Type> createType(const int metaElementID=-1) const  = 0;
			
			virtual std::shared_ptr<StandardProfile::Utility> createUtility(const int metaElementID=-1) const  = 0;
			
			
			//Package
			virtual std::shared_ptr<StandardProfilePackage> getStandardProfilePackage() = 0;
	};
}
#endif /* end of include guard: STANDARDPROFILE_FACTORY_HPP */

//********************************************************************
//*    	
//* Warning: This file was generated by MDE4CPP Generator
//*
//********************************************************************

#ifndef UML4CPPPROFILE_METAMODELPACKAGEIMPL_HPP
#define UML4CPPPROFILE_METAMODELPACKAGEIMPL_HPP

#include "UML4CPPProfile/UML4CPPProfilePackage.hpp"
#include "uml/impl/ProfileImpl.hpp"

namespace uml
{
	class LiteralBoolean;
	class umlFactory;
}


namespace UML4CPPProfile
{
	class UML4CPPProfilePackageImpl : virtual public uml::ProfileImpl, virtual public UML4CPPProfilePackage
	{
			friend class UML4CPPProfilePackage;
			// Constructor
			UML4CPPProfilePackageImpl();

		public:
			// destructor
			virtual ~UML4CPPProfilePackageImpl();

			//getter for the ownedMember
			virtual std::shared_ptr<uml::ExtensionEnd> get_ExtensionEnd_extension_DoNotGenerate_UML4CPPProfile_DoNotGenerate();  
			virtual std::shared_ptr<uml::ExtensionEnd> get_ExtensionEnd_extension_ExternalLibrary_UML4CPPProfile_ExternalLibrary();  
			virtual std::shared_ptr<uml::ExtensionEnd> get_ExtensionEnd_extension_MainBehavior_UML4CPPProfile_MainBehavior();  
			virtual std::shared_ptr<uml::ExtensionEnd> get_ExtensionEnd_extension_NonExecutable_UML4CPPProfile_NonExecutable();  
			virtual std::shared_ptr<uml::ExtensionEnd> get_ExtensionEnd_extension_Singleton_UML4CPPProfile_Singleton();  
			virtual std::shared_ptr<uml::ExtensionEnd> get_ExtensionEnd_extension_UML4CPPPackage_UML4CPPProfile_UML4CPPPackage();  
			virtual std::shared_ptr<uml::Extension> get_UML4CPPProfile_Behavior_MainBehavior();  
			virtual std::shared_ptr<uml::Extension> get_UML4CPPProfile_Class_Singleton();  
			virtual std::shared_ptr<uml::Stereotype> get_UML4CPPProfile_DoNotGenerate();  
			virtual std::shared_ptr<uml::Property> get_UML4CPPProfile_DoNotGenerate_base_Element();  
			virtual std::shared_ptr<uml::Extension> get_UML4CPPProfile_Element_DoNotGenerate();  
			virtual std::shared_ptr<uml::Stereotype> get_UML4CPPProfile_ExternalLibrary();  
			virtual std::shared_ptr<uml::Property> get_UML4CPPProfile_ExternalLibrary_base_Package();  
			virtual std::shared_ptr<uml::Property> get_UML4CPPProfile_ExternalLibrary_includePath();  
			virtual std::shared_ptr<uml::Property> get_UML4CPPProfile_ExternalLibrary_libraryName();  
			virtual std::shared_ptr<uml::Property> get_UML4CPPProfile_ExternalLibrary_libraryPath();  
			virtual std::shared_ptr<uml::Stereotype> get_UML4CPPProfile_MainBehavior();  
			virtual std::shared_ptr<uml::Property> get_UML4CPPProfile_MainBehavior_base_Behavior();  
			virtual std::shared_ptr<uml::Extension> get_UML4CPPProfile_NamedElement_NonExecutable();  
			virtual std::shared_ptr<uml::Stereotype> get_UML4CPPProfile_NonExecutable();  
			virtual std::shared_ptr<uml::Property> get_UML4CPPProfile_NonExecutable_base_NamedElement();  
			virtual std::shared_ptr<uml::Extension> get_UML4CPPProfile_Package_ExternalLibrary();  
			virtual std::shared_ptr<uml::Extension> get_UML4CPPProfile_Package_UML4CPPPackage();  
			virtual std::shared_ptr<uml::Stereotype> get_UML4CPPProfile_Singleton();  
			virtual std::shared_ptr<uml::Property> get_UML4CPPProfile_Singleton_base_Class();  
			virtual std::shared_ptr<uml::Stereotype> get_UML4CPPProfile_UML4CPPPackage();  
			virtual std::shared_ptr<uml::Property> get_UML4CPPProfile_UML4CPPPackage_base_Package();  
			virtual std::shared_ptr<uml::Property> get_UML4CPPProfile_UML4CPPPackage_eclipseURI();  
			virtual std::shared_ptr<uml::Property> get_UML4CPPProfile_UML4CPPPackage_ignoreNamespace();  
			virtual std::shared_ptr<uml::Property> get_UML4CPPProfile_UML4CPPPackage_packageOnly();  
			
			

			//getter for subPackages

		private:
			//private variables for ownedMember of the metamodel package
			std::shared_ptr<uml::ExtensionEnd> extensionEnd_extension_DoNotGenerate_UML4CPPProfile_DoNotGenerate = nullptr;
			std::shared_ptr<uml::ExtensionEnd> extensionEnd_extension_ExternalLibrary_UML4CPPProfile_ExternalLibrary = nullptr;
			std::shared_ptr<uml::ExtensionEnd> extensionEnd_extension_MainBehavior_UML4CPPProfile_MainBehavior = nullptr;
			std::shared_ptr<uml::ExtensionEnd> extensionEnd_extension_NonExecutable_UML4CPPProfile_NonExecutable = nullptr;
			std::shared_ptr<uml::ExtensionEnd> extensionEnd_extension_Singleton_UML4CPPProfile_Singleton = nullptr;
			std::shared_ptr<uml::ExtensionEnd> extensionEnd_extension_UML4CPPPackage_UML4CPPProfile_UML4CPPPackage = nullptr;
			std::shared_ptr<uml::Extension> uML4CPPProfile_Behavior_MainBehavior = nullptr;
			std::shared_ptr<uml::Extension> uML4CPPProfile_Class_Singleton = nullptr;
			std::shared_ptr<uml::Stereotype> uML4CPPProfile_DoNotGenerate = nullptr;
			std::shared_ptr<uml::Property> uML4CPPProfile_DoNotGenerate_base_Element = nullptr;
			std::shared_ptr<uml::Extension> uML4CPPProfile_Element_DoNotGenerate = nullptr;
			std::shared_ptr<uml::Stereotype> uML4CPPProfile_ExternalLibrary = nullptr;
			std::shared_ptr<uml::Property> uML4CPPProfile_ExternalLibrary_base_Package = nullptr;
			std::shared_ptr<uml::Property> uML4CPPProfile_ExternalLibrary_includePath = nullptr;
			std::shared_ptr<uml::Property> uML4CPPProfile_ExternalLibrary_libraryName = nullptr;
			std::shared_ptr<uml::Property> uML4CPPProfile_ExternalLibrary_libraryPath = nullptr;
			std::shared_ptr<uml::Stereotype> uML4CPPProfile_MainBehavior = nullptr;
			std::shared_ptr<uml::Property> uML4CPPProfile_MainBehavior_base_Behavior = nullptr;
			std::shared_ptr<uml::Extension> uML4CPPProfile_NamedElement_NonExecutable = nullptr;
			std::shared_ptr<uml::Stereotype> uML4CPPProfile_NonExecutable = nullptr;
			std::shared_ptr<uml::Property> uML4CPPProfile_NonExecutable_base_NamedElement = nullptr;
			std::shared_ptr<uml::Extension> uML4CPPProfile_Package_ExternalLibrary = nullptr;
			std::shared_ptr<uml::Extension> uML4CPPProfile_Package_UML4CPPPackage = nullptr;
			std::shared_ptr<uml::Stereotype> uML4CPPProfile_Singleton = nullptr;
			std::shared_ptr<uml::Property> uML4CPPProfile_Singleton_base_Class = nullptr;
			std::shared_ptr<uml::Stereotype> uML4CPPProfile_UML4CPPPackage = nullptr;
			std::shared_ptr<uml::Property> uML4CPPProfile_UML4CPPPackage_base_Package = nullptr;
			std::shared_ptr<uml::Property> uML4CPPProfile_UML4CPPPackage_eclipseURI = nullptr;
			std::shared_ptr<uml::Property> uML4CPPProfile_UML4CPPPackage_ignoreNamespace = nullptr;
			std::shared_ptr<uml::LiteralBoolean> uML4CPPProfile_UML4CPPPackage_ignoreNamespace_defaultValue_LiteralBoolean_UML4CPPProfile_UML4CPPPackage_ignoreNamespace = nullptr;
			std::shared_ptr<uml::Property> uML4CPPProfile_UML4CPPPackage_packageOnly = nullptr;
			std::shared_ptr<uml::LiteralBoolean> uML4CPPProfile_UML4CPPPackage_packageOnly_defaultValue_LiteralBoolean_UML4CPPProfile_UML4CPPPackage_packageOnly = nullptr;
			
			

			static UML4CPPProfilePackage* create();
			static bool isInited;
			bool isInitialized = false;
			bool isCreated = false;

			void initMetaModel();
			virtual void init(std::shared_ptr<uml::Package> package);

		public:
 			void initializePackageContents(std::shared_ptr<uml::Package> uML4CPPProfile);
			void createPackageContents(std::shared_ptr<uml::Package> uML4CPPProfile);

		private:
			void createPackageActivities(std::shared_ptr<uml::Package> uML4CPPProfile, std::shared_ptr<uml::umlFactory> factory);
			void createPackageClasses(std::shared_ptr<uml::Package> uML4CPPProfile, std::shared_ptr<uml::umlFactory> factory);
			void createPackageAssociations(std::shared_ptr<uml::Package> uML4CPPProfile, std::shared_ptr<uml::umlFactory> factory);
			void createPackageDependencies(std::shared_ptr<uml::Package> uML4CPPProfile, std::shared_ptr<uml::umlFactory> factory);
			void createPackageEnumerationLiterals(std::shared_ptr<uml::Package> uML4CPPProfile, std::shared_ptr<uml::umlFactory> factory);
			void createPackageInstanceSpecifications(std::shared_ptr<uml::Package> uML4CPPProfile, std::shared_ptr<uml::umlFactory> factory);
			void createPackageInterfaceRealizations(std::shared_ptr<uml::Package> uML4CPPProfile, std::shared_ptr<uml::umlFactory> factory);
			void createPackageInterfaces(std::shared_ptr<uml::Package> uML4CPPProfile, std::shared_ptr<uml::umlFactory> factory);
			void createPackagePrimitiveTypes(std::shared_ptr<uml::Package> uML4CPPProfile, std::shared_ptr<uml::umlFactory> factory);
			void createPackageStereotypes(std::shared_ptr<uml::Package> uML4CPPProfile, std::shared_ptr<uml::umlFactory> factory);
			void createPackageValueSpecifications(std::shared_ptr<uml::Package> uML4CPPProfile, std::shared_ptr<uml::umlFactory> factory);

			void initializePackageActivities();
			void initializePackageClasses();
			void initializePackageAssociations();
			void initializePackageDependencies();
			void initializePackageInstanceSpecifications();
			void initializePackageInterfaceRealizations();
			void initializePackageInterfaces();
			void initializePackageNestedPackages();
			void initializePackageStereotypes();
			void initializePackageValueSpecifications();
	};
}
#endif /* end of include guard: UML4CPPPROFILE_METAMODELPACKAGEIMPL_HPP */

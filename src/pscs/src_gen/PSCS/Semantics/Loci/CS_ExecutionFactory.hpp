//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef PSCS_SEMANTICS_LOCI_CS_EXECUTIONFACTORY_HPP
#define PSCS_SEMANTICS_LOCI_CS_EXECUTIONFACTORY_HPP

#include <list>
#include <memory>
#include <string>


// forward declarations
template<class T> class Bag; 



//*********************************
// generated Includes

#include <map>

namespace persistence
{
	namespace interfaces
	{
		class XLoadHandler; // used for Persistence
		class XSaveHandler; // used for Persistence
	}
}

namespace PSCS
{
	class PSCSFactory;
}

//Forward Declaration for used types 
namespace fUML::Semantics::CommonBehavior 
{
	class OpaqueBehaviorExecution;
}
namespace fUML::Semantics::Loci 
{
	class Locus;
	class SemanticStrategy;
	class SemanticVisitor;
}
namespace fUML::Semantics::StructuredClassifiers 
{
	class Object;
}
namespace uml 
{
	class Class;
	class Classifier;
	class Element;
	class Package;
	class PrimitiveType;
}

// base class includes
#include "fUML/Semantics/Loci/ExecutionFactory.hpp"

// enum includes


//Includes from codegen annotation
#include "fUML/FUMLFactory.hpp"
#include "uml/umlFactory.hpp"
#include "uml/umlPackage.hpp"
#include "fUML/Semantics/StructuredClassifiers/ExtensionalValue.hpp"
#include "fUML/Semantics/CommonBehavior/CommonBehaviorPackage.hpp"

#include "uml/ReadExtentAction.hpp"
#include "uml/AddStructuralFeatureValueAction.hpp"
#include "uml/ClearStructuralFeatureAction.hpp"
#include "uml/CreateLinkAction.hpp"
#include "uml/CreateObjectAction.hpp"
#include "uml/ReadSelfAction.hpp"
#include "uml/AcceptCallAction.hpp"
#include "uml/InstanceValue.hpp"
#include "uml/AcceptEventAction.hpp"
#include "uml/CallOperationAction.hpp"
#include "uml/SendSignalAction.hpp"
#include "uml/OpaqueExpression.hpp"
#include "uml/RemoveStructuralFeatureValueAction.hpp"
#include "uml/Classifier.hpp"
#include "fUML/Semantics/CommonBehavior/CallEventBehavior.hpp"

#include "PSCS/Semantics/Actions/CS_ReadExtentActionActivation.hpp"
#include "PSCS/Semantics/Actions/CS_AddStructuralFeatureValueActionActivation.hpp"
#include "PSCS/Semantics/Actions/CS_ClearStructuralFeatureActionActivation.hpp"
#include "PSCS/Semantics/Actions/CS_CreateLinkActionActivation.hpp"
#include "PSCS/Semantics/Actions/CS_CreateObjectActionActivation.hpp"
#include "PSCS/Semantics/Actions/CS_ReadSelfActionActivation.hpp"
#include "PSCS/Semantics/Actions/CS_AcceptCallActionActivation.hpp"
#include "PSCS/Semantics/Classification/CS_InstanceValueEvaluation.hpp"
#include "PSCS/Semantics/Actions/CS_AcceptEventActionActivation.hpp"
#include "PSCS/Semantics/Actions/CS_CallOperationActionActivation.hpp"
#include "PSCS/Semantics/Actions/CS_SendSignalActionActivation.hpp"
#include "PSCS/Semantics/Actions/CS_RemoveStructuralFeatureValueActionActivation.hpp"
#include "PSCS/Semantics/Values/CS_OpaqueExpressionEvaluation.hpp"
#include "PSCS/Semantics/CommonBehavior/CS_CallEventExecution.hpp"
#include "PSCS/Semantics/CommonBehavior/CommonBehaviorFactory.hpp"
#include "PSCS/Semantics/Actions/ActionsFactory.hpp"
#include "PSCS/Semantics/Classification/ClassificationFactory.hpp"
#include "PSCS/Semantics/Values/ValuesFactory.hpp"

//*********************************
namespace PSCS::Semantics::Loci 
{
	
	class CS_ExecutionFactory:virtual public fUML::Semantics::Loci::ExecutionFactory
	{
		public:
 			CS_ExecutionFactory(const CS_ExecutionFactory &) {}
			CS_ExecutionFactory& operator=(CS_ExecutionFactory const&) = delete;

		protected:
			CS_ExecutionFactory(){}


		public:
			virtual std::shared_ptr<ecore::EObject> copy() const = 0;

			//destructor
			virtual ~CS_ExecutionFactory() {}

			//*********************************
			// Operations
			//*********************************
			 
			virtual std::shared_ptr<fUML::Semantics::StructuredClassifiers::Object> getStereotypeApplication(std::shared_ptr<org.eclipse.uml2.uml.Class> stereotype,std::shared_ptr<org.eclipse.uml2.uml.Element> element) = 0;
			
			 
			virtual std::shared_ptr<org.eclipse.uml2.uml.Classifier> getStereotypeClass(std::string profileName,std::string stereotypeName) = 0;
			
			 
			virtual std::shared_ptr<fUML::Semantics::Loci::SemanticVisitor> instantiateVisitor(std::shared_ptr<org.eclipse.uml2.uml.Element> element) = 0;
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			//*********************************
			// Reference
			//*********************************
			
			virtual std::shared_ptr<Bag<org.eclipse.uml2.uml.Package>> getAppliedProfiles() const = 0;
			
			
			

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			
			
			//*********************************
			// Reference Members
			//*********************************
			
			mutable std::shared_ptr<Bag<org.eclipse.uml2.uml.Package>> m_appliedProfiles;

		public:
			//*********************************
			// Union Getter
			//*********************************
			

			virtual std::shared_ptr<ecore::EObject> eContainer() const = 0; 
			
			//*********************************
			// Persistence Functions
			//*********************************
			virtual void load(std::shared_ptr<persistence::interfaces::XLoadHandler> loadHandler) = 0;
			
			virtual void resolveReferences(const int featureID, std::list<std::shared_ptr<ecore::EObject> > references) = 0;
			virtual void save(std::shared_ptr<persistence::interfaces::XSaveHandler> saveHandler) const = 0;
			
	};

}
#endif /* end of include guard: PSCS_SEMANTICS_LOCI_CS_EXECUTIONFACTORY_HPP */

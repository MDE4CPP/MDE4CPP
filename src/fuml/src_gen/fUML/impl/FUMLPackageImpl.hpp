//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUMLPACKAGEIMPL_HPP
#define FUMLPACKAGEIMPL_HPP

#include "ecore/EcorePackage.hpp"
#include "ecore/impl/EPackageImpl.hpp"

#include "fUML/FUMLPackage.hpp" 


namespace fUML 
{
	namespace Semantics 
	{
		class SemanticsPackage;
	}
}

namespace ecore
{
	class EcoreFactory;
}

namespace fUML
{
	class FUMLPackageImpl : public ecore::EPackageImpl ,virtual public FUMLPackage
	{
		private:    
			FUMLPackageImpl(FUMLPackageImpl const&) = delete;
			FUMLPackageImpl& operator=(FUMLPackageImpl const&) = delete;

		protected:
			FUMLPackageImpl();

		public:
			virtual ~FUMLPackageImpl();


			
			// SubPackages Getters
			virtual std::shared_ptr<Semantics::SemanticsPackage> getSemantics_Package() const ;
			

		private:
			
			
			
			
			

			friend class FUMLPackage;

			static bool isInited;
			static FUMLPackage* create();
			bool isInitialized = false;
 			bool isCreated = false;

			virtual void init(std::shared_ptr<ecore::EPackage> package);

		public:
			void createPackageContents(std::shared_ptr<ecore::EPackage> package);
			void initializePackageContents();

		private:
			void createPackageEDataTypes(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);

			void initializePackageEDataTypes();



	};
}
#endif /* end of include guard: FUMLPACKAGEIMPL_HPP */

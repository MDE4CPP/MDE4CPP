//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef STANDARDPROFILEPACKAGE_HPP
#define STANDARDPROFILEPACKAGE_HPP

#include "ecore/EPackage.hpp"

namespace ecore 
{
	class EClass;
	class EGenericType;
	class EReference;
}

namespace StandardProfile 
{
	/*!
	The Metamodel Package for the StandardProfile metamodel. This package is used to enable the reflection of model elements. It contains all model elements
	which were described in an ecore file.
	*/
	/*!
	 */
	class StandardProfilePackage : virtual public ecore::EPackage 
	{
		private:    
			StandardProfilePackage(StandardProfilePackage const&) = delete;
			StandardProfilePackage& operator=(StandardProfilePackage const&) = delete;

		protected:
			StandardProfilePackage(){}

		public:
			//static variables
			static const std::string eNAME;
			static const std::string eNS_URI;
			static const std::string eNS_PREFIX;

			// Begin Class Auxiliary
			//Class and Feature IDs 
			static const unsigned int AUXILIARY_CLASS = 1;
			static const unsigned int AUXILIARY_CLASS_FEATURE_COUNT = 1;
			static const unsigned int AUXILIARY_CLASS_OPERATION_COUNT = 0;
			
			static const int AUXILIARY_ATTRIBUTE_BASE_CLASS = 100;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getAuxiliary_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getAuxiliary_Attribute_base_Class() const = 0;
			
			
			// End Class Auxiliary


			// Begin Class BuildComponent
			//Class and Feature IDs 
			static const unsigned int BUILDCOMPONENT_CLASS = 2;
			static const unsigned int BUILDCOMPONENT_CLASS_FEATURE_COUNT = 1;
			static const unsigned int BUILDCOMPONENT_CLASS_OPERATION_COUNT = 0;
			
			static const int BUILDCOMPONENT_ATTRIBUTE_BASE_COMPONENT = 200;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getBuildComponent_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getBuildComponent_Attribute_base_Component() const = 0;
			
			
			// End Class BuildComponent


			// Begin Class Call
			//Class and Feature IDs 
			static const unsigned int CALL_CLASS = 3;
			static const unsigned int CALL_CLASS_FEATURE_COUNT = 1;
			static const unsigned int CALL_CLASS_OPERATION_COUNT = 0;
			
			static const int CALL_ATTRIBUTE_BASE_USAGE = 300;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCall_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getCall_Attribute_base_Usage() const = 0;
			
			
			// End Class Call


			// Begin Class Create
			//Class and Feature IDs 
			static const unsigned int CREATE_CLASS = 4;
			static const unsigned int CREATE_CLASS_FEATURE_COUNT = 2;
			static const unsigned int CREATE_CLASS_OPERATION_COUNT = 0;
			
			static const int CREATE_ATTRIBUTE_BASE_BEHAVIORALFEATURE = 400;
			static const int CREATE_ATTRIBUTE_BASE_USAGE = 401;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCreate_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getCreate_Attribute_base_BehavioralFeature() const = 0;
			virtual std::shared_ptr<ecore::EReference> getCreate_Attribute_base_Usage() const = 0;
			
			
			// End Class Create


			// Begin Class Derive
			//Class and Feature IDs 
			static const unsigned int DERIVE_CLASS = 5;
			static const unsigned int DERIVE_CLASS_FEATURE_COUNT = 1;
			static const unsigned int DERIVE_CLASS_OPERATION_COUNT = 0;
			
			static const int DERIVE_ATTRIBUTE_BASE_ABSTRACTION = 500;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDerive_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getDerive_Attribute_base_Abstraction() const = 0;
			
			
			// End Class Derive


			// Begin Class Destroy
			//Class and Feature IDs 
			static const unsigned int DESTROY_CLASS = 6;
			static const unsigned int DESTROY_CLASS_FEATURE_COUNT = 1;
			static const unsigned int DESTROY_CLASS_OPERATION_COUNT = 0;
			
			static const int DESTROY_ATTRIBUTE_BASE_BEHAVIORALFEATURE = 600;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDestroy_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getDestroy_Attribute_base_BehavioralFeature() const = 0;
			
			
			// End Class Destroy


			// Begin Class Document
			//Class and Feature IDs 
			static const unsigned int DOCUMENT_CLASS = 7;
			static const unsigned int DOCUMENT_CLASS_FEATURE_COUNT = 1;
			static const unsigned int DOCUMENT_CLASS_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDocument_Class() const = 0;
			
			
			
			
			// End Class Document


			// Begin Class Entity
			//Class and Feature IDs 
			static const unsigned int ENTITY_CLASS = 8;
			static const unsigned int ENTITY_CLASS_FEATURE_COUNT = 1;
			static const unsigned int ENTITY_CLASS_OPERATION_COUNT = 0;
			
			static const int ENTITY_ATTRIBUTE_BASE_COMPONENT = 800;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getEntity_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getEntity_Attribute_base_Component() const = 0;
			
			
			// End Class Entity


			// Begin Class Executable
			//Class and Feature IDs 
			static const unsigned int EXECUTABLE_CLASS = 9;
			static const unsigned int EXECUTABLE_CLASS_FEATURE_COUNT = 1;
			static const unsigned int EXECUTABLE_CLASS_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExecutable_Class() const = 0;
			
			
			
			
			// End Class Executable


			// Begin Class File
			//Class and Feature IDs 
			static const unsigned int FILE_CLASS = 10;
			static const unsigned int FILE_CLASS_FEATURE_COUNT = 1;
			static const unsigned int FILE_CLASS_OPERATION_COUNT = 0;
			
			static const int FILE_ATTRIBUTE_BASE_ARTIFACT = 1000;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getFile_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getFile_Attribute_base_Artifact() const = 0;
			
			
			// End Class File


			// Begin Class Focus
			//Class and Feature IDs 
			static const unsigned int FOCUS_CLASS = 11;
			static const unsigned int FOCUS_CLASS_FEATURE_COUNT = 1;
			static const unsigned int FOCUS_CLASS_OPERATION_COUNT = 0;
			
			static const int FOCUS_ATTRIBUTE_BASE_CLASS = 1100;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getFocus_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getFocus_Attribute_base_Class() const = 0;
			
			
			// End Class Focus


			// Begin Class Framework
			//Class and Feature IDs 
			static const unsigned int FRAMEWORK_CLASS = 12;
			static const unsigned int FRAMEWORK_CLASS_FEATURE_COUNT = 1;
			static const unsigned int FRAMEWORK_CLASS_OPERATION_COUNT = 0;
			
			static const int FRAMEWORK_ATTRIBUTE_BASE_PACKAGE = 1200;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getFramework_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getFramework_Attribute_base_Package() const = 0;
			
			
			// End Class Framework


			// Begin Class Implement
			//Class and Feature IDs 
			static const unsigned int IMPLEMENT_CLASS = 13;
			static const unsigned int IMPLEMENT_CLASS_FEATURE_COUNT = 1;
			static const unsigned int IMPLEMENT_CLASS_OPERATION_COUNT = 0;
			
			static const int IMPLEMENT_ATTRIBUTE_BASE_COMPONENT = 1300;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getImplement_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getImplement_Attribute_base_Component() const = 0;
			
			
			// End Class Implement


			// Begin Class ImplementationClass
			//Class and Feature IDs 
			static const unsigned int IMPLEMENTATIONCLASS_CLASS = 14;
			static const unsigned int IMPLEMENTATIONCLASS_CLASS_FEATURE_COUNT = 1;
			static const unsigned int IMPLEMENTATIONCLASS_CLASS_OPERATION_COUNT = 0;
			
			static const int IMPLEMENTATIONCLASS_ATTRIBUTE_BASE_CLASS = 1400;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getImplementationClass_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getImplementationClass_Attribute_base_Class() const = 0;
			
			
			// End Class ImplementationClass


			// Begin Class Instantiate
			//Class and Feature IDs 
			static const unsigned int INSTANTIATE_CLASS = 15;
			static const unsigned int INSTANTIATE_CLASS_FEATURE_COUNT = 1;
			static const unsigned int INSTANTIATE_CLASS_OPERATION_COUNT = 0;
			
			static const int INSTANTIATE_ATTRIBUTE_BASE_USAGE = 1500;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getInstantiate_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getInstantiate_Attribute_base_Usage() const = 0;
			
			
			// End Class Instantiate


			// Begin Class Library
			//Class and Feature IDs 
			static const unsigned int LIBRARY_CLASS = 16;
			static const unsigned int LIBRARY_CLASS_FEATURE_COUNT = 1;
			static const unsigned int LIBRARY_CLASS_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLibrary_Class() const = 0;
			
			
			
			
			// End Class Library


			// Begin Class Metaclass
			//Class and Feature IDs 
			static const unsigned int METACLASS_CLASS = 17;
			static const unsigned int METACLASS_CLASS_FEATURE_COUNT = 1;
			static const unsigned int METACLASS_CLASS_OPERATION_COUNT = 0;
			
			static const int METACLASS_ATTRIBUTE_BASE_CLASS = 1700;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getMetaclass_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getMetaclass_Attribute_base_Class() const = 0;
			
			
			// End Class Metaclass


			// Begin Class Metamodel
			//Class and Feature IDs 
			static const unsigned int METAMODEL_CLASS = 18;
			static const unsigned int METAMODEL_CLASS_FEATURE_COUNT = 1;
			static const unsigned int METAMODEL_CLASS_OPERATION_COUNT = 0;
			
			static const int METAMODEL_ATTRIBUTE_BASE_MODEL = 1800;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getMetamodel_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getMetamodel_Attribute_base_Model() const = 0;
			
			
			// End Class Metamodel


			// Begin Class ModelLibrary
			//Class and Feature IDs 
			static const unsigned int MODELLIBRARY_CLASS = 19;
			static const unsigned int MODELLIBRARY_CLASS_FEATURE_COUNT = 1;
			static const unsigned int MODELLIBRARY_CLASS_OPERATION_COUNT = 0;
			
			static const int MODELLIBRARY_ATTRIBUTE_BASE_PACKAGE = 1900;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getModelLibrary_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getModelLibrary_Attribute_base_Package() const = 0;
			
			
			// End Class ModelLibrary


			// Begin Class Process
			//Class and Feature IDs 
			static const unsigned int PROCESS_CLASS = 20;
			static const unsigned int PROCESS_CLASS_FEATURE_COUNT = 1;
			static const unsigned int PROCESS_CLASS_OPERATION_COUNT = 0;
			
			static const int PROCESS_ATTRIBUTE_BASE_COMPONENT = 2000;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getProcess_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getProcess_Attribute_base_Component() const = 0;
			
			
			// End Class Process


			// Begin Class Realization
			//Class and Feature IDs 
			static const unsigned int REALIZATION_CLASS = 21;
			static const unsigned int REALIZATION_CLASS_FEATURE_COUNT = 1;
			static const unsigned int REALIZATION_CLASS_OPERATION_COUNT = 0;
			
			static const int REALIZATION_ATTRIBUTE_BASE_CLASSIFIER = 2100;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getRealization_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getRealization_Attribute_base_Classifier() const = 0;
			
			
			// End Class Realization


			// Begin Class Refine
			//Class and Feature IDs 
			static const unsigned int REFINE_CLASS = 22;
			static const unsigned int REFINE_CLASS_FEATURE_COUNT = 1;
			static const unsigned int REFINE_CLASS_OPERATION_COUNT = 0;
			
			static const int REFINE_ATTRIBUTE_BASE_ABSTRACTION = 2200;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getRefine_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getRefine_Attribute_base_Abstraction() const = 0;
			
			
			// End Class Refine


			// Begin Class Responsibility
			//Class and Feature IDs 
			static const unsigned int RESPONSIBILITY_CLASS = 23;
			static const unsigned int RESPONSIBILITY_CLASS_FEATURE_COUNT = 1;
			static const unsigned int RESPONSIBILITY_CLASS_OPERATION_COUNT = 0;
			
			static const int RESPONSIBILITY_ATTRIBUTE_BASE_USAGE = 2300;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getResponsibility_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getResponsibility_Attribute_base_Usage() const = 0;
			
			
			// End Class Responsibility


			// Begin Class Script
			//Class and Feature IDs 
			static const unsigned int SCRIPT_CLASS = 24;
			static const unsigned int SCRIPT_CLASS_FEATURE_COUNT = 1;
			static const unsigned int SCRIPT_CLASS_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getScript_Class() const = 0;
			
			
			
			
			// End Class Script


			// Begin Class Send
			//Class and Feature IDs 
			static const unsigned int SEND_CLASS = 25;
			static const unsigned int SEND_CLASS_FEATURE_COUNT = 1;
			static const unsigned int SEND_CLASS_OPERATION_COUNT = 0;
			
			static const int SEND_ATTRIBUTE_BASE_USAGE = 2500;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSend_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getSend_Attribute_base_Usage() const = 0;
			
			
			// End Class Send


			// Begin Class Service
			//Class and Feature IDs 
			static const unsigned int SERVICE_CLASS = 26;
			static const unsigned int SERVICE_CLASS_FEATURE_COUNT = 1;
			static const unsigned int SERVICE_CLASS_OPERATION_COUNT = 0;
			
			static const int SERVICE_ATTRIBUTE_BASE_COMPONENT = 2600;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getService_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getService_Attribute_base_Component() const = 0;
			
			
			// End Class Service


			// Begin Class Source
			//Class and Feature IDs 
			static const unsigned int SOURCE_CLASS = 27;
			static const unsigned int SOURCE_CLASS_FEATURE_COUNT = 1;
			static const unsigned int SOURCE_CLASS_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSource_Class() const = 0;
			
			
			
			
			// End Class Source


			// Begin Class Specification
			//Class and Feature IDs 
			static const unsigned int SPECIFICATION_CLASS = 28;
			static const unsigned int SPECIFICATION_CLASS_FEATURE_COUNT = 1;
			static const unsigned int SPECIFICATION_CLASS_OPERATION_COUNT = 0;
			
			static const int SPECIFICATION_ATTRIBUTE_BASE_CLASSIFIER = 2800;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSpecification_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getSpecification_Attribute_base_Classifier() const = 0;
			
			
			// End Class Specification


			// Begin Class Subsystem
			//Class and Feature IDs 
			static const unsigned int SUBSYSTEM_CLASS = 29;
			static const unsigned int SUBSYSTEM_CLASS_FEATURE_COUNT = 1;
			static const unsigned int SUBSYSTEM_CLASS_OPERATION_COUNT = 0;
			
			static const int SUBSYSTEM_ATTRIBUTE_BASE_COMPONENT = 2900;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSubsystem_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getSubsystem_Attribute_base_Component() const = 0;
			
			
			// End Class Subsystem


			// Begin Class SystemModel
			//Class and Feature IDs 
			static const unsigned int SYSTEMMODEL_CLASS = 30;
			static const unsigned int SYSTEMMODEL_CLASS_FEATURE_COUNT = 1;
			static const unsigned int SYSTEMMODEL_CLASS_OPERATION_COUNT = 0;
			
			static const int SYSTEMMODEL_ATTRIBUTE_BASE_MODEL = 3000;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSystemModel_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getSystemModel_Attribute_base_Model() const = 0;
			
			
			// End Class SystemModel


			// Begin Class Trace
			//Class and Feature IDs 
			static const unsigned int TRACE_CLASS = 31;
			static const unsigned int TRACE_CLASS_FEATURE_COUNT = 1;
			static const unsigned int TRACE_CLASS_OPERATION_COUNT = 0;
			
			static const int TRACE_ATTRIBUTE_BASE_ABSTRACTION = 3100;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTrace_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getTrace_Attribute_base_Abstraction() const = 0;
			
			
			// End Class Trace


			// Begin Class Type
			//Class and Feature IDs 
			static const unsigned int TYPE_CLASS = 32;
			static const unsigned int TYPE_CLASS_FEATURE_COUNT = 1;
			static const unsigned int TYPE_CLASS_OPERATION_COUNT = 0;
			
			static const int TYPE_ATTRIBUTE_BASE_CLASS = 3200;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getType_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getType_Attribute_base_Class() const = 0;
			
			
			// End Class Type


			// Begin Class Utility
			//Class and Feature IDs 
			static const unsigned int UTILITY_CLASS = 33;
			static const unsigned int UTILITY_CLASS_FEATURE_COUNT = 1;
			static const unsigned int UTILITY_CLASS_OPERATION_COUNT = 0;
			
			static const int UTILITY_ATTRIBUTE_BASE_CLASS = 3300;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getUtility_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getUtility_Attribute_base_Class() const = 0;
			
			
			// End Class Utility

			
			

			//Singleton Instance and Getter
			private:
				static std::shared_ptr<StandardProfilePackage> instance;
			public:
				static std::shared_ptr<StandardProfilePackage> eInstance();
	};
}
#endif /* end of include guard: STANDARDPROFILEPACKAGE_HPP */

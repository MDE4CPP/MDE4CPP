//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_SEMANTICS_VALUES_LITERALEVALUATIONLITERALEVALUATIONIMPL_HPP
#define FUML_SEMANTICS_VALUES_LITERALEVALUATIONLITERALEVALUATIONIMPL_HPP

//*********************************
// generated Includes

// namespace macro header include
#include "fUML/fUML.hpp" 

// model includes
#include "../LiteralEvaluation.hpp"

#include "fUML/Semantics/Values/impl/ValuesFactoryImpl.hpp"
#include "fUML/Semantics/Values/impl/EvaluationImpl.hpp"

//*********************************
namespace fUML::Semantics::Values 
{
	class FUML_API LiteralEvaluationImpl : virtual public EvaluationImpl, virtual public LiteralEvaluation 
	{
		public: 
			LiteralEvaluationImpl(const LiteralEvaluationImpl & obj);
			virtual std::shared_ptr<ecore::EObject> copy() const = 0;
			LiteralEvaluationImpl& operator=(LiteralEvaluationImpl const&); 

		protected:
			friend class fUML::Semantics::Values::ValuesFactoryImpl;
			LiteralEvaluationImpl();
			virtual std::shared_ptr<fUML::Semantics::Values::LiteralEvaluation> getThisLiteralEvaluationPtr() const;
			virtual void setThisLiteralEvaluationPtr(std::weak_ptr<fUML::Semantics::Values::LiteralEvaluation> thisLiteralEvaluationPtr);


		public:
			//destructor
			virtual ~LiteralEvaluationImpl() = 0;
			
			//*********************************
			// Operations
			//*********************************
			virtual std::shared_ptr<uml::PrimitiveType> getType(std::string builtInTypeName) ;
			
			//*********************************
			// Attribute Getters & Setters
			//*********************************
			
			//*********************************
			// Reference Getters & Setters
			//*********************************
			
			//*********************************
			// Union Reference Getters
			//*********************************
			
			//*********************************
			// Container Getter
			//*********************************
			virtual std::shared_ptr<ecore::EObject> eContainer() const ; 
			
			//*********************************
			// Persistence Functions
			//*********************************
			virtual void load(std::shared_ptr<persistence::interfaces::XLoadHandler> loadHandler) ;
			virtual void loadAttributes(std::shared_ptr<persistence::interfaces::XLoadHandler> loadHandler, std::map<std::string, std::string> attr_list);
			virtual void loadNode(std::string nodeName, std::shared_ptr<persistence::interfaces::XLoadHandler> loadHandler);
			virtual void resolveReferences(const int featureID, std::vector<std::shared_ptr<ecore::EObject> > references) ;
			virtual void save(std::shared_ptr<persistence::interfaces::XSaveHandler> saveHandler) const ;
			virtual void saveContent(std::shared_ptr<persistence::interfaces::XSaveHandler> saveHandler) const;

		protected:
			virtual std::shared_ptr<ecore::EClass> eStaticClass() const;

			//*********************************
			// EStructuralFeature Get/Set/IsSet
			//*********************************
			virtual Any eGet(int featureID, bool resolve, bool coreType) const ;
			virtual bool eSet(int featureID, Any newValue) ;
			virtual bool internalEIsSet(int featureID) const ;

			//*********************************
			// EOperation Invoke
			//*********************************
			virtual Any eInvoke(int operationID, std::shared_ptr<std::list<Any>> arguments) ;

		private:
			std::weak_ptr<fUML::Semantics::Values::LiteralEvaluation> m_thisLiteralEvaluationPtr;
	};
}
#endif /* end of include guard: FUML_SEMANTICS_VALUES_LITERALEVALUATIONLITERALEVALUATIONIMPL_HPP */

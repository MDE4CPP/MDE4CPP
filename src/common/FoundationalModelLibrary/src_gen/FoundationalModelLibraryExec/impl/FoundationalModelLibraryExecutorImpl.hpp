//********************************************************************
//*    	
//* Warning: This file was generated by MDE4CPP Generator
//*
//********************************************************************

#ifndef FOUNDATIONALMODELLIBRARY_EXECUTORIMPL_HPP
#define FOUNDATIONALMODELLIBRARY_EXECUTORIMPL_HPP

#include "../FoundationalModelLibraryExecutor.hpp"
#include "fUML/Semantics/Loci/impl/ExecutorImpl.hpp"
//#include "PSCS/Semantics/Loci/impl/CS_ExecutorImpl.hpp"

//Forward Declaration for used types
namespace uml
{
	class Activity;
	class OpaqueBehavior;
}

namespace fUML::Semantics::Activities 
{
	class ActivityExecution;
}

namespace FoundationalModelLibrary 
{
	class FoundationalModelLibraryExecutorImpl :virtual public /*PSCS::Semantics::Loci::CS_ExecutorImpl*/ fUML::Semantics::Loci::ExecutorImpl, virtual public FoundationalModelLibraryExecutor
	{
		private:    
			FoundationalModelLibraryExecutorImpl& operator=(FoundationalModelLibraryExecutorImpl const&) = delete;
			std::shared_ptr<Bag<fUML::Semantics::CommonBehavior::ParameterValue>> invokeOpaqueBehavior(const std::shared_ptr<uml::OpaqueBehavior>&, const std::shared_ptr<uml::Element>&, const std::shared_ptr<Bag<fUML::Semantics::CommonBehavior::ParameterValue>>&);

		public:
			FoundationalModelLibraryExecutorImpl();
			virtual ~FoundationalModelLibraryExecutorImpl();
			
			/*!
			 */ 
			virtual std::shared_ptr<Any> evaluate(const std::shared_ptr<uml::ValueSpecification>&);
			virtual std::shared_ptr<Bag<fUML::Semantics::CommonBehavior::ParameterValue>> execute(const std::shared_ptr<uml::Behavior>&, const std::shared_ptr<uml::Element>&, const std::shared_ptr<Bag<fUML::Semantics::CommonBehavior::ParameterValue>>&);
			virtual void setThisExecutorPtr(std::weak_ptr</*PSCS::Semantics::Loci::CS_Executor*/fUML::Semantics::Loci::Executor>);
	};
}
#endif /* end of include guard: FOUNDATIONALMODELLIBRARY_EXECUTORIMPL_HPP */

[comment encoding = UTF-8 /]
[**
 * Copyright (c) 2017 TU Ilmenau, Systems and Software Engineering Group
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), 
 * to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 * and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 ****************************************************************************************************************************************************************
 * 
 * module for providing keywords used by models
 * 
 */]
[module keywords('http://www.eclipse.org/uml2/5.0.0/UML')]

[**	
 * keywords for attribute 'language' of element 'FunctionBehavior'
*/]
[query public keyLibrary(any : OclAny) : String = 'LIBRARY'/]	[** indicates a library specification on corresponding position in attribute 'body' of element 'FunctionBehavior' /] 
[query public keyInclude(any : OclAny) : String = 'INCLUDE'/]	[**	indicates a header include specification on corresponding position in attribute 'body' of element 'FunctionBehavior' /] 
[query public keyCPP(any : OclAny) : String = 'CPP'/]	[**	indicates a source code specification on corresponding position in attribute 'body' of element 'FunctionBehavior' /] 

[**
 * 	keywords for model names 
*/]
[query public keyUML(any : OclAny) : String = 'UML' /]	[**	original name of UML model /]
[query public keyEcore(any : OclAny) : String = 'Ecore' /]	[**	original name of ecore model /]
[query public keyPrimitiveTypes(any : OclAny) : String = 'PrimitiveTypes' /]	[**	original name of PrimitiveTypes model /]

[** 
 * keywords for source name and keys of CodeGen annoation
*/]
[query public sourceNameCodeGen(any : OclAny) : String = 'http://sse.tu-ilmenau.de/codegen' /]	[** source name of annotation, which will be evaluated in MDE4CPP project /]
[query public keyIgnoreNamespace (any : OclAny) : String = 'ignoreNamespace' /]	[** indicate, whether a namespace for given element should be generated: value = '1' -> namespace ignored /]
[query public keySingleton(any : OclAny) : String = 'singleton' /]	[** indicate, if a singleton mechanism should be generated for given element: value = '1' -> singleton generated /]
[query public keyConst(any : OclAny) : String = 'const' /] [** indicate, that an operation should have const qualifier /]

[** 
 * keywords for source name and keys of prepareApplication annoation
*/]
[query public sourceNamePrepareApplication(any : OclAny) : String = 'prepareApplication' /]	[** special source for generating class with main function /]
[query public keyMainIncludes(any : OclAny) : String = 'sourceCodeIncludes'/]	[**	specifiy header to be included for main function /] 
[query public keyMainSourceCode(any : OclAny) : String = 'sourceCodeMain'/]	[**	specifiy source code of main function /] 

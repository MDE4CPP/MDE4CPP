//********************************************************************
//*    	
//* Warning: This file was generated by MDE4CPP Generator
//*
//********************************************************************

#ifndef UML4CPPPROFILE_FACTORY_HPP
#define UML4CPPPROFILE_FACTORY_HPP

#include "uml/Factory.hpp"
#include "UML4CPPProfile/UML4CPPProfilePackage.hpp"

namespace UML4CPPProfile
{
	class DoNotGenerate;
	class ExternalLibrary;
	class GetterName;
	class MainBehavior;
	class NonExecutable;
	class SetterName;
	class Singleton;
	class UML4CPPPackage;
}

namespace UML4CPPProfile 
{
	class UML4CPPProfilePackage;
	class UML4CPPProfileFactory;

	class UML4CPPProfileFactory : virtual public uml::Factory 
	{ 
		protected:
			//protected default construcotr
			UML4CPPProfileFactory(){}

			//Singleton Instance and Getter
			
			private:
				static std::shared_ptr<UML4CPPProfileFactory> instance;
			public:
				static std::shared_ptr<UML4CPPProfileFactory> eInstance();

			//Creator functions
			virtual std::shared_ptr<uml::Element> create(const unsigned int _metaClassId,  std::shared_ptr<uml::Element> container= nullptr, const unsigned int referenceID = -1) const = 0;
			virtual std::shared_ptr<uml::Element> create(const std::shared_ptr<uml::Class> _class,  std::shared_ptr<uml::Element> container= nullptr, const unsigned int referenceID = -1) const = 0;
			virtual std::shared_ptr<uml::Element> create(const std::string _className,  std::shared_ptr<uml::Element> container= nullptr, const unsigned int referenceID = -1) const = 0;

			//START Create methods for class DoNotGenerate
			virtual std::shared_ptr<UML4CPPProfile::DoNotGenerate> createDoNotGenerate(const int metaElementID = UML4CPPProfilePackage::DONOTGENERATE_CLASS) const  = 0;
			//END Create methods for class DoNotGenerate
			//START Create methods for class ExternalLibrary
			virtual std::shared_ptr<UML4CPPProfile::ExternalLibrary> createExternalLibrary(const int metaElementID = UML4CPPProfilePackage::EXTERNALLIBRARY_CLASS) const  = 0;
			//END Create methods for class ExternalLibrary
			//START Create methods for class GetterName
			virtual std::shared_ptr<UML4CPPProfile::GetterName> createGetterName(const int metaElementID = UML4CPPProfilePackage::GETTERNAME_CLASS) const  = 0;
			//END Create methods for class GetterName
			//START Create methods for class MainBehavior
			virtual std::shared_ptr<UML4CPPProfile::MainBehavior> createMainBehavior(const int metaElementID = UML4CPPProfilePackage::MAINBEHAVIOR_CLASS) const  = 0;
			//END Create methods for class MainBehavior
			//START Create methods for class NonExecutable
			virtual std::shared_ptr<UML4CPPProfile::NonExecutable> createNonExecutable(const int metaElementID = UML4CPPProfilePackage::NONEXECUTABLE_CLASS) const  = 0;
			//END Create methods for class NonExecutable
			//START Create methods for class SetterName
			virtual std::shared_ptr<UML4CPPProfile::SetterName> createSetterName(const int metaElementID = UML4CPPProfilePackage::SETTERNAME_CLASS) const  = 0;
			//END Create methods for class SetterName
			//START Create methods for class Singleton
			virtual std::shared_ptr<UML4CPPProfile::Singleton> createSingleton(const int metaElementID = UML4CPPProfilePackage::SINGLETON_CLASS) const  = 0;
			//END Create methods for class Singleton
			//START Create methods for class UML4CPPPackage
			virtual std::shared_ptr<UML4CPPProfile::UML4CPPPackage> createUML4CPPPackage(const int metaElementID = UML4CPPProfilePackage::UML4CPPPACKAGE_CLASS) const  = 0;
			//END Create methods for class UML4CPPPackage
			
			//Package
			virtual std::shared_ptr<UML4CPPProfilePackage> getUML4CPPProfilePackage() = 0;
	};
}
#endif /* end of include guard: UML4CPPPROFILE_FACTORY_HPP */

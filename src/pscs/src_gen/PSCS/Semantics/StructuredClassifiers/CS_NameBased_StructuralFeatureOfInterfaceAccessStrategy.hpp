//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef PSCS_SEMANTICS_STRUCTUREDCLASSIFIERS_CS_NAMEBASED_STRUCTURALFEATUREOFINTERFACEACCESSSTRATEGY_HPP
#define PSCS_SEMANTICS_STRUCTUREDCLASSIFIERS_CS_NAMEBASED_STRUCTURALFEATUREOFINTERFACEACCESSSTRATEGY_HPP


#include <memory>
#include <string>
// forward declarations
template<class T> class Bag; 


//*********************************
// generated Includes
#include <map> // used for Persistence
#include <vector> // used for Persistence
namespace persistence
{
	namespace interfaces
	{
		class XLoadHandler; // used for Persistence
		class XSaveHandler; // used for Persistence
	}
}

namespace PSCS
{
	class PSCSFactory;
}

//Forward Declaration for used types 
namespace fUML::Semantics::SimpleClassifiers 
{
	class FeatureValue;
}
namespace PSCS::Semantics::StructuredClassifiers 
{
	class CS_Object;
}
namespace fUML::Semantics::Values 
{
	class Value;
}
namespace uml 
{
	class StructuralFeature;
}

// namespace macro header include
#include "PSCS/PSCS.hpp"

// base class includes
#include "PSCS/Semantics/StructuredClassifiers/CS_StructuralFeatureOfInterfaceAccessStrategy.hpp"




//*********************************
namespace PSCS::Semantics::StructuredClassifiers 
{
	
	class PSCS_API CS_NameBased_StructuralFeatureOfInterfaceAccessStrategy: virtual public CS_StructuralFeatureOfInterfaceAccessStrategy
	{
		public:
 			CS_NameBased_StructuralFeatureOfInterfaceAccessStrategy(const CS_NameBased_StructuralFeatureOfInterfaceAccessStrategy &) {}

		protected:
			CS_NameBased_StructuralFeatureOfInterfaceAccessStrategy(){}

		public:
			virtual std::shared_ptr<ecore::EObject> copy() const = 0;

			//destructor
			virtual ~CS_NameBased_StructuralFeatureOfInterfaceAccessStrategy() {}

			//*********************************
			// Operations
			//*********************************
			virtual std::shared_ptr<fUML::Semantics::SimpleClassifiers::FeatureValue> read(const std::shared_ptr<PSCS::Semantics::StructuredClassifiers::CS_Object>& cs_Object, const std::shared_ptr<uml::StructuralFeature>& feature) = 0;
			virtual void write(const std::shared_ptr<PSCS::Semantics::StructuredClassifiers::CS_Object>& cs_Object, const std::shared_ptr<uml::StructuralFeature>& feature, const std::shared_ptr<Bag<fUML::Semantics::Values::Value>>& values, int position) = 0;

			//*********************************
			// Attribute Getters & Setters
			//*********************************

			//*********************************
			// Reference Getters & Setters
			//*********************************

			//*********************************
			// Union Reference Getters
			//*********************************

			//*********************************
			// Container Getter
			//*********************************
			virtual std::shared_ptr<ecore::EObject> eContainer() const = 0; 

			//*********************************
			// Persistence Functions
			//*********************************
			virtual void load(std::shared_ptr<persistence::interfaces::XLoadHandler> loadHandler) = 0;
			virtual void resolveReferences(const int featureID, std::vector<std::shared_ptr<ecore::EObject> > references) = 0;
			virtual void save(std::shared_ptr<persistence::interfaces::XSaveHandler> saveHandler) const = 0;

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			
			//*********************************
			// Reference Members
			//*********************************
	};
}
#endif /* end of include guard: PSCS_SEMANTICS_STRUCTUREDCLASSIFIERS_CS_NAMEBASED_STRUCTURALFEATUREOFINTERFACEACCESSSTRATEGY_HPP */

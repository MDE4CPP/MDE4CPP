//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef ECORE_EATTRIBUTEEATTRIBUTEIMPL_HPP
#define ECORE_EATTRIBUTEEATTRIBUTEIMPL_HPP

//*********************************
// generated Includes

// namespace macro header include
#include "ecore/ecore.hpp" 

// model includes
#include "../EAttribute.hpp"

#include "ecore/impl/EStructuralFeatureImpl.hpp"

//*********************************
namespace ecore 
{
	class ECORE_API EAttributeImpl : virtual public EStructuralFeatureImpl, virtual public EAttribute 
	{
		public: 
			EAttributeImpl(const EAttributeImpl & obj);
			virtual std::shared_ptr<ecore::EObject> copy() const;
			EAttributeImpl& operator=(EAttributeImpl const&); 

		protected:
			friend class ecoreFactoryImpl;
			EAttributeImpl();
			virtual std::shared_ptr<ecore::EAttribute> getThisEAttributePtr() const;
			virtual void setThisEAttributePtr(std::weak_ptr<ecore::EAttribute> thisEAttributePtr);

			//Additional constructors for the containments back reference
			EAttributeImpl(std::weak_ptr<ecore::EObject> par_eContainer);
			//Additional constructors for the containments back reference
			EAttributeImpl(std::weak_ptr<ecore::EClass> par_eContainingClass);

		public:
			//destructor
			virtual ~EAttributeImpl();
			
			//*********************************
			// Operations
			//*********************************
			
			//*********************************
			// Attribute Getters & Setters
			//*********************************
			virtual bool isID() const ;
			virtual void setID (bool _iD);
			
			//*********************************
			// Reference Getters & Setters
			//*********************************
			virtual std::shared_ptr<ecore::EDataType> getEAttributeType() const ;
			
			//*********************************
			// Union Reference Getters
			//*********************************
			
			//*********************************
			// Container Getter
			//*********************************
			virtual std::shared_ptr<ecore::EObject> eContainer() const ; 

		protected:
			virtual std::shared_ptr<EClass> eStaticClass() const;

			//*********************************
			// EStructuralFeature Get/Set/IsSet
			//*********************************
			virtual std::shared_ptr<Any> eGet(int featureID, bool resolve, bool coreType) const ;
			virtual bool eSet(int featureID, std::shared_ptr<Any> newValue) ;
			virtual bool internalEIsSet(int featureID) const ;

			//*********************************
			// EOperation Invoke
			//*********************************
			virtual std::shared_ptr<Any> eInvoke(int operationID, std::shared_ptr<Bag<Any>> arguments) ;

		private:
			std::weak_ptr<ecore::EAttribute> m_thisEAttributePtr;
	};
}
#endif /* end of include guard: ECORE_EATTRIBUTEEATTRIBUTEIMPL_HPP */

//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_MDE4CPP_EXTENSIONSPACKAGEIMPL_HPP
#define FUML_MDE4CPP_EXTENSIONSPACKAGEIMPL_HPP

// namespace macro header include
#include "fUML/fUML.hpp"

#include "ecore/ecorePackage.hpp"
#include "ecore/impl/EPackageImpl.hpp"

#include "fUML/MDE4CPP_Extensions/MDE4CPP_ExtensionsPackage.hpp" 


namespace fUML::MDE4CPP_Extensions 
{
	class FUML_Link;
	class FUML_LinkEnd;
	class FUML_Object;
	class FUML_SignalInstance;}

namespace ecore
{
	class ecoreFactory;
}

namespace fUML::MDE4CPP_Extensions
{
	class FUML_API MDE4CPP_ExtensionsPackageImpl : public ecore::EPackageImpl ,virtual public MDE4CPP_ExtensionsPackage
	{
		private:    
			MDE4CPP_ExtensionsPackageImpl(MDE4CPP_ExtensionsPackageImpl const&) = delete;
			MDE4CPP_ExtensionsPackageImpl& operator=(MDE4CPP_ExtensionsPackageImpl const&) = delete;

		protected:
			MDE4CPP_ExtensionsPackageImpl();

		public:
			virtual ~MDE4CPP_ExtensionsPackageImpl();

			// Begin Class FUML_Link
			//Class and Feature Getter
			virtual const std::shared_ptr<ecore::EClass>& getFUML_Link_Class() const ;
			
			
			virtual const std::shared_ptr<ecore::EReference>& getFUML_Link_Attribute_linkEnds() const ;
			virtual const std::shared_ptr<ecore::EReference>& getFUML_Link_Attribute_type() const ;
			
			virtual const std::shared_ptr<ecore::EOperation>& getFUML_Link_Operation_add_FUML_Object_Property() const ;
			virtual const std::shared_ptr<ecore::EOperation>& getFUML_Link_Operation_add_FUML_Object_EInt() const ;
			virtual const std::shared_ptr<ecore::EOperation>& getFUML_Link_Operation_destroy() const ;
			virtual const std::shared_ptr<ecore::EOperation>& getFUML_Link_Operation_retrieveLinkEnd_Property() const ;
			virtual const std::shared_ptr<ecore::EOperation>& getFUML_Link_Operation_retrieveLinkEndValue_Property() const ;
			
			// End Class FUML_Link

			// Begin Class FUML_LinkEnd
			//Class and Feature Getter
			virtual const std::shared_ptr<ecore::EClass>& getFUML_LinkEnd_Class() const ;
			
			virtual const std::shared_ptr<ecore::EAttribute>& getFUML_LinkEnd_Attribute_position() const ;
			
			virtual const std::shared_ptr<ecore::EReference>& getFUML_LinkEnd_Attribute_end() const ;
			virtual const std::shared_ptr<ecore::EReference>& getFUML_LinkEnd_Attribute_endValue() const ;
			
			
			// End Class FUML_LinkEnd

			// Begin Class FUML_Object
			//Class and Feature Getter
			virtual const std::shared_ptr<ecore::EClass>& getFUML_Object_Class() const ;
			
			
			virtual const std::shared_ptr<ecore::EReference>& getFUML_Object_Attribute_links() const ;
			virtual const std::shared_ptr<ecore::EReference>& getFUML_Object_Attribute_locus() const ;
			virtual const std::shared_ptr<ecore::EReference>& getFUML_Object_Attribute_objectActivation() const ;
			
			virtual const std::shared_ptr<ecore::EOperation>& getFUML_Object_Operation__register_EventAccepter() const ;
			virtual const std::shared_ptr<ecore::EOperation>& getFUML_Object_Operation_addTo_FUML_Link_Property() const ;
			virtual const std::shared_ptr<ecore::EOperation>& getFUML_Object_Operation_destroy() const ;
			virtual const std::shared_ptr<ecore::EOperation>& getFUML_Object_Operation_destroy_EBoolean_EBoolean() const ;
			virtual const std::shared_ptr<ecore::EOperation>& getFUML_Object_Operation_getTypes() const ;
			virtual const std::shared_ptr<ecore::EOperation>& getFUML_Object_Operation_invokeOpaqueBehavior_EString_EJavaObject() const ;
			virtual const std::shared_ptr<ecore::EOperation>& getFUML_Object_Operation_invokeOpaqueBehavior_EInt_EJavaObject() const ;
			virtual const std::shared_ptr<ecore::EOperation>& getFUML_Object_Operation_invokeOperation_EString_EJavaObject() const ;
			virtual const std::shared_ptr<ecore::EOperation>& getFUML_Object_Operation_invokeOperation_EInt_EJavaObject() const ;
			virtual const std::shared_ptr<ecore::EOperation>& getFUML_Object_Operation_send_EventOccurrence() const ;
			virtual const std::shared_ptr<ecore::EOperation>& getFUML_Object_Operation_startBehavior_Class_ParameterValue() const ;
			virtual const std::shared_ptr<ecore::EOperation>& getFUML_Object_Operation_unregister_EventAccepter() const ;
			
			// End Class FUML_Object

			// Begin Class FUML_SignalInstance
			//Class and Feature Getter
			virtual const std::shared_ptr<ecore::EClass>& getFUML_SignalInstance_Class() const ;
			
			
			
			virtual const std::shared_ptr<ecore::EOperation>& getFUML_SignalInstance_Operation_getType() const ;
			
			// End Class FUML_SignalInstance

			
			// SubPackages Getters
			

		private:
			std::shared_ptr<ecore::EClass> m_fUML_Link_Class = nullptr;std::shared_ptr<ecore::EClass> m_fUML_LinkEnd_Class = nullptr;std::shared_ptr<ecore::EClass> m_fUML_Object_Class = nullptr;std::shared_ptr<ecore::EClass> m_fUML_SignalInstance_Class = nullptr;
			
			std::shared_ptr<ecore::EAttribute> m_fUML_LinkEnd_Attribute_position = nullptr;
			std::shared_ptr<ecore::EReference> m_fUML_LinkEnd_Attribute_end = nullptr;std::shared_ptr<ecore::EReference> m_fUML_LinkEnd_Attribute_endValue = nullptr;std::shared_ptr<ecore::EReference> m_fUML_Link_Attribute_linkEnds = nullptr;std::shared_ptr<ecore::EReference> m_fUML_Object_Attribute_links = nullptr;std::shared_ptr<ecore::EReference> m_fUML_Object_Attribute_locus = nullptr;std::shared_ptr<ecore::EReference> m_fUML_Object_Attribute_objectActivation = nullptr;std::shared_ptr<ecore::EReference> m_fUML_Link_Attribute_type = nullptr;
			std::shared_ptr<ecore::EOperation> m_fUML_Object_Operation__register_EventAccepter = nullptr;std::shared_ptr<ecore::EOperation> m_fUML_Link_Operation_add_FUML_Object_Property = nullptr;std::shared_ptr<ecore::EOperation> m_fUML_Link_Operation_add_FUML_Object_EInt = nullptr;std::shared_ptr<ecore::EOperation> m_fUML_Object_Operation_addTo_FUML_Link_Property = nullptr;std::shared_ptr<ecore::EOperation> m_fUML_Object_Operation_destroy = nullptr;std::shared_ptr<ecore::EOperation> m_fUML_Object_Operation_destroy_EBoolean_EBoolean = nullptr;std::shared_ptr<ecore::EOperation> m_fUML_Link_Operation_destroy = nullptr;std::shared_ptr<ecore::EOperation> m_fUML_SignalInstance_Operation_getType = nullptr;std::shared_ptr<ecore::EOperation> m_fUML_Object_Operation_getTypes = nullptr;std::shared_ptr<ecore::EOperation> m_fUML_Object_Operation_invokeOpaqueBehavior_EString_EJavaObject = nullptr;std::shared_ptr<ecore::EOperation> m_fUML_Object_Operation_invokeOpaqueBehavior_EInt_EJavaObject = nullptr;std::shared_ptr<ecore::EOperation> m_fUML_Object_Operation_invokeOperation_EString_EJavaObject = nullptr;std::shared_ptr<ecore::EOperation> m_fUML_Object_Operation_invokeOperation_EInt_EJavaObject = nullptr;std::shared_ptr<ecore::EOperation> m_fUML_Link_Operation_retrieveLinkEnd_Property = nullptr;std::shared_ptr<ecore::EOperation> m_fUML_Link_Operation_retrieveLinkEndValue_Property = nullptr;std::shared_ptr<ecore::EOperation> m_fUML_Object_Operation_send_EventOccurrence = nullptr;std::shared_ptr<ecore::EOperation> m_fUML_Object_Operation_startBehavior_Class_ParameterValue = nullptr;std::shared_ptr<ecore::EOperation> m_fUML_Object_Operation_unregister_EventAccepter = nullptr;

			friend class MDE4CPP_ExtensionsPackage;

			static bool isInited;
			static MDE4CPP_ExtensionsPackage* create();
			bool isInitialized = false;
 			bool isCreated = false;

			virtual void init(std::shared_ptr<ecore::EPackage> package);

		public:
			void createPackageContents(std::shared_ptr<ecore::EPackage> package);
			void initializePackageContents();

		private:
			void createFUML_LinkContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createFUML_LinkEndContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createFUML_ObjectContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createFUML_SignalInstanceContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createPackageEDataTypes(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);

			void initializeFUML_LinkContent();
			void initializeFUML_LinkEndContent();
			void initializeFUML_ObjectContent();
			void initializeFUML_SignalInstanceContent();
			void initializePackageEDataTypes();



	};
}
#endif /* end of include guard: FUML_MDE4CPP_EXTENSIONSPACKAGEIMPL_HPP */

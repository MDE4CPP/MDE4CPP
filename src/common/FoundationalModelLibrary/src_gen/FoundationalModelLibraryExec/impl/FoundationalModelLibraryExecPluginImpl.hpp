//********************************************************************
//*    	
//* Warning: This file was generated by MDE4CPP Generator
//*
//********************************************************************

#ifndef FOUNDATIONALMODELLIBRARY_EXECPLUGINIMPL_HPP
#define FOUNDATIONALMODELLIBRARY_EXECPLUGINIMPL_HPP

#include "FoundationalModelLibraryExec/FoundationalModelLibraryExecPlugin.hpp"

namespace FoundationalModelLibrary
{
	class FoundationalModelLibraryLocus;
	class FoundationalModelLibraryExecutor;
	class FoundationalModelLibraryExecutionFactory;
}


namespace FoundationalModelLibrary 
{
	class FoundationalModelLibraryExecPluginImpl : virtual public FoundationalModelLibraryExecPlugin 
	{
		public:
			FoundationalModelLibraryExecPluginImpl();
			virtual ~FoundationalModelLibraryExecPluginImpl();
		
			virtual std::string eclipseURI();
			virtual std::string eNAME();
			virtual std::string eNS_URI();
			virtual std::string eNS_PREFIX();

			virtual std::shared_ptr<ecore::EObject> create(const std::string&) const;
			virtual std::shared_ptr<ecore::EObject> create(const std::string&, std::shared_ptr<ecore::EObject>, const unsigned int referenceID = -1) const;
			virtual std::shared_ptr<Any> executeActivity(std::shared_ptr<uml::Activity>, std::shared_ptr<Bag<Any>>, std::shared_ptr<uml::Element>);
			virtual std::shared_ptr<Bag<fUML::Semantics::CommonBehavior::ParameterValue>> executeBehavior(std::shared_ptr<uml::Behavior>, std::shared_ptr<uml::Element>, std::shared_ptr<Bag<fUML::Semantics::CommonBehavior::ParameterValue>>);
			virtual std::shared_ptr<fUML::MDE4CPP_Extensions::FUML_Object> instantiateClass(std::shared_ptr<uml::Class>);
			virtual std::shared_ptr<uml::Element> instantiateSignal(std::shared_ptr<uml::Signal>);
			virtual std::shared_ptr<Any> evaluateSpecification(std::shared_ptr<uml::ValueSpecification>);

		private:
			virtual void initialize();

		protected:
			//Execution Environment
			std::shared_ptr<FoundationalModelLibraryLocus> m_locus;
			std::shared_ptr<FoundationalModelLibraryExecutor> m_executor;
			std::shared_ptr<FoundationalModelLibraryExecutionFactory> m_factory;

		private:
			bool m_IsInitialized = false;
	};
}
#endif /* end of include guard: FOUNDATIONALMODELLIBRARY_EXECPLUGINIMPL_HPP */

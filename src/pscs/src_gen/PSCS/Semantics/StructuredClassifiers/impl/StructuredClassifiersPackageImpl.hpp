//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef PSCS_SEMANTICS_STRUCTUREDCLASSIFIERSPACKAGEIMPL_HPP
#define PSCS_SEMANTICS_STRUCTUREDCLASSIFIERSPACKAGEIMPL_HPP

// namespace macro header include
#include "PSCS/PSCS.hpp"

#include "ecore/ecorePackage.hpp"
#include "ecore/impl/EPackageImpl.hpp"

#include "PSCS/Semantics/StructuredClassifiers/StructuredClassifiersPackage.hpp" 


namespace PSCS::Semantics::StructuredClassifiers 
{
	class CS_DefaultRequestPropagationStrategy;
	class CS_DispatchOperationOfInterfaceStrategy;
	class CS_NameBased_StructuralFeatureOfInterfaceAccessStrategy;
	class CS_RequestPropagationStrategy;
	class CS_StructuralFeatureOfInterfaceAccessStrategy;}

namespace ecore
{
	class ecoreFactory;
}

namespace PSCS::Semantics::StructuredClassifiers
{
	class PSCS_API StructuredClassifiersPackageImpl : public ecore::EPackageImpl ,virtual public StructuredClassifiersPackage
	{
		private:    
			StructuredClassifiersPackageImpl(StructuredClassifiersPackageImpl const&) = delete;
			StructuredClassifiersPackageImpl& operator=(StructuredClassifiersPackageImpl const&) = delete;

		protected:
			StructuredClassifiersPackageImpl();

		public:
			virtual ~StructuredClassifiersPackageImpl();

			// Begin Class CS_DefaultRequestPropagationStrategy
			//Class and Feature Getter
			virtual const std::shared_ptr<ecore::EClass>& getCS_DefaultRequestPropagationStrategy_Class() const ;
			
			
			
			
			// End Class CS_DefaultRequestPropagationStrategy

			// Begin Class CS_DispatchOperationOfInterfaceStrategy
			//Class and Feature Getter
			virtual const std::shared_ptr<ecore::EClass>& getCS_DispatchOperationOfInterfaceStrategy_Class() const ;
			
			
			
			
			// End Class CS_DispatchOperationOfInterfaceStrategy

			// Begin Class CS_NameBased_StructuralFeatureOfInterfaceAccessStrategy
			//Class and Feature Getter
			virtual const std::shared_ptr<ecore::EClass>& getCS_NameBased_StructuralFeatureOfInterfaceAccessStrategy_Class() const ;
			
			
			
			
			// End Class CS_NameBased_StructuralFeatureOfInterfaceAccessStrategy

			// Begin Class CS_RequestPropagationStrategy
			//Class and Feature Getter
			virtual const std::shared_ptr<ecore::EClass>& getCS_RequestPropagationStrategy_Class() const ;
			
			
			
			virtual const std::shared_ptr<ecore::EOperation>& getCS_RequestPropagationStrategy_Operation_getName() const ;
			
			// End Class CS_RequestPropagationStrategy

			// Begin Class CS_StructuralFeatureOfInterfaceAccessStrategy
			//Class and Feature Getter
			virtual const std::shared_ptr<ecore::EClass>& getCS_StructuralFeatureOfInterfaceAccessStrategy_Class() const ;
			
			
			
			virtual const std::shared_ptr<ecore::EOperation>& getCS_StructuralFeatureOfInterfaceAccessStrategy_Operation_getName() const ;
			
			// End Class CS_StructuralFeatureOfInterfaceAccessStrategy

			virtual const std::shared_ptr<ecore::EEnum>& getCS_LinkKind_Class() const ;
			
			// SubPackages Getters
			

		private:
			std::shared_ptr<ecore::EClass> m_cS_DefaultRequestPropagationStrategy_Class = nullptr;std::shared_ptr<ecore::EClass> m_cS_DispatchOperationOfInterfaceStrategy_Class = nullptr;std::shared_ptr<ecore::EClass> m_cS_NameBased_StructuralFeatureOfInterfaceAccessStrategy_Class = nullptr;std::shared_ptr<ecore::EClass> m_cS_RequestPropagationStrategy_Class = nullptr;std::shared_ptr<ecore::EClass> m_cS_StructuralFeatureOfInterfaceAccessStrategy_Class = nullptr;
			std::shared_ptr<ecore::EEnum> m_cS_LinkKind_Class = nullptr;
			
			
			std::shared_ptr<ecore::EOperation> m_cS_StructuralFeatureOfInterfaceAccessStrategy_Operation_getName = nullptr;std::shared_ptr<ecore::EOperation> m_cS_RequestPropagationStrategy_Operation_getName = nullptr;

			friend class StructuredClassifiersPackage;

			static bool isInited;
			static StructuredClassifiersPackage* create();
			bool isInitialized = false;
 			bool isCreated = false;

			virtual void init(std::shared_ptr<ecore::EPackage> package);

		public:
			void createPackageContents(std::shared_ptr<ecore::EPackage> package);
			void initializePackageContents();

		private:
			void createCS_DefaultRequestPropagationStrategyContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createCS_DispatchOperationOfInterfaceStrategyContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createCS_NameBased_StructuralFeatureOfInterfaceAccessStrategyContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createCS_RequestPropagationStrategyContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createCS_StructuralFeatureOfInterfaceAccessStrategyContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createPackageEDataTypes(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);

			void initializeCS_DefaultRequestPropagationStrategyContent();
			void initializeCS_DispatchOperationOfInterfaceStrategyContent();
			void initializeCS_NameBased_StructuralFeatureOfInterfaceAccessStrategyContent();
			void initializeCS_RequestPropagationStrategyContent();
			void initializeCS_StructuralFeatureOfInterfaceAccessStrategyContent();
			void initializePackageEDataTypes();



	};
}
#endif /* end of include guard: PSCS_SEMANTICS_STRUCTUREDCLASSIFIERSPACKAGEIMPL_HPP */

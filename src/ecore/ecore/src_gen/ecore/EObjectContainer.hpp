//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef ECORE_EOBJECTCONTAINER_HPP
#define ECORE_EOBJECTCONTAINER_HPP


#include <memory>
#include <string>
// forward declarations
template<class T> class Bag; 


//*********************************
// generated Includes

//Forward Declaration for used types 

// namespace macro header include
#include "ecore/ecore.hpp"

// base class includes
#include "ecore/EObject.hpp"




//*********************************
namespace ecore 
{
	
	class ECORE_API EObjectContainer : virtual public EObject
	{
		public:
 			EObjectContainer(const EObjectContainer &) {}

		protected:
			EObjectContainer(){}

		public:
			virtual std::shared_ptr<ecore::EObject> copy() const = 0;

			//destructor
			virtual ~EObjectContainer() {}

			//*********************************
			// Operations
			//*********************************
			virtual void setContainer(std::shared_ptr<Bag<ecore::EObject>> container) = 0;

			//*********************************
			// Attribute Getters & Setters
			//*********************************

			//*********************************
			// Reference Getters & Setters
			//*********************************
			virtual std::shared_ptr<Bag<ecore::EObject>> getContainer() const = 0;

			//*********************************
			// Union Reference Getters
			//*********************************

			//*********************************
			// Container Getter
			//*********************************
			virtual std::shared_ptr<ecore::EObject> eContainer() const = 0; 

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			
			//*********************************
			// Reference Members
			//*********************************
			mutable std::shared_ptr<Bag<ecore::EObject>> m_container;
	};
}
#endif /* end of include guard: ECORE_EOBJECTCONTAINER_HPP */

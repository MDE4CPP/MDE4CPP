// DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN
// @generator: uml4cpp::generator::main::configuration::generateGradleFiles

description 'Build tasks for project: StandardProfile'

task runCommandCompileStandardProfile(type:Exec) {
	commandLine 'cmd', '/c', 'gradlew src_gen:compileStandardProfileSrc'
	mustRunAfter =  [
		"model:generateStandardProfile" 
		, getRootProject().getTasksByName('compileEcore', true)
		, getRootProject().getTasksByName('compileUml', true)
		, getRootProject().getTasksByName('compileEcoreReflection', true)
		, getRootProject().getTasksByName('compilePrimitivetypesReflection', true)
		, getRootProject().getTasksByName('compileUmlReflection', true)
	]
}

task compileStandardProfile() {
	group 'StandardProfile'
	description 'compile StandardProfile'

	def buildFile = file('src_gen/build.gradle')
	if(!buildFile.exists()){ 
		dependsOn 'model:generateStandardProfile'
		dependsOn 'runCommandCompileStandardProfile'
	}
	if(buildFile.exists()){
		dependsOn 'model:generateStandardProfile'
		dependsOn 'src_gen:compileStandardProfileSrc'
	}
	mustRunAfter =  [
		"model:generateStandardProfile" 
		, getRootProject().getTasksByName('compileEcore', true)
		, getRootProject().getTasksByName('compileUml', true)
		, getRootProject().getTasksByName('compileEcoreReflection', true)
		, getRootProject().getTasksByName('compilePrimitivetypesReflection', true)
		, getRootProject().getTasksByName('compileUmlReflection', true)
	]
}

task buildStandardProfile() {
	group 'StandardProfile'
	description 'build StandardProfile'

	dependsOn 'compileStandardProfile'
	dependsOn 'model:generateStandardProfile'
	dependsOn getRootProject().getTasksByName('buildEcore', true)
	dependsOn getRootProject().getTasksByName('buildUml', true)
	dependsOn getRootProject().getTasksByName('buildEcoreReflection', true)
	dependsOn getRootProject().getTasksByName('buildPrimitivetypesReflection', true)
	dependsOn getRootProject().getTasksByName('buildUmlReflection', true)
}

[comment encoding = UTF-8 /]
[**
 * Copyright (c) 2017 TU Ilmenau, Systems and Software Engineering Group
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), 
 * to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 * and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */]
[module generateEnum('http://www.eclipse.org/emf/2002/Ecore')]

[import ecore4CPP::generator::main::helper /]
[import ecore4CPP::generator::main::validation::validation /]

[**
 * The documentation of the template generateEnum.
 * @param anEEnum
 */]
[template public generateEnum(anEEnum : EEnum)]
[file (anEEnum.generateNamespacePath().concat('/').concat(anEEnum.name).concat('.hpp'), false, 'UTF-8')]
[startGuard(anEEnum)/] 

namespace [anEEnum.generateNamespaceDefinition()/] 
{
	enum class [anEEnum.name/] {
[for (lit : EEnumLiteral | anEEnum.eLiterals->reject(doNotGenerateEEnumLiteral())->asOrderedSet()->sortedBy(name)) separator (',\n')]
	[if (lit.doNotGenerateEEnumLiteral())]
		[printInfo(lit.eEnumLiteralNoGenerationMessage(), 2)/]
	[else]
		[printInfo(lit.eEnumLiteralGenerationMessage(), 2)/]
		[lit.name.toUpperCase()/] = [lit.value.toString()/]
	[/if]
[/for]
	};
}
#endif /* end of include guard: [anEEnum.name.toUpperFirst().concat('_hpp').toUpperCase()/] */
[/file]
[/template]
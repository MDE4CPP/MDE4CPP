//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef OCL_VALUESPACKAGEIMPL_HPP
#define OCL_VALUESPACKAGEIMPL_HPP

#include "ecore/ecorePackage.hpp"
#include "ecore/impl/EPackageImpl.hpp"

#include "ocl/Values/ValuesPackage.hpp" 


namespace ocl::Values 
{
	class BagTypeValue;
	class CollectionValue;
	class Element;
	class LocalSnapshot;
	class NameValueBinding;
	class ObjectValue;
	class OclMessageValue;
	class OclVoidValue;
	class OrderedSetTypeValue;
	class SequenceTypeValue;
	class SetTypeValue;
	class StaticValue;
	class TupleValue;
	class UndefinedValue;}

namespace ecore
{
	class ecoreFactory;
}

namespace ocl::Values
{
	class ValuesPackageImpl : public ecore::EPackageImpl ,virtual public ValuesPackage
	{
		private:    
			ValuesPackageImpl(ValuesPackageImpl const&) = delete;
			ValuesPackageImpl& operator=(ValuesPackageImpl const&) = delete;

		protected:
			ValuesPackageImpl();

		public:
			virtual ~ValuesPackageImpl();

			// Begin Class BagTypeValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getBagTypeValue_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getBagTypeValue_Operation_addValue_Value() const ;
			
			// End Class BagTypeValue

			// Begin Class CollectionValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getCollectionValue_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getCollectionValue_Attribute_elements() const ;
			virtual std::shared_ptr<ecore::EReference> getCollectionValue_Attribute_model() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getCollectionValue_Operation_addValue_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getCollectionValue_Operation_equals_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getCollectionValue_Operation_find_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getCollectionValue_Operation_toString() const ;
			
			// End Class CollectionValue

			// Begin Class Element
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getElement_Attribute_indexNr() const ;
			
			virtual std::shared_ptr<ecore::EReference> getElement_Attribute_value() const ;
			
			
			// End Class Element

			// Begin Class LocalSnapshot
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLocalSnapshot_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getLocalSnapshot_Attribute_isPost() const ;
			virtual std::shared_ptr<ecore::EAttribute> getLocalSnapshot_Attribute_isPre() const ;
			
			virtual std::shared_ptr<ecore::EReference> getLocalSnapshot_Attribute_bindings() const ;
			virtual std::shared_ptr<ecore::EReference> getLocalSnapshot_Attribute_inputQ() const ;
			virtual std::shared_ptr<ecore::EReference> getLocalSnapshot_Attribute_outputQ() const ;
			virtual std::shared_ptr<ecore::EReference> getLocalSnapshot_Attribute_pred() const ;
			virtual std::shared_ptr<ecore::EReference> getLocalSnapshot_Attribute_succ() const ;
			
			
			// End Class LocalSnapshot

			// Begin Class NameValueBinding
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getNameValueBinding_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getNameValueBinding_Attribute_name() const ;
			
			virtual std::shared_ptr<ecore::EReference> getNameValueBinding_Attribute_value() const ;
			
			
			// End Class NameValueBinding

			// Begin Class ObjectValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getObjectValue_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getObjectValue_Attribute_history() const ;
			virtual std::shared_ptr<ecore::EReference> getObjectValue_Attribute_value() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getObjectValue_Operation_equals_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getObjectValue_Operation_toString() const ;
			
			// End Class ObjectValue

			// Begin Class OclMessageValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getOclMessageValue_Class() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getOclMessageValue_Attribute_isAsyncOperation() const ;
			virtual std::shared_ptr<ecore::EAttribute> getOclMessageValue_Attribute_isSignal() const ;
			virtual std::shared_ptr<ecore::EAttribute> getOclMessageValue_Attribute_isSyncOperation() const ;
			virtual std::shared_ptr<ecore::EAttribute> getOclMessageValue_Attribute_name() const ;
			
			virtual std::shared_ptr<ecore::EReference> getOclMessageValue_Attribute_arguments() const ;
			virtual std::shared_ptr<ecore::EReference> getOclMessageValue_Attribute_returnMessage() const ;
			virtual std::shared_ptr<ecore::EReference> getOclMessageValue_Attribute_source() const ;
			virtual std::shared_ptr<ecore::EReference> getOclMessageValue_Attribute_target() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getOclMessageValue_Operation_toString() const ;
			
			// End Class OclMessageValue

			// Begin Class OclVoidValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getOclVoidValue_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getOclVoidValue_Operation_equals_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getOclVoidValue_Operation_toString() const ;
			
			// End Class OclVoidValue

			// Begin Class OrderedSetTypeValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getOrderedSetTypeValue_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getOrderedSetTypeValue_Operation_addValue_Value() const ;
			
			// End Class OrderedSetTypeValue

			// Begin Class SequenceTypeValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSequenceTypeValue_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getSequenceTypeValue_Operation_addValue_Value() const ;
			
			// End Class SequenceTypeValue

			// Begin Class SetTypeValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSetTypeValue_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getSetTypeValue_Operation_addValue_Value() const ;
			
			// End Class SetTypeValue

			// Begin Class StaticValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getStaticValue_Class() const ;
			
			
			
			
			// End Class StaticValue

			// Begin Class TupleValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getTupleValue_Class() const ;
			
			
			virtual std::shared_ptr<ecore::EReference> getTupleValue_Attribute_elements() const ;
			virtual std::shared_ptr<ecore::EReference> getTupleValue_Attribute_model() const ;
			
			virtual std::shared_ptr<ecore::EOperation> getTupleValue_Operation_equals_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getTupleValue_Operation_toString() const ;
			
			// End Class TupleValue

			// Begin Class UndefinedValue
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getUndefinedValue_Class() const ;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getUndefinedValue_Operation_equals_Value() const ;
			virtual std::shared_ptr<ecore::EOperation> getUndefinedValue_Operation_toString() const ;
			
			// End Class UndefinedValue

			
			// SubPackages Getters
			

		private:
			std::shared_ptr<ecore::EClass> m_bagTypeValue_Class = nullptr;std::shared_ptr<ecore::EClass> m_collectionValue_Class = nullptr;std::shared_ptr<ecore::EClass> m_element_Class = nullptr;std::shared_ptr<ecore::EClass> m_localSnapshot_Class = nullptr;std::shared_ptr<ecore::EClass> m_nameValueBinding_Class = nullptr;std::shared_ptr<ecore::EClass> m_objectValue_Class = nullptr;std::shared_ptr<ecore::EClass> m_oclMessageValue_Class = nullptr;std::shared_ptr<ecore::EClass> m_oclVoidValue_Class = nullptr;std::shared_ptr<ecore::EClass> m_orderedSetTypeValue_Class = nullptr;std::shared_ptr<ecore::EClass> m_sequenceTypeValue_Class = nullptr;std::shared_ptr<ecore::EClass> m_setTypeValue_Class = nullptr;std::shared_ptr<ecore::EClass> m_staticValue_Class = nullptr;std::shared_ptr<ecore::EClass> m_tupleValue_Class = nullptr;std::shared_ptr<ecore::EClass> m_undefinedValue_Class = nullptr;
			
			std::shared_ptr<ecore::EAttribute> m_element_Attribute_indexNr = nullptr;std::shared_ptr<ecore::EAttribute> m_oclMessageValue_Attribute_isAsyncOperation = nullptr;std::shared_ptr<ecore::EAttribute> m_localSnapshot_Attribute_isPost = nullptr;std::shared_ptr<ecore::EAttribute> m_localSnapshot_Attribute_isPre = nullptr;std::shared_ptr<ecore::EAttribute> m_oclMessageValue_Attribute_isSignal = nullptr;std::shared_ptr<ecore::EAttribute> m_oclMessageValue_Attribute_isSyncOperation = nullptr;std::shared_ptr<ecore::EAttribute> m_nameValueBinding_Attribute_name = nullptr;std::shared_ptr<ecore::EAttribute> m_oclMessageValue_Attribute_name = nullptr;
			std::shared_ptr<ecore::EReference> m_oclMessageValue_Attribute_arguments = nullptr;std::shared_ptr<ecore::EReference> m_localSnapshot_Attribute_bindings = nullptr;std::shared_ptr<ecore::EReference> m_collectionValue_Attribute_elements = nullptr;std::shared_ptr<ecore::EReference> m_tupleValue_Attribute_elements = nullptr;std::shared_ptr<ecore::EReference> m_objectValue_Attribute_history = nullptr;std::shared_ptr<ecore::EReference> m_localSnapshot_Attribute_inputQ = nullptr;std::shared_ptr<ecore::EReference> m_collectionValue_Attribute_model = nullptr;std::shared_ptr<ecore::EReference> m_tupleValue_Attribute_model = nullptr;std::shared_ptr<ecore::EReference> m_localSnapshot_Attribute_outputQ = nullptr;std::shared_ptr<ecore::EReference> m_localSnapshot_Attribute_pred = nullptr;std::shared_ptr<ecore::EReference> m_oclMessageValue_Attribute_returnMessage = nullptr;std::shared_ptr<ecore::EReference> m_oclMessageValue_Attribute_source = nullptr;std::shared_ptr<ecore::EReference> m_localSnapshot_Attribute_succ = nullptr;std::shared_ptr<ecore::EReference> m_oclMessageValue_Attribute_target = nullptr;std::shared_ptr<ecore::EReference> m_nameValueBinding_Attribute_value = nullptr;std::shared_ptr<ecore::EReference> m_element_Attribute_value = nullptr;std::shared_ptr<ecore::EReference> m_objectValue_Attribute_value = nullptr;
			std::shared_ptr<ecore::EOperation> m_bagTypeValue_Operation_addValue_Value = nullptr;std::shared_ptr<ecore::EOperation> m_sequenceTypeValue_Operation_addValue_Value = nullptr;std::shared_ptr<ecore::EOperation> m_collectionValue_Operation_addValue_Value = nullptr;std::shared_ptr<ecore::EOperation> m_setTypeValue_Operation_addValue_Value = nullptr;std::shared_ptr<ecore::EOperation> m_orderedSetTypeValue_Operation_addValue_Value = nullptr;std::shared_ptr<ecore::EOperation> m_objectValue_Operation_equals_Value = nullptr;std::shared_ptr<ecore::EOperation> m_collectionValue_Operation_equals_Value = nullptr;std::shared_ptr<ecore::EOperation> m_oclVoidValue_Operation_equals_Value = nullptr;std::shared_ptr<ecore::EOperation> m_tupleValue_Operation_equals_Value = nullptr;std::shared_ptr<ecore::EOperation> m_undefinedValue_Operation_equals_Value = nullptr;std::shared_ptr<ecore::EOperation> m_collectionValue_Operation_find_Value = nullptr;std::shared_ptr<ecore::EOperation> m_objectValue_Operation_toString = nullptr;std::shared_ptr<ecore::EOperation> m_collectionValue_Operation_toString = nullptr;std::shared_ptr<ecore::EOperation> m_oclVoidValue_Operation_toString = nullptr;std::shared_ptr<ecore::EOperation> m_oclMessageValue_Operation_toString = nullptr;std::shared_ptr<ecore::EOperation> m_tupleValue_Operation_toString = nullptr;std::shared_ptr<ecore::EOperation> m_undefinedValue_Operation_toString = nullptr;

			friend class ValuesPackage;

			static bool isInited;
			static ValuesPackage* create();
			bool isInitialized = false;
 			bool isCreated = false;

			virtual void init(std::shared_ptr<ecore::EPackage> package);

		public:
			void createPackageContents(std::shared_ptr<ecore::EPackage> package);
			void initializePackageContents();

		private:
			void createBagTypeValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createCollectionValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createElementContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createLocalSnapshotContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createNameValueBindingContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createObjectValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createOclMessageValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createOclVoidValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createOrderedSetTypeValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createSequenceTypeValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createSetTypeValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createStaticValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createTupleValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createUndefinedValueContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);
			void createPackageEDataTypes(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);

			void initializeBagTypeValueContent();
			void initializeCollectionValueContent();
			void initializeElementContent();
			void initializeLocalSnapshotContent();
			void initializeNameValueBindingContent();
			void initializeObjectValueContent();
			void initializeOclMessageValueContent();
			void initializeOclVoidValueContent();
			void initializeOrderedSetTypeValueContent();
			void initializeSequenceTypeValueContent();
			void initializeSetTypeValueContent();
			void initializeStaticValueContent();
			void initializeTupleValueContent();
			void initializeUndefinedValueContent();
			void initializePackageEDataTypes();



	};
}
#endif /* end of include guard: OCL_VALUESPACKAGEIMPL_HPP */

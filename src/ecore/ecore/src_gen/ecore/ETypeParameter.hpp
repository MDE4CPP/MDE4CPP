//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef ECORE_ETYPEPARAMETER_HPP
#define ECORE_ETYPEPARAMETER_HPP


#include <memory>
#include <string>
// forward declarations
template<class T> class Bag; 


//*********************************
// generated Includes

//Forward Declaration for used types 
namespace ecore 
{
	class EAnnotation;
	class EGenericType;
}

// namespace macro header include
#include "ecore/ecore.hpp"

// base class includes
#include "ecore/ENamedElement.hpp"




//*********************************
namespace ecore 
{
	
	class ECORE_API ETypeParameter : virtual public ENamedElement
	{
		public:
 			ETypeParameter(const ETypeParameter &) {}

		protected:
			ETypeParameter(){}

		public:
			virtual std::shared_ptr<ecore::EObject> copy() const = 0;

			//destructor
			virtual ~ETypeParameter() {}

			//*********************************
			// Operations
			//*********************************

			//*********************************
			// Attribute Getters & Setters
			//*********************************

			//*********************************
			// Reference Getters & Setters
			//*********************************
			virtual std::shared_ptr<Bag<ecore::EGenericType>> getEBounds() const = 0;

			//*********************************
			// Union Reference Getters
			//*********************************

			//*********************************
			// Container Getter
			//*********************************
			virtual std::shared_ptr<ecore::EObject> eContainer() const = 0; 

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			
			//*********************************
			// Reference Members
			//*********************************
			mutable std::shared_ptr<Bag<ecore::EGenericType>> m_eBounds;
	};
}
#endif /* end of include guard: ECORE_ETYPEPARAMETER_HPP */

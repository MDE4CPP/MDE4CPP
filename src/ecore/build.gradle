// DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN
// @generator: ecore4cpp::generator::main::generateBuildFile

description 'Build task for project: ecore'

task runCommandCompileEcore(type:Exec) {
	commandLine 'cmd', '/c', 'gradlew src_gen:compileEcoreSrc'
	mustRunAfter =  [
		'generateEcore'
	
	]
}

task runCommandGenerateEcore(type:Exec) {
	def modelPath = file('.' + File.separator + 'model' + File.separator + 'ecore.ecore')
	commandLine 'cmd', '/c', 'gradlew :src:common:universalGradleTasks:generateModel -PModel='+modelPath.absolutePath
}

task generateEcore() {
	group 'ecore'	
	description 'generate C++ code of ecore.ecore model ecore' 
 
	def buildFile = file('model'+ File.separator +'build.gradle')
	if(!buildFile.exists())
	{
		dependsOn 'runCommandGenerateEcore'
	}
	else
	{
		dependsOn 'model:generateEcoreModel'
	}
}

task compileEcore() {
	group 'ecore'
	description 'compile ecore' 

	def buildFile = file('src_gen'+ File.separator + 'build.gradle')

	if(!buildFile.exists()){ 
		mustRunAfter = ["generateEcore"]
		dependsOn 'runCommandCompileEcore'
	}
	else
	{
		mustRunAfter = ["generateEcore"]
		dependsOn 'src_gen:compileEcoreSrc'
	} 
	mustRunAfter =  [
		'generateEcore'
	
	]
}

task buildEcore() {
	group 'ecore'
	description 'build ecore'

	dependsOn 'generateEcore'
	dependsOn 'compileEcore'

}

//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_SEMANTICS_LOCIPACKAGE_HPP
#define FUML_SEMANTICS_LOCIPACKAGE_HPP

#include "ecore/EPackage.hpp"

namespace ecore 
{
	class EAnnotation;
	class EClass;
	class EDataType;
	class EGenericType;
	class EOperation;
	class EParameter;
	class EReference;
	class EStringToStringMapEntry;
}

namespace fUML::Semantics::Loci 
{
	class ChoiceStrategy;
	class ExecutionFactory;
	class Executor;
	class FirstChoiceStrategy;
	class Locus;
	class SemanticStrategy;
	class SemanticVisitor;
}

namespace fUML::Semantics::Loci 
{
	/*!
	The Metamodel Package for the Loci metamodel. This package is used to enable the reflection of model elements. It contains all model elements
	which were described in an ecore file.
	*/
	/*!
	 */
	class LociPackage : virtual public ecore::EPackage 
	{
		private:    
			LociPackage(LociPackage const&) = delete;
			LociPackage& operator=(LociPackage const&) = delete;

		protected:
			LociPackage(){}

		public:
			//static variables
			static const std::string eNAME;
			static const std::string eNS_URI;
			static const std::string eNS_PREFIX;

			// Begin Class ChoiceStrategy
			//Class and Feature IDs 
			static const unsigned int CHOICESTRATEGY_CLASS = 21;
			static const unsigned int CHOICESTRATEGY_CLASS_FEATURE_COUNT = 0;
			static const unsigned int CHOICESTRATEGY_CLASS_OPERATION_COUNT = 3;
			
			
			static const int CHOICESTRATEGY_OPERATION_CHOOSE_EINT = 2101;
			static const int CHOICESTRATEGY_OPERATION_GETNAME = 2102;
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getChoiceStrategy_Class() const = 0;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getChoiceStrategy_Operation_choose_EInt() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getChoiceStrategy_Operation_getName() const = 0;
			
			// End Class ChoiceStrategy


			// Begin Class ExecutionFactory
			//Class and Feature IDs 
			static const unsigned int EXECUTIONFACTORY_CLASS = 47;
			static const unsigned int EXECUTIONFACTORY_CLASS_FEATURE_COUNT = 4;
			static const unsigned int EXECUTIONFACTORY_CLASS_OPERATION_COUNT = 10;
			
			static const int EXECUTIONFACTORY_ATTRIBUTE_BUILTINTYPES = 4703;
			static const int EXECUTIONFACTORY_ATTRIBUTE_LOCUS = 4700;
			static const int EXECUTIONFACTORY_ATTRIBUTE_PRIMITIVEBEHAVIORPROTOTYPES = 4702;
			static const int EXECUTIONFACTORY_ATTRIBUTE_STRATEGIES = 4701;
			
			static const int EXECUTIONFACTORY_OPERATION_ADDBUILTINTYPE_PRIMITIVETYPE = 4709;
			static const int EXECUTIONFACTORY_OPERATION_ADDPRIMITIVEBEHAVIORPROTOTYPE_OPAQUEBEHAVIOREXECUTION = 4708;
			static const int EXECUTIONFACTORY_OPERATION_ASSIGNSTRATEGY_SEMANTICSTRATEGY = 4711;
			static const int EXECUTIONFACTORY_OPERATION_CREATEEVALUATION_VALUESPECIFICATION = 4705;
			static const int EXECUTIONFACTORY_OPERATION_CREATEEXECUTION_BEHAVIOR_OBJECT = 4704;
			static const int EXECUTIONFACTORY_OPERATION_GETBUILTINTYPE_ESTRING = 4710;
			static const int EXECUTIONFACTORY_OPERATION_GETSTRATEGY_ESTRING = 4712;
			static const int EXECUTIONFACTORY_OPERATION_GETSTRATEGYINDEX_ESTRING = 4713;
			static const int EXECUTIONFACTORY_OPERATION_INSTANTIATEOPAQUEBEHAVIOREXECUTION_OPAQUEBEHAVIOR = 4707;
			static const int EXECUTIONFACTORY_OPERATION_INSTANTIATEVISITOR_ELEMENT = 4706;
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExecutionFactory_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getExecutionFactory_Attribute_builtInTypes() const = 0;
			virtual std::shared_ptr<ecore::EReference> getExecutionFactory_Attribute_locus() const = 0;
			virtual std::shared_ptr<ecore::EReference> getExecutionFactory_Attribute_primitiveBehaviorPrototypes() const = 0;
			virtual std::shared_ptr<ecore::EReference> getExecutionFactory_Attribute_strategies() const = 0;
			
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_Operation_addBuiltInType_PrimitiveType() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_Operation_addPrimitiveBehaviorPrototype_OpaqueBehaviorExecution() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_Operation_assignStrategy_SemanticStrategy() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_Operation_createEvaluation_ValueSpecification() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_Operation_createExecution_Behavior_Object() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_Operation_getBuiltInType_EString() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_Operation_getStrategy_EString() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_Operation_getStrategyIndex_EString() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_Operation_instantiateOpaqueBehaviorExecution_OpaqueBehavior() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getExecutionFactory_Operation_instantiateVisitor_Element() const = 0;
			
			// End Class ExecutionFactory


			// Begin Class Executor
			//Class and Feature IDs 
			static const unsigned int EXECUTOR_CLASS = 48;
			static const unsigned int EXECUTOR_CLASS_FEATURE_COUNT = 1;
			static const unsigned int EXECUTOR_CLASS_OPERATION_COUNT = 3;
			
			static const int EXECUTOR_ATTRIBUTE_LOCUS = 4800;
			
			static const int EXECUTOR_OPERATION_EVALUATE_VALUESPECIFICATION = 4801;
			static const int EXECUTOR_OPERATION_EXECUTE_BEHAVIOR_PARAMETERVALUE = 4803;
			static const int EXECUTOR_OPERATION_START_CLASS_PARAMETERVALUE = 4802;
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExecutor_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getExecutor_Attribute_locus() const = 0;
			
			virtual std::shared_ptr<ecore::EOperation> getExecutor_Operation_evaluate_ValueSpecification() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getExecutor_Operation_execute_Behavior_ParameterValue() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getExecutor_Operation_start_Class_ParameterValue() const = 0;
			
			// End Class Executor


			// Begin Class FirstChoiceStrategy
			//Class and Feature IDs 
			static const unsigned int FIRSTCHOICESTRATEGY_CLASS = 56;
			static const unsigned int FIRSTCHOICESTRATEGY_CLASS_FEATURE_COUNT = 0;
			static const unsigned int FIRSTCHOICESTRATEGY_CLASS_OPERATION_COUNT = 4;
			
			
			static const int FIRSTCHOICESTRATEGY_OPERATION_CHOOSE_EINT = 5603;
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getFirstChoiceStrategy_Class() const = 0;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getFirstChoiceStrategy_Operation_choose_EInt() const = 0;
			
			// End Class FirstChoiceStrategy


			// Begin Class Locus
			//Class and Feature IDs 
			static const unsigned int LOCUS_CLASS = 77;
			static const unsigned int LOCUS_CLASS_FEATURE_COUNT = 3;
			static const unsigned int LOCUS_CLASS_OPERATION_COUNT = 7;
			
			static const int LOCUS_ATTRIBUTE_EXECUTOR = 7700;
			static const int LOCUS_ATTRIBUTE_EXTENSIONALVALUES = 7702;
			static const int LOCUS_ATTRIBUTE_FACTORY = 7701;
			
			static const int LOCUS_OPERATION_ADD_EXTENSIONALVALUE = 7707;
			static const int LOCUS_OPERATION_ASSIGNEXECUTOR_EXECUTOR = 7704;
			static const int LOCUS_OPERATION_ASSIGNFACTORY_EXECUTIONFACTORY = 7705;
			static const int LOCUS_OPERATION_CONFORMS_CLASSIFIER_CLASSIFIER = 7703;
			static const int LOCUS_OPERATION_INSTANTIATE_CLASS = 7709;
			static const int LOCUS_OPERATION_REMOVE_EXTENSIONALVALUE = 7708;
			static const int LOCUS_OPERATION_RETRIEVEEXTENT_CLASSIFIER = 7706;
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLocus_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getLocus_Attribute_executor() const = 0;
			virtual std::shared_ptr<ecore::EReference> getLocus_Attribute_extensionalValues() const = 0;
			virtual std::shared_ptr<ecore::EReference> getLocus_Attribute_factory() const = 0;
			
			virtual std::shared_ptr<ecore::EOperation> getLocus_Operation_add_ExtensionalValue() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getLocus_Operation_assignExecutor_Executor() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getLocus_Operation_assignFactory_ExecutionFactory() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getLocus_Operation_conforms_Classifier_Classifier() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getLocus_Operation_instantiate_Class() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getLocus_Operation_remove_ExtensionalValue() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getLocus_Operation_retrieveExtent_Classifier() const = 0;
			
			// End Class Locus


			// Begin Class SemanticStrategy
			//Class and Feature IDs 
			static const unsigned int SEMANTICSTRATEGY_CLASS = 103;
			static const unsigned int SEMANTICSTRATEGY_CLASS_FEATURE_COUNT = 0;
			static const unsigned int SEMANTICSTRATEGY_CLASS_OPERATION_COUNT = 1;
			
			
			static const int SEMANTICSTRATEGY_OPERATION_GETNAME = 10300;
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSemanticStrategy_Class() const = 0;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getSemanticStrategy_Operation_getName() const = 0;
			
			// End Class SemanticStrategy


			// Begin Class SemanticVisitor
			//Class and Feature IDs 
			static const unsigned int SEMANTICVISITOR_CLASS = 104;
			static const unsigned int SEMANTICVISITOR_CLASS_FEATURE_COUNT = 0;
			static const unsigned int SEMANTICVISITOR_CLASS_OPERATION_COUNT = 2;
			
			
			static const int SEMANTICVISITOR_OPERATION__BEGINISOLATION = 10401;
			static const int SEMANTICVISITOR_OPERATION__ENDISOLATION = 10400;
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getSemanticVisitor_Class() const = 0;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getSemanticVisitor_Operation__beginIsolation() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getSemanticVisitor_Operation__endIsolation() const = 0;
			
			// End Class SemanticVisitor

			
			

			

			//Singleton Instance and Getter
			private:
				static std::shared_ptr<LociPackage> instance;
			public:
				static std::shared_ptr<LociPackage> eInstance();
	};
}
#endif /* end of include guard: FUML_SEMANTICS_LOCIPACKAGE_HPP */

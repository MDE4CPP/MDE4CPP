description 'Example collection'

task generateAllExamples() {
	group 'Examples'
	description 'generate all examples'	
	
	dependsOn getRootProject().getTasksByName('createAllGenerators', true)
		
	doLast {				
		def tool = '/bin/sh'
		def command = '-c'
		def prefix = './'
		
		if (System.properties['os.name'].toLowerCase().contains('windows')) {
			tool = 'cmd'
			command = '/C'
			prefix = ''
		}
	
		[  	'./commonExamples/SubsetUnionExample/SubsetUnion/model/', 
			'./commonExamples/SubsetUnionExample/SubsetUnionDepth/model/', 
			'./ecoreExamples/ecoreModelExample/model/',
			'./UMLExamples/UMLModelExample/model/',		
			'./fUMLExamples/Calculator/model/', 
			'./fUMLExamples/ThreePhilosophers/model/',
			'./PSCSExamples/Ampelsteuerung_Example/model'
		].each { path ->
			exec
			{
				workingDir = file("${path}")
				commandLine = [tool, command, prefix + 'generate']
			}
		} 		
    }
}

task compileAllExamples() {
	group 'Examples'
	description 'compile applications for all examples without generating the models'
	
	// common examples
	dependsOn getRootProject().getTasksByName('compileExamplePersistence', true)
	dependsOn getRootProject().getTasksByName('compileExamplePluginFramework', true)
	dependsOn getRootProject().getTasksByName('compileApplicationForSubsetUnion', true)
	dependsOn getRootProject().getTasksByName('compileApplicationForSubsetUnionDepth', true)
	
	// ecore examples
	dependsOn getRootProject().getTasksByName('compileEcoreExample', true)
	dependsOn getRootProject().getTasksByName('compileApplicationForLibraryModel_ecore', true)
	
	// uml examples
	dependsOn getRootProject().getTasksByName('compileUMLExample', true)
	dependsOn getRootProject().getTasksByName('compileApplicationForLibraryModel_uml', true)
	
	// fUML examples
	dependsOn getRootProject().getTasksByName('compileApplicationForCalcModel', true)
	dependsOn getRootProject().getTasksByName('compileApplicationForPhilosophers', true)
	
	// PSCS examples
	dependsOn getRootProject().getTasksByName('compileApplicationForAmpelsteuerung_Example', true)
}

task buildAllExamples() {
	group 'Examples'
	description 'generate and compile all example applications'
	
	// common examples
	dependsOn getRootProject().getTasksByName('compileExamplePersistence', true)
	dependsOn getRootProject().getTasksByName('compileExamplePluginFramework', true)
	dependsOn getRootProject().getTasksByName('buildSubsetUnion', true)
	dependsOn getRootProject().getTasksByName('buildSubsetUnionDepth', true)
	
	// ecore examples
	dependsOn getRootProject().getTasksByName('compileEcoreExample', true)
	dependsOn getRootProject().getTasksByName('buildLibraryModel_ecore', true)
	
	// uml examples
	dependsOn getRootProject().getTasksByName('compileUMLExample', true)
	dependsOn getRootProject().getTasksByName('buildLibraryModel_uml', true)
	
	// fUML examples
	dependsOn getRootProject().getTasksByName('buildCalcModel', true)
	dependsOn getRootProject().getTasksByName('buildPhilosophers', true)
	
	// PSCS examples
	dependsOn getRootProject().getTasksByName('buildAmpelsteuerung_Example', true)
}



task compileAllBenchmarks() {
	group 'Benchmarks'
	description 'compile applications for all benchmarks'	
	
	// benchmarks
	dependsOn getRootProject().getTasksByName('compileEcoreBenchmark', true)
	dependsOn getRootProject().getTasksByName('compileMemoryBenchmarkEcore', true)
	dependsOn getRootProject().getTasksByName('compileUMLBenchmark', true)
}
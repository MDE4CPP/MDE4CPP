//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef PSCS_SEMANTICS_STRUCTUREDCLASSIFIERS_CS_NAMEBASED_STRUCTURALFEATUREOFINTERFACEACCESSSTRATEGYCS_NAMEBASED_STRUCTURALFEATUREOFINTERFACEACCESSSTRATEGYIMPL_HPP
#define PSCS_SEMANTICS_STRUCTUREDCLASSIFIERS_CS_NAMEBASED_STRUCTURALFEATUREOFINTERFACEACCESSSTRATEGYCS_NAMEBASED_STRUCTURALFEATUREOFINTERFACEACCESSSTRATEGYIMPL_HPP

//*********************************
// generated Includes

//Model includes
#include "../CS_NameBased_StructuralFeatureOfInterfaceAccessStrategy.hpp"

#include "PSCS/impl/PSCSFactoryImpl.hpp"
#include "PSCS/Semantics/StructuredClassifiers/impl/CS_StructuralFeatureOfInterfaceAccessStrategyImpl.hpp"

//*********************************
namespace PSCS::Semantics::StructuredClassifiers 
{
	class CS_NameBased_StructuralFeatureOfInterfaceAccessStrategyImpl :virtual public CS_StructuralFeatureOfInterfaceAccessStrategyImpl, virtual public CS_NameBased_StructuralFeatureOfInterfaceAccessStrategy 
	{
		public: 
			CS_NameBased_StructuralFeatureOfInterfaceAccessStrategyImpl(const CS_NameBased_StructuralFeatureOfInterfaceAccessStrategyImpl & obj);
			virtual std::shared_ptr<ecore::EObject> copy() const;

		private:    
			CS_NameBased_StructuralFeatureOfInterfaceAccessStrategyImpl& operator=(CS_NameBased_StructuralFeatureOfInterfaceAccessStrategyImpl const&) = delete;

		protected:
			friend class PSCS::PSCSFactoryImpl;
			CS_NameBased_StructuralFeatureOfInterfaceAccessStrategyImpl();
			virtual std::shared_ptr<CS_NameBased_StructuralFeatureOfInterfaceAccessStrategy> getThisCS_NameBased_StructuralFeatureOfInterfaceAccessStrategyPtr() const;
			virtual void setThisCS_NameBased_StructuralFeatureOfInterfaceAccessStrategyPtr(std::weak_ptr<CS_NameBased_StructuralFeatureOfInterfaceAccessStrategy> thisCS_NameBased_StructuralFeatureOfInterfaceAccessStrategyPtr);



		public:
			//destructor
			virtual ~CS_NameBased_StructuralFeatureOfInterfaceAccessStrategyImpl();
			
			//*********************************
			// Operations
			//*********************************
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			
			//*********************************
			// Reference
			//*********************************
							
			
			//*********************************
			// Union Getter
			//*********************************
			 
			 
			//*********************************
			// Structural Feature Getter/Setter
			//*********************************

			virtual std::shared_ptr<ecore::EObject> eContainer() const ; 
			
			//*********************************
			// Persistence Functions
			//*********************************
			virtual void load(std::shared_ptr<persistence::interfaces::XLoadHandler> loadHandler) ;
			virtual void loadAttributes(std::shared_ptr<persistence::interfaces::XLoadHandler> loadHandler, std::map<std::string, std::string> attr_list);
			virtual void loadNode(std::string nodeName, std::shared_ptr<persistence::interfaces::XLoadHandler> loadHandler, std::shared_ptr<PSCS::PSCSFactory> modelFactory);
			
			virtual void resolveReferences(const int featureID, std::list<std::shared_ptr<ecore::EObject> > references) ;
			virtual void save(std::shared_ptr<persistence::interfaces::XSaveHandler> saveHandler) const ;
			virtual void saveContent(std::shared_ptr<persistence::interfaces::XSaveHandler> saveHandler) const;
			

		protected:
			virtual std::shared_ptr<ecore::EClass> eStaticClass() const;
			virtual Any eGet(int featureID, bool resolve, bool coreType) const ;
			virtual bool internalEIsSet(int featureID) const ;
			virtual bool eSet(int featureID, Any newValue) ;

		private:
			std::weak_ptr<CS_NameBased_StructuralFeatureOfInterfaceAccessStrategy> m_thisCS_NameBased_StructuralFeatureOfInterfaceAccessStrategyPtr;
	};
}
#endif /* end of include guard: PSCS_SEMANTICS_STRUCTUREDCLASSIFIERS_CS_NAMEBASED_STRUCTURALFEATUREOFINTERFACEACCESSSTRATEGYCS_NAMEBASED_STRUCTURALFEATUREOFINTERFACEACCESSSTRATEGYIMPL_HPP */

//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_SEMANTICS_STRUCTUREDCLASSIFIERSPACKAGE_HPP
#define FUML_SEMANTICS_STRUCTUREDCLASSIFIERSPACKAGE_HPP

#include "ecore/EPackage.hpp"

namespace ecore 
{
	class EAnnotation;
	class EClass;
	class EDataType;
	class EGenericType;
	class EOperation;
	class EParameter;
	class EReference;
	class EStringToStringMapEntry;
}

namespace fUML::Semantics::StructuredClassifiers 
{
	class DispatchStrategy;
	class ExtensionalValue;
	class ExtensionalValueList;
	class Link;
	class Object;
	class RedefinitionBasedDispatchStrategy;
	class Reference;
}

namespace fUML::Semantics::StructuredClassifiers 
{
	/*!
	The Metamodel Package for the StructuredClassifiers metamodel. This package is used to enable the reflection of model elements. It contains all model elements
	which were described in an ecore file.
	*/
	/*!
	 */
	class StructuredClassifiersPackage : virtual public ecore::EPackage 
	{
		private:    
			StructuredClassifiersPackage(StructuredClassifiersPackage const&) = delete;
			StructuredClassifiersPackage& operator=(StructuredClassifiersPackage const&) = delete;

		protected:
			StructuredClassifiersPackage(){}

		public:
			//static variables
			static const std::string eNAME;
			static const std::string eNS_URI;
			static const std::string eNS_PREFIX;

			// Begin Class DispatchStrategy
			//Class and Feature IDs 
			static const unsigned int DISPATCHSTRATEGY_CLASS = 40;
			static const unsigned int DISPATCHSTRATEGY_CLASS_FEATURE_COUNT = 0;
			static const unsigned int DISPATCHSTRATEGY_CLASS_OPERATION_COUNT = 4;
			
			
			static const int DISPATCHSTRATEGY_OPERATION_DISPATCH_OBJECT_OPERATION = 4001;
			static const int DISPATCHSTRATEGY_OPERATION_GETNAME = 4003;
			static const int DISPATCHSTRATEGY_OPERATION_RETRIEVEMETHOD_OBJECT_OPERATION = 4002;
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getDispatchStrategy_Class() const = 0;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getDispatchStrategy_Operation_dispatch_Object_Operation() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getDispatchStrategy_Operation_getName() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getDispatchStrategy_Operation_retrieveMethod_Object_Operation() const = 0;
			
			// End Class DispatchStrategy


			// Begin Class ExtensionalValue
			//Class and Feature IDs 
			static const unsigned int EXTENSIONALVALUE_CLASS = 52;
			static const unsigned int EXTENSIONALVALUE_CLASS_FEATURE_COUNT = 2;
			static const unsigned int EXTENSIONALVALUE_CLASS_OPERATION_COUNT = 24;
			
			static const int EXTENSIONALVALUE_ATTRIBUTE_LOCUS = 5201;
			
			static const int EXTENSIONALVALUE_OPERATION_DESTROY = 5225;
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExtensionalValue_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getExtensionalValue_Attribute_locus() const = 0;
			
			virtual std::shared_ptr<ecore::EOperation> getExtensionalValue_Operation_destroy() const = 0;
			
			// End Class ExtensionalValue


			// Begin Class ExtensionalValueList
			//Class and Feature IDs 
			static const unsigned int EXTENSIONALVALUELIST_CLASS = 53;
			static const unsigned int EXTENSIONALVALUELIST_CLASS_FEATURE_COUNT = 2;
			static const unsigned int EXTENSIONALVALUELIST_CLASS_OPERATION_COUNT = 29;
			
			
			static const int EXTENSIONALVALUELIST_OPERATION_ADDVALUE_EXTENSIONALVALUE = 5327;
			static const int EXTENSIONALVALUELIST_OPERATION_ADDVALUE_EXTENSIONALVALUE_EINT = 5328;
			static const int EXTENSIONALVALUELIST_OPERATION_GETVALUE = 5326;
			static const int EXTENSIONALVALUELIST_OPERATION_REMOVEVALUE_EINT = 5330;
			static const int EXTENSIONALVALUELIST_OPERATION_SETVALUE_EXTENSIONALVALUE_EINT = 5329;
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getExtensionalValueList_Class() const = 0;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getExtensionalValueList_Operation_addValue_ExtensionalValue() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getExtensionalValueList_Operation_addValue_ExtensionalValue_EInt() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getExtensionalValueList_Operation_getValue() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getExtensionalValueList_Operation_removeValue_EInt() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getExtensionalValueList_Operation_setValue_ExtensionalValue_EInt() const = 0;
			
			// End Class ExtensionalValueList


			// Begin Class Link
			//Class and Feature IDs 
			static const unsigned int LINK_CLASS = 68;
			static const unsigned int LINK_CLASS_FEATURE_COUNT = 3;
			static const unsigned int LINK_CLASS_OPERATION_COUNT = 28;
			
			static const int LINK_ATTRIBUTE_TYPE = 6802;
			
			static const int LINK_OPERATION_ADDTO_LOCUS = 6829;
			static const int LINK_OPERATION_GETOTHERFEATUREVALUES_EXTENSIONALVALUE_PROPERTY = 6830;
			static const int LINK_OPERATION_GETTYPES = 6827;
			static const int LINK_OPERATION_ISMATCHINGLINK_EXTENSIONALVALUE_PROPERTY = 6828;
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLink_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getLink_Attribute_type() const = 0;
			
			virtual std::shared_ptr<ecore::EOperation> getLink_Operation_addTo_Locus() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getLink_Operation_getOtherFeatureValues_ExtensionalValue_Property() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getLink_Operation_getTypes() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getLink_Operation_isMatchingLink_ExtensionalValue_Property() const = 0;
			
			// End Class Link


			// Begin Class Object
			//Class and Feature IDs 
			static const unsigned int OBJECT_CLASS = 80;
			static const unsigned int OBJECT_CLASS_FEATURE_COUNT = 4;
			static const unsigned int OBJECT_CLASS_OPERATION_COUNT = 32;
			
			static const int OBJECT_ATTRIBUTE_OBJECTACTIVATION = 8003;
			static const int OBJECT_ATTRIBUTE_TYPES = 8002;
			
			static const int OBJECT_OPERATION__REGISTER_EVENTACCEPTER = 8031;
			static const int OBJECT_OPERATION_DESTROY = 8034;
			static const int OBJECT_OPERATION_DISPATCH_OPERATION = 8029;
			static const int OBJECT_OPERATION_NEW_ = 8033;
			static const int OBJECT_OPERATION_SEND_SIGNALINSTANCE = 8030;
			static const int OBJECT_OPERATION_SEND_EVENTOCCURRENCE = 8035;
			static const int OBJECT_OPERATION_STARTBEHAVIOR_CLASS_PARAMETERVALUE = 8028;
			static const int OBJECT_OPERATION_UNREGISTER_EVENTACCEPTER = 8032;
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getObject_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getObject_Attribute_objectActivation() const = 0;
			virtual std::shared_ptr<ecore::EReference> getObject_Attribute_types() const = 0;
			
			virtual std::shared_ptr<ecore::EOperation> getObject_Operation__register_EventAccepter() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getObject_Operation_destroy() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getObject_Operation_dispatch_Operation() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getObject_Operation_new_() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getObject_Operation_send_SignalInstance() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getObject_Operation_send_EventOccurrence() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getObject_Operation_startBehavior_Class_ParameterValue() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getObject_Operation_unregister_EventAccepter() const = 0;
			
			// End Class Object


			// Begin Class RedefinitionBasedDispatchStrategy
			//Class and Feature IDs 
			static const unsigned int REDEFINITIONBASEDDISPATCHSTRATEGY_CLASS = 97;
			static const unsigned int REDEFINITIONBASEDDISPATCHSTRATEGY_CLASS_FEATURE_COUNT = 0;
			static const unsigned int REDEFINITIONBASEDDISPATCHSTRATEGY_CLASS_OPERATION_COUNT = 6;
			
			
			static const int REDEFINITIONBASEDDISPATCHSTRATEGY_OPERATION_OPERATIONSMATCH_OPERATION_OPERATION = 9704;
			static const int REDEFINITIONBASEDDISPATCHSTRATEGY_OPERATION_RETRIEVEMETHOD_OBJECT_OPERATION = 9705;
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getRedefinitionBasedDispatchStrategy_Class() const = 0;
			
			
			
			virtual std::shared_ptr<ecore::EOperation> getRedefinitionBasedDispatchStrategy_Operation_operationsMatch_Operation_Operation() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getRedefinitionBasedDispatchStrategy_Operation_retrieveMethod_Object_Operation() const = 0;
			
			// End Class RedefinitionBasedDispatchStrategy


			// Begin Class Reference
			//Class and Feature IDs 
			static const unsigned int REFERENCE_CLASS = 99;
			static const unsigned int REFERENCE_CLASS_FEATURE_COUNT = 1;
			static const unsigned int REFERENCE_CLASS_OPERATION_COUNT = 32;
			
			static const int REFERENCE_ATTRIBUTE_REFERENT = 9900;
			
			static const int REFERENCE_OPERATION_ASSIGNFEATUREVALUE_STRUCTURALFEATURE_EINT = 9926;
			static const int REFERENCE_OPERATION_DESTROY = 9921;
			static const int REFERENCE_OPERATION_DISPATCH_OPERATION = 9919;
			static const int REFERENCE_OPERATION_EQUALS_VALUE = 9922;
			static const int REFERENCE_OPERATION_GETTYPES = 9924;
			static const int REFERENCE_OPERATION_GETVALUES_STRUCTURALFEATURE_FEATUREVALUE = 9931;
			static const int REFERENCE_OPERATION_NEW_ = 9923;
			static const int REFERENCE_OPERATION_REMOVEVALUE_STRUCTURALFEATURE_VALUE = 9932;
			static const int REFERENCE_OPERATION_RETRIEVEFEATUREVALUE_STRUCTURALFEATURE = 9925;
			static const int REFERENCE_OPERATION_RETRIEVEFEATUREVALUES = 9927;
			static const int REFERENCE_OPERATION_SEND_SIGNALINSTANCE = 9920;
			static const int REFERENCE_OPERATION_SEND_EVENTOCCURRENCE = 9929;
			static const int REFERENCE_OPERATION_SETFEATUREVALUE_STRUCTURALFEATURE_EINT = 9930;
			static const int REFERENCE_OPERATION_STARTBEHAVIOR_CLASS_PARAMETERVALUE = 9918;
			static const int REFERENCE_OPERATION_TOSTRING = 9928;
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getReference_Class() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getReference_Attribute_referent() const = 0;
			
			virtual std::shared_ptr<ecore::EOperation> getReference_Operation_assignFeatureValue_StructuralFeature_EInt() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getReference_Operation_destroy() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getReference_Operation_dispatch_Operation() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getReference_Operation_equals_Value() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getReference_Operation_getTypes() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getReference_Operation_getValues_StructuralFeature_FeatureValue() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getReference_Operation_new_() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getReference_Operation_removeValue_StructuralFeature_Value() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getReference_Operation_retrieveFeatureValue_StructuralFeature() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getReference_Operation_retrieveFeatureValues() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getReference_Operation_send_SignalInstance() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getReference_Operation_send_EventOccurrence() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getReference_Operation_setFeatureValue_StructuralFeature_EInt() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getReference_Operation_startBehavior_Class_ParameterValue() const = 0;
			virtual std::shared_ptr<ecore::EOperation> getReference_Operation_toString() const = 0;
			
			// End Class Reference

			
			

			

			//Singleton Instance and Getter
			private:
				static std::shared_ptr<StructuredClassifiersPackage> instance;
			public:
				static std::shared_ptr<StructuredClassifiersPackage> eInstance();
	};
}
#endif /* end of include guard: FUML_SEMANTICS_STRUCTUREDCLASSIFIERSPACKAGE_HPP */

# DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN
# @generator: ecore4cpp::generator::main::generateBuildFile

# C++ project of model PSCS/Semantics/Actions.ecore, generated by Ecore4CPP

CMAKE_MINIMUM_REQUIRED(VERSION 3.9)


PROJECT(PSCS_Semantics_Actions_Interface)
set(PSCS_Semantics_Actions_Interface_VERSION 0.0.1) #No Version codegen annotation defined in model PSCS. Use default version. 

IF(NOT CMAKE_BUILD_TYPE) 
    SET(CMAKE_BUILD_TYPE Debug)
ENDIF(NOT CMAKE_BUILD_TYPE)
SET(CMAKE_DEBUG_POSTFIX d)

SET(CMAKE_CXX_STANDARD 17)

SET(SOURCE_FILES_Interface
# Factories and packages
	ActionsFactory.hpp
	ActionsPackage.hpp
# Package content
	CS_AcceptCallActionActivation.hpp
	CS_AcceptEventActionActivation.hpp
	CS_AddStructuralFeatureValueActionActivation.hpp
	CS_CallOperationActionActivation.hpp
	CS_ClearStructuralFeatureActionActivation.hpp
	CS_ConstructStrategy.hpp
	CS_CreateLinkActionActivation.hpp
	CS_CreateObjectActionActivation.hpp
	CS_DefaultConstructStrategy.hpp
	CS_ReadExtentActionActivation.hpp
	CS_ReadSelfActionActivation.hpp
	CS_RemoveStructuralFeatureValueActionActivation.hpp
	CS_SendSignalActionActivation.hpp
)

ADD_LIBRARY(PSCS_Semantics_Actions_Interface INTERFACE ${SOURCE_FILES_Interface})
TARGET_LINK_LIBRARIES(${PROJECT_NAME}
	INTERFACE fUML::Semantics::Loci::fUML_Semantics_Loci
	INTERFACE uml::uml
	INTERFACE ecore::ecore
	INTERFACE fUML::fUML
)
ADD_LIBRARY(PSCS::Semantics::Actions::PSCS_Semantics_Actions_Interface ALIAS PSCS_Semantics_Actions_Interface)



PROJECT(PSCS_Semantics_Actions)
set(PSCS_Semantics_Actions_VERSION 0.0.1) #No Version codegen annotation defined in model PSCS. Use default version. 

#list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}")
#list(APPEND CMAKE_MODULE_PATH ${MDE4CPP_HOME}/application/lib/cmake/})
#list(APPEND CMAKE_MODULE_PATH ${MDE4CPP_HOME}/application/lib/cmake/PSCS_Semantics_Actions})

IF(NOT CMAKE_BUILD_TYPE) 
    SET(CMAKE_BUILD_TYPE Debug)
ENDIF(NOT CMAKE_BUILD_TYPE)
SET(CMAKE_DEBUG_POSTFIX d)

SET(CMAKE_CXX_STANDARD 17)
				

IF(("$ENV{DEBUG_MESSAGE_PSCS_SEMANTICS_ACTIONS}" EQUAL "1") AND (CMAKE_BUILD_TYPE MATCHES Debug))
	SET(ENABLED_DEBUG_MESSAGE " ")
ELSE()
	SET(ENABLED_DEBUG_MESSAGE " -DNDEBUG")
ENDIF()
IF("$ENV{DEBUG_MESSAGE_ACTIVITY_DEBUGGER}" EQUAL "1")
	SET(ENABLED_DEBUG_MESSAGE "${ENABLED_DEBUG_MESSAGE} -DACTIVITY_DEBUG_ON")
ENDIF()

SET(CMAKE_CXX_FLAGS "-Wall -Wno-overloaded-virtual -Wdeprecated-declarations -fmax-errors=5")
IF(APPLE)
  string(APPEND CMAKE_CXX_FLAGS " -Qunused-arguments")
ENDIF(APPLE)
SET(CMAKE_CXX_FLAGS_DEBUG " -Og -ggdb ${ENABLED_DEBUG_MESSAGE}")
SET(CMAKE_CXX_FLAGS_RELEASE " -O3  ${ENABLED_DEBUG_MESSAGE}")

string(REPLACE "\\" "/" MDE4CPP_HOME $ENV{MDE4CPP_HOME})

SET(SOURCE_FILES
# Factories and packages
	impl/ActionsFactoryImpl.cpp
	impl/ActionsPackageImpl.cpp
	impl/ActionsPackageImpl_Creation.cpp
	impl/ActionsPackageImpl_Initialization.cpp
# Package content
	impl/CS_AcceptCallActionActivationImpl.cpp
	impl/CS_AcceptEventActionActivationImpl.cpp
	impl/CS_AddStructuralFeatureValueActionActivationImpl.cpp
	impl/CS_CallOperationActionActivationImpl.cpp
	impl/CS_ClearStructuralFeatureActionActivationImpl.cpp
	impl/CS_ConstructStrategyImpl.cpp
	impl/CS_CreateLinkActionActivationImpl.cpp
	impl/CS_CreateObjectActionActivationImpl.cpp
	impl/CS_DefaultConstructStrategyImpl.cpp
	impl/CS_ReadExtentActionActivationImpl.cpp
	impl/CS_ReadSelfActionActivationImpl.cpp
	impl/CS_RemoveStructuralFeatureValueActionActivationImpl.cpp
	impl/CS_SendSignalActionActivationImpl.cpp
	#${MDE4CPP_HOME}/application/include/util/ProfileCallCount.cpp
)


# Apple specific stuff
if(APPLE)
  set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -undefined dynamic_lookup")
  set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} -undefined dynamic_lookup")
endif(APPLE)


#--------------------------------------------


set(fUML_Semantics_Loci_DIR "${MDE4CPP_HOME}/application/lib/cmake/fUML")
set(fUML_Semantics_Loci_Interface_DIR "${MDE4CPP_HOME}/application/lib/cmake/fUML")
set(uml_DIR "${MDE4CPP_HOME}/application/lib/cmake/uml")
set(uml_Interface_DIR "${MDE4CPP_HOME}/application/lib/cmake/uml")
set(ecore_DIR "${MDE4CPP_HOME}/application/lib/cmake/ecore")
set(ecore_Interface_DIR "${MDE4CPP_HOME}/application/lib/cmake/ecore")
set(fUML_DIR "${MDE4CPP_HOME}/application/lib/cmake/fUML")
set(fUML_Interface_DIR "${MDE4CPP_HOME}/application/lib/cmake/fUML")
find_package(fUML_Semantics_Loci CONFIG)
find_package(fUML_Semantics_Loci_Interface CONFIG)
find_package(uml CONFIG)
find_package(uml_Interface CONFIG)
find_package(ecore CONFIG)
find_package(ecore_Interface CONFIG)
find_package(PSCS CONFIG)
find_package(PSCS_Interface CONFIG)
find_package(fUML CONFIG)
find_package(fUML_Interface CONFIG)
message("Dir_Name: ${fUML_Semantics_Loci_DIR}")
message("Interface_Dir_Name: ${fUML_Semantics_Loci_Interface_DIR}") 
message("LociLibrarry fUML_Semantics_Loci: ${fUML_Semantics_Loci_FOUND} (Version ${fUML_Semantics_Loci_VERSION})
         fUML_Semantics_Loci libs: ${fUML_Semantics_Loci_LIBRARIES}
         fUML_Semantics_Loci includes: ${fUML_Semantics_Loci_INCLUDE_DIRS}
Librarry fUML_Semantics_Loci_Interface: ${fUML_Semantics_Loci_Interface_FOUND} (Version ${fUML_Semantics_Loci_Interface_VERSION})
         fUML_Semantics_Loci libs_Interface: ${fUML_Semantics_Loci_Interface_LIBRARIES}
         fUML_Semantics_Loci includes_Interface: ${fUML_Semantics_Loci_Interface_INCLUDE_DIRS}
")
message("Dir_Name: ${uml_DIR}")
message("Interface_Dir_Name: ${uml_Interface_DIR}") 
message("umlLibrarry uml: ${uml_FOUND} (Version ${uml_VERSION})
         uml libs: ${uml_LIBRARIES}
         uml includes: ${uml_INCLUDE_DIRS}
Librarry uml_Interface: ${uml_Interface_FOUND} (Version ${uml_Interface_VERSION})
         uml libs_Interface: ${uml_Interface_LIBRARIES}
         uml includes_Interface: ${uml_Interface_INCLUDE_DIRS}
")
message("Dir_Name: ${ecore_DIR}")
message("Interface_Dir_Name: ${ecore_Interface_DIR}") 
message("ecoreLibrarry ecore: ${ecore_FOUND} (Version ${ecore_VERSION})
         ecore libs: ${ecore_LIBRARIES}
         ecore includes: ${ecore_INCLUDE_DIRS}
Librarry ecore_Interface: ${ecore_Interface_FOUND} (Version ${ecore_Interface_VERSION})
         ecore libs_Interface: ${ecore_Interface_LIBRARIES}
         ecore includes_Interface: ${ecore_Interface_INCLUDE_DIRS}
")
message("Dir_Name: ${PSCS_DIR}")
message("Interface_Dir_Name: ${PSCS_Interface_DIR}") 
message("PSCSLibrarry PSCS: ${PSCS_FOUND} (Version ${PSCS_VERSION})
         PSCS libs: ${PSCS_LIBRARIES}
         PSCS includes: ${PSCS_INCLUDE_DIRS}
Librarry PSCS_Interface: ${PSCS_Interface_FOUND} (Version ${PSCS_Interface_VERSION})
         PSCS libs_Interface: ${PSCS_Interface_LIBRARIES}
         PSCS includes_Interface: ${PSCS_Interface_INCLUDE_DIRS}
")
message("Dir_Name: ${fUML_DIR}")
message("Interface_Dir_Name: ${fUML_Interface_DIR}") 
message("fUMLLibrarry fUML: ${fUML_FOUND} (Version ${fUML_VERSION})
         fUML libs: ${fUML_LIBRARIES}
         fUML includes: ${fUML_INCLUDE_DIRS}
Librarry fUML_Interface: ${fUML_Interface_FOUND} (Version ${fUML_Interface_VERSION})
         fUML libs_Interface: ${fUML_Interface_LIBRARIES}
         fUML includes_Interface: ${fUML_Interface_INCLUDE_DIRS}
")



ADD_LIBRARY(${PROJECT_NAME} SHARED ${SOURCE_FILES})
TARGET_LINK_LIBRARIES(${PROJECT_NAME}
	PRIVATE fUML::Semantics::Loci::fUML_Semantics_Loci
	PRIVATE uml::uml
	PRIVATE ecore::ecore
	PRIVATE fUML::fUML
)
#create an alias lib for PSCS_Semantics_Actions
add_library(PSCS::Semantics::Actions::PSCS_Semantics_Actions ALIAS PSCS_Semantics_Actions)

ADD_DEFINITIONS(-DBUILD_PSCS=1)

TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME}
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
        $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
    PRIVATE
		${MDE4CPP_HOME}/application/include        
		${CMAKE_SOURCE_DIR}/.. 
		${MDE4CPP_HOME}/src/PSCS/Semantics/Actions/src_gen
)

SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES PREFIX "")

#-----------------------------------------------------
# DELIVERING binaries and header to ${MDE4CPP_HOME} 
#-----------------------------------------------------

INSTALL(TARGETS PSCS_Semantics_Actions EXPORT PSCS_Semantics_ActionsTargets
	RUNTIME DESTINATION ${MDE4CPP_HOME}/application/bin
    LIBRARY DESTINATION ${MDE4CPP_HOME}/application/bin
    ARCHIVE DESTINATION ${MDE4CPP_HOME}/application/lib
  	INCLUDES DESTINATION ${MDE4CPP_HOME}/application/include
)

#-----------------------------------------------------
# DELIVERING binaries and header to ${MDE4CPP_HOME} 
#-----------------------------------------------------

INSTALL(TARGETS PSCS_Semantics_Actions_Interface EXPORT PSCS_Semantics_Actions_InterfaceTargets
	RUNTIME DESTINATION ${MDE4CPP_HOME}/application/bin
    LIBRARY DESTINATION ${MDE4CPP_HOME}/application/bin
    ARCHIVE DESTINATION ${MDE4CPP_HOME}/application/lib
  	INCLUDES DESTINATION ${MDE4CPP_HOME}/application/include
)


INSTALL(DIRECTORY . DESTINATION ${MDE4CPP_HOME}/application/include/PSCS/Semantics/Actions
	FILES_MATCHING PATTERN "*.hpp"
	PATTERN ".cmake" EXCLUDE
)

#-----------------------------------------------------------------------
# CREATE, Configure and DELIVER cmake package targets to ${MDE4CPP_HOME} 
#-----------------------------------------------------------------------

INSTALL(
  EXPORT PSCS_Semantics_ActionsTargets
  FILE PSCS_Semantics_ActionsTargets.cmake
  DESTINATION ${MDE4CPP_HOME}/application/lib/cmake/PSCS
  NAMESPACE PSCS::Semantics::Actions::
)

INCLUDE(CMakePackageConfigHelpers)
CONFIGURE_PACKAGE_CONFIG_FILE(
    "PSCS_Semantics_Actions.cmake.in"
    "${CMAKE_CURRENT_BINARY_DIR}/PSCS_Semantics_Actions-config.cmake"
    INSTALL_DESTINATION ${MDE4CPP_HOME}/application/lib/cmake/PSCS
)

SET_PROPERTY(TARGET PSCS_Semantics_Actions PROPERTY VERSION ${PSCS_Semantics_Actions_VERSION})
WRITE_BASIC_PACKAGE_VERSION_FILE(
  "${CMAKE_CURRENT_BINARY_DIR}/PSCS_Semantics_Actions-configVersion.cmake"
  VERSION ${PSCS_Semantics_Actions_VERSION}
  COMPATIBILITY AnyNewerVersion
)
#-----------------------------------------------------------------------
# CREATE, Configure and DELIVER cmake package targets to ${MDE4CPP_HOME} 
#-----------------------------------------------------------------------

INSTALL(
  EXPORT PSCS_Semantics_Actions_InterfaceTargets
  FILE PSCS_Semantics_Actions_InterfaceTargets.cmake
  DESTINATION ${MDE4CPP_HOME}/application/lib/cmake/PSCS
  NAMESPACE PSCS::Semantics::Actions::
)

INCLUDE(CMakePackageConfigHelpers)
CONFIGURE_PACKAGE_CONFIG_FILE(
    "PSCS_Semantics_Actions_Interface.cmake.in"
    "${CMAKE_CURRENT_BINARY_DIR}/PSCS_Semantics_Actions_Interface-config.cmake"
    INSTALL_DESTINATION ${MDE4CPP_HOME}/application/lib/cmake/PSCS
)

SET_PROPERTY(TARGET PSCS_Semantics_Actions_Interface PROPERTY VERSION ${PSCS_Semantics_Actions_Interface_VERSION})
WRITE_BASIC_PACKAGE_VERSION_FILE(
  "${CMAKE_CURRENT_BINARY_DIR}/PSCS_Semantics_Actions_Interface-configVersion.cmake"
  VERSION ${PSCS_Semantics_Actions_Interface_VERSION}
  COMPATIBILITY AnyNewerVersion
)

INSTALL(
  FILES
     "${CMAKE_CURRENT_BINARY_DIR}/PSCS_Semantics_Actions-config.cmake"
 	 "${CMAKE_CURRENT_BINARY_DIR}/PSCS_Semantics_Actions-configVersion.cmake"
     "${CMAKE_CURRENT_BINARY_DIR}/PSCS_Semantics_Actions_Interface-config.cmake"
 	 "${CMAKE_CURRENT_BINARY_DIR}/PSCS_Semantics_Actions_Interface-configVersion.cmake"
  DESTINATION
   "${MDE4CPP_HOME}/application/lib/cmake/PSCS"
)
INCLUDE(GenerateExportHeader)
GENERATE_EXPORT_HEADER(${PROJECT_NAME})

export(TARGETS ${PROJECT_NAME} NAMESPACE PSCS::Semantics::Actions:: FILE ${CMAKE_BINARY_DIR}/Actions/PSCS_Semantics_Actions-config.cmake)
#create an alias lib for PSCS_Semantics_Actions
add_library(PSCS::Semantics::Actions::PSCS_Semantics_Actions ALIAS PSCS_Semantics_Actions)
file(WRITE ${CMAKE_BINARY_DIR}/Actions/PSCS_Semantics_Actions-config.cmake "")


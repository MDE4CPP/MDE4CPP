[comment encoding = UTF-8 /]
[**
 * Copyright (c) 2017 TU Ilmenau, Systems and Software Engineering Group
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), 
 * to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 * and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */]
[module generatePackageInterface('http://www.eclipse.org/emf/2002/Ecore')]
 
[import ecore4CPP::generator::main::generateAttribute /]
[import ecore4CPP::generator::main::generateClass /]
[import ecore4CPP::generator::main::generateDatatype /]
[import ecore4CPP::generator::main::generateOperation /]
[import ecore4CPP::generator::main::generateReference /]
[import ecore4CPP::generator::main::generateSingleton /]
[import ecore4CPP::generator::main::helper /]
[import ecore4CPP::generator::main::package::generatePackageHelper /]

[template public generatePackageInterface(anEPackage : EPackage) { packageName : String = anEPackage.name.toUpperFirst().concat('Package'); }]
[file (anEPackage.name.concat('/').concat(packageName).concat('.hpp'), false, 'UTF-8')]
[startGuard(anEPackage,'Package')/]

#include "ecore/EPackage.hpp"

namespace [anEPackage.eClass().ePackage.name/] 
{
[for (elements : EClassifier| anEPackage.getMetaMetaModelClasses())]
	class [elements.name/];
[/for]
}

[comment namespace /]
namespace [anEPackage.name/] 
{
	/*!
	The Metamodel Package for the [anEPackage.name/] metamodel. This package is used to enable the reflection of model elements. It contains all model elements
	which were described in an ecore file.
	*/
	[anEPackage.generateDokumentation()/]
	class [packageName/] : virtual public [needNamespace(anEPackage, 'EPackage')/] 
	{
		private:    
			[packageName/]([packageName/] const&) = delete;
			[packageName/]& operator=([packageName/] const&) = delete;

		protected:
			[packageName/](){}

		public:
			//static variables
			static const std::string eNAME;
			static const std::string eNS_URI;
			static const std::string eNS_PREFIX;

[for (aClass : EClass | anEPackage.eAllContents(EClass)->asOrderedSet()->sortedBy(name)) separator ('\n')]
			// Begin Class [aClass.name.toUpperFirst()/]
			//Class and Feature IDs 
			[aClass.generateStaticClassID()/]
			[aClass.eAttributes->sortedBy(name).generateStaticAttributeID()/]
			[aClass.eReferences->sortedBy(name).generateStaticReferenceID()/]
			[aClass.eOperations->sortedBy(name).generateStaticOperationID()/]
			//Class and Feature Getter
			[aClass.generateModelElementGetter(anEPackage, false)/]
			[aClass.eAttributes->sortedBy(name).generateModelElementGetter(anEPackage, false)/]
			[aClass.eReferences->sortedBy(name).generateModelElementGetter(anEPackage, false)/]
			[aClass.eOperations->sortedBy(name).generateModelElementGetter(anEPackage, false)/]
			// End Class [aClass.name.toUpperFirst()/]

[/for]
			[anEPackage.eAllContents(EDataType)->sortedBy(name).generateStaticDatatypeID()/]
			[anEPackage.eAllContents(EDataType)->sortedBy(name).generateModelElementGetter(anEPackage, false)/]

			//Singleton Instance and Getter
			[generateSingletonDecl(packageName)/]
[if anEPackage.name.equalsIgnoreCase('ecore')]

			//prevent from hiding functions
			using EPackage::getEAnnotation;
			using EPackage::getEClassifier;
[/if]
	};
}
[endGuard(anEPackage,'Package')/]
[/file]
[/template]
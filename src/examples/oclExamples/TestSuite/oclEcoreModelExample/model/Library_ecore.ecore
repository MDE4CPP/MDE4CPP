<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="Library_ecore" nsURI="http://www.example.org/Library_ecore"
    nsPrefix="Library_ecore">
  <eAnnotations source="http://tu-ilmenau.de/see/prepareApplication">
    <details key="includes" value="#include &lt;string>&#xA;#include &lt;sstream>&#xA;// //#include &lt;oclParser/Utilities/Ocl.h>&#xA;&#xA;#include &lt;ecore/EFactory.hpp>&#xA;#include &lt;ecore/EPackage.hpp>&#xA;#include &lt;ecore/ecorePackage.hpp>&#xA;#include &lt;ecore/EClassifier.hpp>&#xA;#include &lt;ecore/EObjectContainer.hpp>&#xA;#include &lt;ecore/EEnum.hpp>&#xA;#include &lt;ecore/EClass.hpp>&#xA;#include &lt;ecore/EReference.hpp>&#xA;#include &lt;ecore/EOperation.hpp>&#xA;#include &lt;ecore/EAttribute.hpp>&#xA;#include &lt;ecore/EParameter.hpp>&#xA;#include &lt;ecore/EEnumLiteral.hpp>&#xA;#include &lt;ecore/ETypeParameter.hpp>&#xA;#include &lt;ecore/EcoreAny.hpp>&#xA;#include &lt;ecore/EcoreContainerAny.hpp>&#xA;&#xA;#include &lt;oclParser/Utilities/test_query.h>"/>
    <details key="body" value="// Test"/>
    <details key="library" value="OclParser"/>
    <details key="additionalFunctions" value="// You may manually edit additional functions, won't be overwritten upon generation.&#xA;std::shared_ptr&lt;Library_ecore::Library> createBookStore()&#xA;{&#xA;&#x9;std::shared_ptr&lt;Library_ecore::Library_ecoreFactory> factory = Library_ecore::Library_ecoreFactory::eInstance();&#xA;    std::shared_ptr&lt;Library_ecore::Library> lib = factory ->createLibrary();&#xA;    lib->setName(&quot;TU Ilmenau - University Library&quot;);&#xA;    std::shared_ptr&lt;Library_ecore::Book> bookMag = factory->createBook_as_books_in_Library(lib);&#xA;&#xA;    bookMag->setTitle(&quot;Magritte&quot;);&#xA;&#xA;    std::shared_ptr&lt;Library_ecore::Book> bookPe = factory->createBook_as_books_in_Library(lib);&#xA;    bookPe->setTitle(&quot;Perry&quot;);&#xA;&#xA;    std::shared_ptr&lt;Library_ecore::Book> bookRo = factory->createBook_as_books_in_Library(lib);&#xA;    bookRo->setTitle(&quot;Robin&quot;);&#xA;&#xA;    std::shared_ptr&lt;Library_ecore::Book> bookAl = factory->createBook_as_books_in_Library(lib);&#xA;    bookAl->setTitle(&quot;Alena&quot;);&#xA;&#xA;    std::shared_ptr&lt;Library_ecore::Book> bookLe = factory->createBook_as_books_in_Library(lib);&#xA;    bookLe->setTitle(&quot;Leonie&quot;);&#xA;&#xA;    std::shared_ptr&lt;Library_ecore::Book> bookUd = factory->createBook_as_books_in_Library(lib);&#xA;    bookUd->setTitle(&quot;Udo&quot;);&#xA;&#xA;    std::shared_ptr&lt;Writer> author = factory->createWriter_as_writers_in_Library(lib);&#xA;    author->setName(&quot;David Sylvester&quot;);&#xA;    bookMag->getWriters()->add(author);&#xA;&#xA;    std::shared_ptr&lt;Member> paul=factory->createMember_as_members_in_Library(lib);&#xA;&#x9;paul->setName(&quot;Paul&quot;);&#xA;&#xA;    std::shared_ptr&lt;Loan> loan=factory->createLoan_as_loans_in_Library(lib);&#xA;    loan->setMember(paul);&#xA;    loan->setBook(bookMag);&#xA;    bookMag->setAvailable(false);&#xA;&#x9;return lib;&#xA;}&#xA;&#xA;//looks for the given (property) name in the given (EClass) context&#xA;//returns nullptr if property with name is not found&#xA;std::shared_ptr&lt;Any> lookupPropertyName(const std::string&amp; name, std::shared_ptr&lt;Any> context) {&#xA;&#xA;    //try as ecoreAny&#xA;    std::shared_ptr&lt;ecore::EcoreAny> ecoreAny = std::dynamic_pointer_cast&lt;ecore::EcoreAny>(context);&#xA;&#xA;    if (ecoreAny == nullptr) {&#xA;        //TODO add error&#xA;        //context have to be an ecoreAny&#xA;        return nullptr;&#xA;    }&#xA;&#xA;    //get eObject to get eClass&#xA;    std::shared_ptr&lt;ecore::EObject> eObject = ecoreAny->getAsEObject();&#xA;&#xA;    if (eObject == nullptr) {&#xA;        //TODO add error can't get eObject out of ecoreAny&#xA;        return nullptr;&#xA;    }&#xA;    &#xA;    //try to get eClass&#xA;    std::shared_ptr&lt;ecore::EClass> eClass = eObject->eClass();&#xA;&#xA;    if (eClass == nullptr) {&#xA;        //TODO add error&#xA;        //eObject have no class&#xA;        return nullptr;&#xA;    }&#xA;&#xA;    //find property with given name&#xA;    size_t size = eClass->getEAllStructuralFeatures()->size();&#xA;&#xA;    std::shared_ptr&lt;ecore::EStructuralFeature> foundFeat;&#xA;&#xA;    for (size_t i = 0; i &lt; size; i++) {&#xA;        const std::shared_ptr&lt;ecore::EStructuralFeature>&amp; elem = eClass->getEAllStructuralFeatures()->at(i);&#xA;        if (name == elem->getName()) {&#xA;            foundFeat = elem;&#xA;            break;&#xA;        }&#xA;    }&#xA;&#xA;    //check if found&#xA;    if (foundFeat == nullptr) {&#xA;        //TODO property name 'name' in eClass.getName() not found&#xA;        return nullptr;&#xA;    }&#xA;&#xA;    //get actual object&#xA;    const std::shared_ptr&lt;Any>&amp; returnObject = eObject->eGet(foundFeat);&#xA;&#xA;    return returnObject;&#xA;}"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="Library">
    <eAnnotations source="http://www.eclipse.org/OCL">
      <details key="OCL" value="context Library inv: self.opened"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/OCL">
      <details key="OCL" value="context Library inv: self.nbBooks > 0"/>
    </eAnnotations>
    <eOperations name="addMember" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean">
      <eParameters name="m" eType="#//Member"/>
    </eOperations>
    <eOperations name="addLoan" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean">
      <eParameters name="m" eType="#//Member"/>
      <eParameters name="b" eType="#//Book"/>
    </eOperations>
    <eOperations name="addBook" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean">
      <eParameters name="b" eType="#//Book"/>
    </eOperations>
    <eOperations name="open">
      <eAnnotations source="http://tu-ilmenau.de/see/codegen">
        <details key="body" value="    this->setOpened(true);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="close">
      <eAnnotations source="http://tu-ilmenau.de/see/codegen">
        <details key="body" value="    this->setOpened(false);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="closed" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean">
      <eAnnotations source="http://tu-ilmenau.de/see/codegen">
        <details key="body" value="    return !this->isOpened();"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="books" upperBound="-1"
        eType="#//Book" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="members" upperBound="-1"
        eType="#//Member" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="loans" upperBound="-1"
        eType="#//Loan" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="opened" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="nbBooks" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Integer"
        defaultValueLiteral="3"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="writers" upperBound="-1"
        eType="#//Writer" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Member">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Book">
    <eAnnotations source="http://www.eclipse.org/OCL">
      <details key="OCL" value="context Book inv: self.copies > 0"/>
    </eAnnotations>
    <eOperations name="addCopies" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Integer">
      <eAnnotations source="http://tu-ilmenau.de/see/codegen">
        <details key="body" value="    m_copies += nbCopies;&#xA;    return m_copies;"/>
      </eAnnotations>
      <eParameters name="nbCopies" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Integer"/>
    </eOperations>
    <eOperations name="countCopies" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Integer">
      <eAnnotations source="http://tu-ilmenau.de/see/codegen">
        <details key="body" value="    return this->getCopies();"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="incrCopies">
      <eAnnotations source="http://tu-ilmenau.de/see/codegen">
        <details key="body" value="   m_copies++;"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="title" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="copies" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Integer"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="category" eType="#//BookCategory"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="available" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="writers" lowerBound="1"
        upperBound="-1" eType="#//Writer"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Loan">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="date" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDate"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="book" eType="#//Book"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="member" eType="#//Member"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Writer">
    <eOperations name="write">
      <eAnnotations source="http://www.eclipse.org/OCL">
        <details key="OCL" value="context Book inv: self.copies > 0"/>
      </eAnnotations>
      <eParameters name="b" eType="#//Book"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//String"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="BookCategory">
    <eLiterals name="MISTERY"/>
    <eLiterals name="BIOGRAPHY" value="1"/>
    <eLiterals name="HISTORY" value="2"/>
  </eClassifiers>
</ecore:EPackage>
